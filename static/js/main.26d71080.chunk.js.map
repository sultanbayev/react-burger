{"version":3,"sources":["components/burger-constructor/styles.module.css","components/modal/modal-overlay/styles.module.css","components/burger-ingredients/tab-bar/styles.module.css","pages/home/style.module.css","pages/profile-orders/style.module.css","components/app-header/app-logo/styles.module.css","components/main/style.module.css","components/burger-constructor/component-list/styles.module.css","services/hooks.ts","utils/cookie.ts","services/api.ts","services/actions/burger-ingredients.ts","services/actions/burger-constructor.ts","utils/constants.ts","components/burger-constructor/burger-component/burger-component.tsx","components/burger-constructor/dummy-component/dummy-component.tsx","components/burger-constructor/component-list/component-list.tsx","services/actions/order.ts","components/burger-constructor/order-info/order-info.tsx","components/modal/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","assets/images/confirm-order.svg","components/modal/order-details/order-details.tsx","components/burger-constructor/burger-constructor.tsx","components/burger-ingredients/tab-bar/tab-bar.tsx","components/burger-ingredients/ingredient-card/ingredient-card.tsx","components/burger-ingredients/ingredient-group/ingredient-group.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/home/home.tsx","pages/not-found/not-found.tsx","services/auth.ts","services/actions/user.ts","components/form-wrapper/form-wrapper.tsx","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/profile-nav/profile-nav.tsx","pages/profile/profile.tsx","components/modal/ingredient-details/ingredient-details.tsx","pages/ingredient/ingredient.tsx","utils/date-format.ts","components/orders-list/avatar/avatar.tsx","components/orders-list/avatar-group/avatar-group.tsx","components/orders-list/order-card/order-card.tsx","components/orders-list/order-list.tsx","services/actions/wsActions.ts","pages/profile-orders/profile-orders.tsx","components/orders-stats/order-column/order-column.tsx","components/orders-stats/order-stats.tsx","pages/feed/feed.tsx","components/feed-order-info/feed-order-info.tsx","pages/feed-order/feed-order.tsx","pages/profile-order/profile-order.tsx","components/app-header/nav-bar/nav-bar.tsx","components/app-header/app-logo/app-logo.tsx","components/app-header/app-header.tsx","components/main/main.tsx","components/layouts/base-layout.tsx","components/protected-route/protected-route.tsx","components/profile-form/profile-form.tsx","components/app/app.tsx","services/reducers/burger-ingredients.ts","services/reducers/burger-constructor.ts","services/reducers/order.ts","services/reducers/user.ts","services/reducers/wsReducer.ts","services/reducers/userWsReducer.ts","services/reducers/index.ts","services/middleware/socketMiddleware.ts","services/store.ts","index.tsx","components/feed-order-info/styles.module.css","components/modal/ingredient-details/styles.module.css","components/orders-list/order-card/styles.module.css","components/profile-nav/style.module.css","components/orders-list/avatar-group/styles.module.css","components/orders-stats/styles.module.css","components/burger-constructor/dummy-component/styles.module.css","components/app-header/nav-bar/styles.module.css","components/burger-constructor/order-info/styles.module.css","components/burger-ingredients/ingredient-card/styles.module.css","pages/login/style.module.css","pages/feed/style.module.css","components/orders-stats/order-column/styles.module.css","pages/feed-order/style.module.css","pages/profile-order/style.module.css","components/burger-constructor/burger-component/styles.module.css","components/modal/styles.module.css","pages/register/style.module.css","pages/reset-password/style.module.css","pages/profile/style.module.css","pages/ingredient/style.module.css","components/modal/order-details/styles.module.css","components/burger-ingredients/styles.module.css","components/burger-ingredients/ingredient-group/styles.module.css","pages/not-found/style.module.css","components/form-wrapper/style.module.css","pages/forgot-password/style.module.css","components/orders-list/styles.module.css","components/orders-list/avatar/styles.module.css","components/app-header/styles.module.css","components/profile-form/style.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","setAccessCookie","accessToken","indexOf","split","BASE_URL","sendData","endpoint","data","reqOptions","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","fetch","getResponse","res","ok","json","then","err","Promise","reject","ingredients","a","authorization","formData","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","INCREASE_INGREDIENT_COUNT","DECREASE_INGREDIENT_COUNT","RESET_INGREDIENTS_COUNT","getIngredientsFailed","type","getIngredientsThunk","dispatch","getIngredients","success","items","catch","ADD_CONSTRUCTOR_COMPONENT","REMOVE_CONSTRUCTOR_COMPONENT","REORDER_CONSTRUCTOR_COMPONENTS","CLEAR_CONSTRUCTOR_COMPONENTS","addConstructorComponentThunk","item","addConstructorComponent","increaseIngredientCount","clearComponentsAndResetCountsThunk","removeConstructorComponentThunk","removeConstructorComponent","decreaseIngredientCount","dndTypes","BurgerComponent","isLocked","component","index","moveComponent","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","current","hoverIndex","dragIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","useDrag","id","uuid","isDragging","drag","className","styles","text","price","thumbnail","image","style","opacity","drag_icon","handleClose","React","memo","DummyComponent","children","useMemo","dummy","dummy_top","join","dummy_bottom","ComponentList","state","burgerConstructor","bun","staffings","isHover","isOver","count","itemWithoutCount","useCallback","reordered","dragComponent","splice","list","outerList","length","ingredients_container","map","staffing","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","RESET_ORDER","getOrderFailed","fetchOrderThunk","sendOrder","number","order","toString","getOrderSuccess","OrderInfo","orderRequest","isAuthorised","user","ingredientsToSend","staffingIds","c","_id","history","useHistory","totalPrice","reduce","total","i","messages","order_info","submit","size","onClick","push","ModalOverlay","onClose","overlay","modalRoot","getElementById","Modal","useEffect","onEscPressed","e","code","addEventListener","removeEventListener","ReactDOM","createPortal","container","modal","close","OrderDetails","orderNumber","order_number","src","ConfirmedLogo","alt","BurgerConstructor","useState","open","setOpen","TabBar","active","setCurrent","setTab","tabValue","element","scrollIntoView","behavior","tab_bar","IngredientCard","ingredient","location","useLocation","card","to","pathname","background","IngredientGroup","setHeight","itemsRequest","store","burgerIngredients","groupRef","height","key","BurgerIngredients","buns","filter","sauces","mains","bunsHeight","setBunsHeights","saucesHeight","setSaucesHeights","mainsHeight","setMainsHeights","activeTab","setActiveTab","onScroll","scrollTop","currentTarget","groups","HomePage","DndProvider","backend","HTML5Backend","wrapper","NotFoundPage","link","tokenData","userData","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILED","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","PATCH_USER_REQUEST","PATCH_USER_SUCCESS","PATCH_USER_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","registerUserThunk","register","localStorage","setItem","refreshToken","message","console","error","loginUserThunks","login","forgotUserPasswordThunk","forgotPassword","resetUserPasswordThunk","resetPassword","getUserDataThunk","getUser","removeItem","refreshUserTokenThunk","toDispatchAgain","token","getItem","patchUserDataThunk","patchUser","logoutUserThunk","FormWrapper","LoginPage","email","password","form","setForm","passwordIcon","setPasswordIcon","passwordRef","loginRequest","loginErrorMessage","from","onChange","target","onSubmit","preventDefault","placeholder","icon","onIconClick","RegisterPage","registerRequest","registerErrorMessage","ForgotPasswordPage","setEmail","forgotPasswordSuccess","forgotPasswordRequest","ResetPasswordPage","resetPasswordSuccess","resetPasswordRequest","resetPasswordErrorMessage","isResetPassword","ProfileNav","links","find","menu","menu_item","activeClassName","exact","btn_logout","description","desc","ProfilePage","aside","content","IngredientDetails","header","details","image_large","info","info_item","calories","proteins","fat","carbohydrates","IngredientPage","useParams","itemsSuccess","setIngredient","getFormattedDate","date","parsedDate","parse","diff","valueOf","day","time","toLocaleTimeString","hour","minute","timeZone","days","Math","floor","daysFormat","n","text_forms","n1","abs","dayTextFormat","ComponentAvatar","avatar","img","ComponentAvatarGroup","max","renderItems","reverse","rest","group","more","slice","OrderCard","createdAt","status","updatedIngredients","setUpdatedIngredients","ingreds","forEach","found","findIndex","topDetails","heading","done","bottomDetails","OrderList","orders","page","withStatus","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_CONNECTION_CLOSE","USER_WS_CONNECTION_START","USER_WS_CONNECTION_SUCCESS","USER_WS_CONNECTION_CLOSED","USER_WS_CONNECTION_ERROR","USER_WS_GET_MESSAGE","USER_WS_CONNECTION_CLOSE","userWsInit","userWsClose","ProfileOrdersPage","userOrders","wsConnected","OrderColumn","title","columns","column","OrderStats","totalToday","ordersDone","ordersPending","statusContainer","glow","FeedPage","stats","FeedOrderInfo","setIngredients","ids","footer","FeedOrderPage","setOrder","o","ProfileOrderPage","NavBar","nav","inactive","AppLogo","logo","AppHeader","Main","main","BaseLayout","ProtectedRoute","render","ProfileForm","nameRef","emailRef","getUserRequest","patchUserErrorMessage","onInputEditClick","disabled","classList","remove","focus","onInputBlur","add","onBlur","App","ModalSwitch","action","goBack","path","initialState","itemsFailed","orderFailed","registerFailed","loginFailed","forgotPasswordFailed","resetPasswordFailed","getUserFailed","getUserErrorMessage","refreshTokenRequest","refreshTokenSuccess","refreshTokenFailed","refreshTokenErrorMessage","patchUserRequest","patchUserFailed","logoutRequest","logoutFailed","logoutErrorMessage","rootReducer","combineReducers","registerRequestFailed","loginRequestFailed","payload","socketMiddleware","wsUrl","wsActions","isUserSocket","socket","next","wsInit","wsClose","onOpen","onMessage","onError","WebSocket","onopen","event","onerror","onmessage","parsedData","restParsedData","onclose","userWsActions","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,UAAY,4B,oBCA9BD,EAAOC,QAAU,CAAC,QAAU,0B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,0B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,yB,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,OAAS,wB,oBCA5DD,EAAOC,QAAU,CAAC,KAAO,uB,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,yCCAzBD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,IAAM,oBAAoB,MAAQ,sBAAsB,SAAW,yBAAyB,sBAAwB,wC,uLCMzLC,EAA+CC,IAE/CC,EAAc,kBAAMC,e,yBCT5B,SAASC,EAAUC,GACtB,IAAMC,EAAUC,SAASC,OAAOC,MAE9B,IAAIC,OAAO,WAAaL,EAAKM,QAAQ,+BAAgC,QAAU,aAEjF,OAAOL,EAAUM,mBAAmBN,EAAQ,SAAMO,EAG/C,SAASC,EAAUT,EAAMU,EAAOC,GAEnC,IAAIC,GADJD,EAAQA,GAAS,IACDE,QAChB,GAAkB,iBAAPD,GAAmBA,EAAK,CACjC,IAAME,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAkB,IAANL,GACxBA,EAAMD,EAAME,QAAUC,EAEpBF,GAAOA,EAAIM,cACbP,EAAME,QAAUD,EAAIM,eAGtB,IAAIC,EAAgBnB,EAAO,KAD3BU,EAAQU,mBAAmBV,IAE3B,IAAK,IAAMW,KAAYV,EAAO,CAC5BQ,GAAiB,KAAOE,EACxB,IAAMC,EAAYX,EAAMU,IACN,IAAdC,IACFH,GAAiB,IAAMG,GAG3BpB,SAASC,OAASgB,EAOf,SAASI,EAAgBC,GACQ,IAAlCA,EAAYC,QAAQ,WACpBhB,EAAU,cAAee,EAAYE,MAAM,WAAW,QAAIlB,GCnCzD,IAAMmB,EAAW,wCAEjB,SAASC,EAASC,EAAkBC,GACvC,IAAMC,EAA0B,CAC5BC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,oBAEpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUX,IAEzB,OAAOY,MAAMf,EAAWE,EAAUE,GAG/B,SAASY,EAAYC,GACxB,OAAOA,EAAIC,GAAKD,EAAIE,OAASF,EAAIE,OAAOC,MAAK,SAAAC,GAAG,OAAIC,QAAQC,OAAOF,M,4CAGhE,WAAyBG,GAAzB,iBAAAC,EAAA,6DACGrB,EAA0B,CAC5BC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,mBAChBiB,cAAe,UAAYtD,EAAU,gBAEzCsC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUU,IAZtB,SAceT,MAAMf,EAAW,UAAWI,GAd3C,cAcGa,EAdH,yBAeID,EAAYC,IAfhB,4C,kEAkBA,4BAAAQ,EAAA,sEACeV,MAAMf,EAAW,gBADhC,cACGiB,EADH,yBAEID,EAAYC,IAFhB,4C,kEAKA,WAA8BU,GAA9B,eAAAF,EAAA,sEACexB,EAAS,kBAAmB0B,GAD3C,cACGV,EADH,yBAEID,EAAYC,IAFhB,4C,kEAKA,WAA6BU,GAA7B,eAAAF,EAAA,sEACexB,EAAS,wBAAyB0B,GADjD,cACGV,EADH,yBAEID,EAAYC,IAFhB,4C,sBChDA,IAAMW,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAyB,yBACzBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAA0B,0BAmD1BC,EAAuB,iBAAoC,CACpEC,KAAML,IAiBGM,EAAgC,kBACzC,SAACC,GACGA,EA7BkE,CACtEF,KAAMP,IDVH,WAAP,+BCuCQU,GACKlB,MAAK,SAACH,GA3BkB,IAACd,EA4BlBc,GAAOA,EAAIsB,QACXF,GA7BkBlC,EA6Bac,EAAId,KA7BsC,CACzFgC,KAAMN,EACNW,MAAOrC,KA6BSkC,EAASH,QAGhBO,OAAM,SAACpB,GACJgB,EAASH,UClFZQ,EAA4B,4BAC5BC,EAA+B,+BAC/BC,EAAiC,iCACjCC,EAA+B,+BAmD/BC,EAAyC,SAACC,GAAD,OAClD,SAACV,GACGA,EArB+B,SAACU,GAAD,MAAgE,CACnGZ,KAAMO,EACNK,QAmBaC,CAAwBD,IACjCV,EDD+B,SAACU,GAAD,MAAgE,CACnGZ,KAAMJ,EACNgB,QCDaE,CAAwBF,MAG5BG,EAA+C,kBACxD,SAACb,GACGA,EAZ4E,CAChFF,KAAMU,IAYFR,EDGkE,CACtEF,KAAMF,MCDGkB,EAA4C,SAACJ,GAAD,OACrD,SAACV,GACGA,EA5BkC,SAACU,GAAD,MAAmE,CACzGZ,KAAMQ,EACNI,QA0BaK,CAA2BL,IACpCV,EDR+B,SAACU,GAAD,MAAgE,CACnGZ,KAAMH,EACNe,QCMaM,CAAwBN,M,kBC7E5BO,EACG,aADHA,EAES,mB,OCehBC,GAA6C,SAAC,GAAyD,IAAvDpB,EAAsD,EAAtDA,KAAMqB,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAE9EC,EAAMC,iBAAuB,MAC7BxB,EAAWnE,IAMjB,EAA8B4F,YAAQ,CAClCC,OAAQT,EACRU,QAAS,SAACC,GACN,MAAO,CACHC,UAAWD,EAAQE,iBAG3BC,MAPkC,SAO5BrB,EAAqCkB,GAAgB,IAAD,EACtD,GAAKL,EAAIS,QAAT,CAIA,IACIC,EADEC,EAAYxB,EAAKW,MAGvB,QAAc7E,IAAV6E,GAMAa,KALAD,EAAaZ,GAKjB,CAGA,IAAMc,EAAiB,UAAGZ,EAAIS,eAAP,aAAG,EAAaI,wBACjCC,GAAgBF,EAAkBG,OAASH,EAAkBI,KAAO,EACpEC,EAA+BZ,EAAQa,kBACvCC,EAAeF,EAAgBA,EAAaG,EAAIR,EAAkBI,IAAO,KAC/E,GAAIG,EAAc,CACd,GAAIR,EAAYD,GAAcS,EAAeL,EACzC,OAEJ,GAAIH,EAAYD,GAAcS,EAAeL,EACzC,OAGRf,GAAiBA,EAAcY,EAAWD,GAC1CvB,EAAKW,MAAQY,OArCrB,mBAASJ,EAAT,KAASA,UAAae,EAAtB,KAyCA,EAA+BC,YAAQ,CACnC/C,KAAMmB,EACNP,KAAM,WACF,MAAO,CAAEoC,GAAI1B,EAAU2B,KAAM1B,UAEjCM,QAAS,SAACC,GAAD,MAAc,CACnBoB,WAAYpB,EAAQoB,iBAN5B,mBAASA,EAAT,KAASA,WAYT,OAFAC,EAVA,MAUKL,EAAKrB,IAGa,QAAnBH,EAAUtB,KACN,qBAAKoD,UAAWC,IAAO/B,UAAvB,SACI,cAAC,qBAAD,CACItB,KAAMA,EACNqB,SAAUA,EACViC,KAAMhC,EAAUpF,KAChBqH,MAAOjC,EAAUiC,MACjBC,UAAWlC,EAAUmC,UAI7B,sBAAKhC,IAAKA,EAAKiC,MAAO,CAAEC,QAAST,EAAa,EAAI,GAAKE,UAAWC,IAAO/B,UAAW,kBAAiBS,EAArG,WACOV,GAAY,qBAAK+B,UAAWC,IAAOO,UAAvB,SAAkC,cAAC,WAAD,CAAU5D,KAAK,cAChE,cAAC,qBAAD,CACIqB,SAAUA,EACViC,KAAMhC,EAAUpF,KAChBqH,MAAOjC,EAAUiC,MACjBC,UAAWlC,EAAUmC,MACrBI,YA5EG,WACf3D,EAASc,EAAgCM,WAkFlCwC,OAAMC,KAAK3C,I,oBCjGpB4C,GAA2C,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUjE,EAAW,EAAXA,KAEpD0D,EAAQQ,mBAAQ,WAClB,OAAQlE,GACJ,IAAK,MACD,MAAO,CAACqD,KAAOc,MAAOd,KAAOe,WAAWC,KAAK,KACjD,IAAK,SACD,MAAO,CAAChB,KAAOc,MAAOd,KAAOiB,cAAcD,KAAK,KACpD,QACI,OAAOhB,KAAOc,SAEvB,CAACnE,IAEJ,OACI,qBAAKoD,UAAWM,EAAhB,SACI,mBAAGN,UAAU,8BAAb,SAA4Ca,OAKzCF,kBAAKC,I,uBC2DLO,OA5Ef,WACI,IAAMrE,EAAWnE,IACjB,EAA2BF,GAAY,SAAA2I,GAAK,OAAIA,EAAMC,qBAA9CC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,UAEb,EAAiBhD,YAAQ,CACrBC,OAAQT,EACRU,QAAS,SAAAC,GAAO,MAAK,CACjB8C,QAAS9C,EAAQ+C,WAErB/B,KALqB,SAKhBlC,GACqCA,EAA9BkE,MAAR,IAAkBC,EAAlB,YAAsCnE,EAAtC,IACAV,EAASS,EAA6B,2BAC/BoE,GAD8B,IAEjC9B,KAAMA,sBATTH,EAAT,oBAcMtB,EAAgBwD,uBAAY,SAAC5C,EAAWD,GAC1C,IAAM8C,EAAS,YAAQN,GACjBO,EAAgBD,EAAU7C,GAChC6C,EAAUE,OAAO/C,EAAW,GAC5B6C,EAAUE,OAAOhD,EAAY,EAAG+C,GAChChF,EAAS,CACDF,KAAMS,EACNwE,UAAWA,MAGpB,CAACN,IAEJ,OACI,qBAAIlD,IAAKqB,EAAMM,UAAS,UAAKC,IAAO+B,KAAZ,YAAoB/B,IAAOgC,WAAnD,UACMX,EACE,oBAAItB,UAAWC,IAAOqB,IAAtB,SACI,cAAC,GAAD,CACI1E,KAAK,MACLqB,UAAU,EACVC,UAAS,2BAAMoD,GAAN,IAAWxI,KAAMwI,EAAIxI,KAAO,oCAI7C,oBAAIkH,UAAWC,IAAOc,MAAtB,SACI,cAAC,GAAD,CAAgBnE,KAAM,MAAtB,yFAGL2E,GAAaA,EAAUW,OACpB,oBAAIlC,UAAWC,IAAOkC,sBAAtB,SACE,oBAAInC,UAAWC,IAAO+B,KAAtB,SACMT,EAAUa,KAAI,SAAClE,EAAWC,GACpB,OAAQ,oBAAyB6B,UAAWC,IAAOoC,SAA3C,SACJ,cAAC,GAAD,CAAiBnE,UAAWA,EAAWC,MAAOA,EAAOC,cAAeA,KADvDF,EAAU2B,aAOzC,oBAAIG,UAAWC,IAAOc,MAAtB,SACE,cAAC,GAAD,oIAGNO,EACI,oBAAItB,UAAWC,IAAOqB,IAAtB,SACE,cAAC,GAAD,CACI1E,KAAK,SACLqB,UAAU,EACVC,UAAS,2BAAMoD,GAAN,IAAWxI,KAAMwI,EAAIxI,KAAO,8BAG3C,oBAAIkH,UAAWC,IAAOc,MAAtB,SACE,cAAC,GAAD,CAAgBnE,KAAM,SAAtB,uF,oBC5EP0F,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAc,cAkCdC,GAAiB,iBAA8B,CACxD9F,KAAM4F,KAYGG,GAA4B,SAAC1G,GACtC,OAAO,SAACa,GACJA,EAnBsD,CAC1DF,KAAM0F,KPdH,SAAP,kCOiCQM,CAAU3G,GACLJ,MAAK,SAACH,GACH,GAAIA,GAAOA,EAAIsB,QAAS,CACpB,IAAM6F,EAASnH,EAAIoH,MAAMD,OAAOE,WAChCjG,EAhBW,SAAC+F,GAAD,MAA6C,CACxEjG,KAAM2F,GACNM,UAcyBG,CAAgBH,IACzB/F,EAASa,UAETb,EAAS4F,SAGhBxF,OAAM,SAACpB,GACJgB,EAAS4F,W,QCAVO,OA7Df,WAEI,IAAMnG,EAAWnE,IACjB,EAAuDF,GAAY,SAAA2I,GAAK,MAAK,CACzEE,IAAKF,EAAMC,kBAAkBC,IAC7BC,UAAWH,EAAMC,kBAAkBE,UACnC2B,aAAc9B,EAAM0B,MAAMI,aAC1BC,aAAc/B,EAAMgC,KAAKD,iBAJrB7B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,UAAW2B,EAAxB,EAAwBA,aAAcC,EAAtC,EAAsCA,aAOhCE,EAAqCvC,mBAAQ,WAC/C,GAAIQ,GAA4B,IAArBC,EAAUW,OAAc,CAC/B,IAAMoB,EAAc/B,EAAUa,KAAI,SAAAmB,GAAC,OAAIA,EAAEC,OACzC,MAAM,CACFlC,EAAIkC,IACJlC,EAAIkC,KAFR,mBAGOF,IAGX,OAAO,OACR,CAAChC,EAAKC,IAEHkC,EAAUC,eAaVC,EAAa7C,mBAAQ,WAGvB,OAFiBQ,EAAkB,EAAZA,EAAInB,MAAY,GACXoB,EAAUqC,QAAO,SAACC,EAAOC,GAAR,OAAcD,EAAQC,EAAE3D,QAAO,KAE7E,CAACmB,EAAKC,IAET,OACI,gCACI,qBAAKvB,UAAWC,KAAO8D,SAAvB,SACMb,GAAgB,mBAAGlD,UAAU,mCAAb,wGAEtB,sBAAKA,UAAWC,KAAO+D,WAAvB,UACI,sBAAKhE,UAAWC,KAAO4D,MAAvB,UACI,mBAAG7D,UAAU,oCAAb,SAAkD2D,IAClD,cAAC,eAAD,CAAc/G,KAAK,eAEvB,qBAAKoD,UAAWC,KAAOgE,OAAvB,SACI,cAAC,SAAD,CAAQrH,KAAK,UAAUsH,KAAK,QAAQC,QA5BhC,WACXhB,EAGGE,GAEAvG,EAAS6F,GADQ,CAAE1G,YAAaoH,KAHpCI,EAAQW,KAAK,WA0BL,sG,yCCpDdC,GAA6C,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjD,OACI,qBAAKtE,UAAWC,KAAOsE,QAASJ,QAASG,KAIlC5D,OAAMC,KAAK0D,ICPpBG,GAAYxL,SAASyL,eAAe,cAOpCC,GAAyB,SAAC,GAA2B,IAAzB7D,EAAwB,EAAxBA,SAAUyD,EAAc,EAAdA,QAUxC,OARAK,qBAAU,WACN,IAAMC,EAAe,SAACC,GACH,WAAXA,EAAEC,MAAmBR,KAG7B,OADAtL,SAAS+L,iBAAiB,UAAWH,GAC9B,kBAAM5L,SAASgM,oBAAoB,UAAWJ,MACtD,CAACN,IAEGW,IAASC,aAER,sBAAKlF,UAAWC,KAAOkF,UAAvB,UACI,sBAAKnF,UAAWC,KAAOmF,MAAvB,UACI,qBAAKpF,UAAWC,KAAOoF,MAAvB,SACI,cAAC,YAAD,CAAWzI,KAAK,UAAUuH,QAASG,MAErCzD,KAEN,cAAC,GAAD,CAAcyD,QAASA,OAE5BE,KAII9D,OAAMC,KAAK+D,I,oBCtCX,OAA0B,0CCUnCY,GAAuC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEtCzI,EAAWnE,IASjB,OAPAgM,qBAAU,WACN,OAAO,WACH7H,ELkCwC,CAChDF,KAAM6F,QKhCH,IAGC,sBAAKzC,UAAWC,KAAOkF,UAAvB,UACI,oBAAInF,UAAW,oCAAsCC,KAAOuF,aAA5D,SAA2ED,IAC3E,mBAAGvF,UAAU,6BAAb,iIACA,qBAAKA,UAAU,cAAf,SACI,qBAAKyF,IAAKC,GAAeC,IAAI,iBAEjC,mBAAG3F,UAAU,mCAAb,qJACA,mBAAGA,UAAU,kDAAb,gQAKGU,OAAMC,KAAK2E,ICCXM,OA3Bf,WAEI,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMzB,EAAU1C,uBAAY,WACxBmE,GAAQ,KACT,IAEKlD,EAAWpK,GAAY,SAAA2I,GAAK,OAAIA,EAAM0B,SAAtCD,OAQR,OANA8B,qBAAU,WACD9B,GACDkD,GAAQ,KAEb,CAAClD,IAGA,qCACI,0BAAS7C,UAAWC,IAAOkF,UAA3B,UACI,cAAC,GAAD,IACA,cAAC,GAAD,OAEDW,GAAQjD,GAAW,cAAC,GAAD,CAAOyB,QAASA,EAAhB,SAAyB,cAAC,GAAD,CAAciB,YAAa1C,U,yCCtBhFmD,GAAsB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,EAA8BvF,IAAMmF,SAAS,QAA7C,mBAAO/G,EAAP,KAAgBoH,EAAhB,KAEAvB,qBAAU,WACNuB,EAAWD,KACZ,CAACA,IAEJ,IAAME,EAAS,SAACC,GACZF,EAAWE,GACX,IAAMC,EAAUrN,SAASyL,eAAe2B,GACpCC,GAASA,EAAQC,eAAe,CAAEC,SAAU,YAGpD,OACI,sBAAKvG,UAAWC,KAAOuG,QAAvB,UACI,cAAC,MAAD,CAAKhN,MAAM,OAAOyM,OAAoB,SAAZnH,EAAoBqF,QAASgC,EAAvD,4CACA,cAAC,MAAD,CAAK3M,MAAM,SAASyM,OAAoB,WAAZnH,EAAsBqF,QAASgC,EAA3D,4CACA,cAAC,MAAD,CAAK3M,MAAM,QAAQyM,OAAoB,UAAZnH,EAAqBqF,QAASgC,EAAzD,4DAKGzF,OAAMC,KAAKqF,I,gDCjBpBS,GAA2C,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAE1CC,EAAWC,eAEjB,EAAiBjH,YAAQ,CACrB/C,KAAMmB,EACNP,KAAMkJ,IAFD3G,EAAT,oBAKA,OACI,0BAAS1B,IAAK0B,EAAMC,UAAWC,KAAO4G,KAAtC,UACI,cAAC,KAAD,CACIC,GAAI,CACAC,SAAS,eAAD,OAAiBL,EAAWlD,KACpCpC,MAAO,CACH4F,WAAYL,EACZD,WAAYA,IALxB,SAQI,qBAAK1G,UAAWC,KAAOI,MAAOoF,IAAKiB,EAAWrG,MAAOsF,IAAKe,EAAW5N,SAErE,sBAAKkH,UAAWC,KAAOE,MAAvB,UACI,mBAAGH,UAAU,qCAAb,SAAmD0G,EAAWvG,QAC9D,cAAC,eAAD,CAAcvD,KAAK,eAE3B,cAAC,KAAD,CACIkK,GAAI,CACAC,SAAS,eAAD,OAAiBL,EAAWlD,KACpCpC,MAAO,CACH4F,WAAYL,EACZD,WAAYA,IALxB,SAQI,qBAAK1G,UAAWC,KAAOnH,KAAvB,SACI,oBAAIkH,UAAU,8BAAd,SAA6C0G,EAAW5N,aAG3D4N,EAAWhF,OAA8B,IAArBgF,EAAWhF,OAAgB,cAAC,UAAD,CAASA,MAAOgF,EAAWhF,MAAOwC,KAAK,gBAKxFxD,OAAMC,KAAK8F,IC1CpBQ,GAAwC,SAAC,GAAoC,IAAlCnO,EAAiC,EAAjCA,KAAM8G,EAA2B,EAA3BA,GAAI3C,EAAuB,EAAvBA,MAAOiK,EAAgB,EAAhBA,UAEtDC,EAAiB1O,GAAY,SAAA2O,GAAK,OAAIA,EAAMC,qBAA5CF,aACFG,EAAWhJ,iBAAuB,MAUxC,OARAqG,qBAAU,WACN,GAAI2C,GAAYA,EAASxI,QAAS,CAC9B,IAAMyI,EAASD,EAASxI,QAAQI,wBAAwBqI,OACxDL,EAAUK,MAGf,CAACtK,IAGA,0BAASoB,IAAKiJ,EAAd,UACI,oBAAI1H,GAAIA,EAAII,UAAU,kCAAtB,SAAyDlH,IACvDqO,EACI,mBAAGnH,UAAU,oCAAb,iEACA,oBAAIA,UAAWC,KAAO+B,KAAtB,SAEuB,IAAjB/E,EAAMiF,OACJ,mBAAGlC,UAAU,8BAAb,2HACA/C,EAAMmF,KAAI,SAACsE,EAAYc,GACrB,OAAO,oBAAcxH,UAAWC,KAAOzC,KAAhC,SACC,cAAC,GAAD,CAAgBkJ,WAAYA,KADpBc,YAW7B9G,OAAMC,KAAKsG,ICIXQ,OA7Cf,WAEI,IAAQxK,EAAUxE,GAAY,SAAA2I,GAAK,OAAIA,EAAMiG,qBAArCpK,MAEFyK,EAAO5G,mBAAQ,WACjB,OAAO7D,EAAM0K,QAAO,SAAA7D,GAAC,MAAe,QAAXA,EAAElH,UAC5B,CAACK,IAEE2K,EAAS9G,mBAAQ,WACnB,OAAO7D,EAAM0K,QAAO,SAAA7D,GAAC,MAAe,UAAXA,EAAElH,UAC5B,CAACK,IAEE4K,EAAQ/G,mBAAQ,WAClB,OAAO7D,EAAM0K,QAAO,SAAA7D,GAAC,MAAe,SAAXA,EAAElH,UAC5B,CAACK,IAEJ,EAAqC4I,mBAAS,GAA9C,mBAAOiC,EAAP,KAAmBC,EAAnB,KACA,EAAyClC,mBAAS,GAAlD,mBAAOmC,EAAP,KAAqBC,EAArB,KACA,EAAuCpC,mBAAS,GAAhD,mBAAOqC,EAAP,KAAoBC,EAApB,KACA,EAAkCtC,mBAAS,QAA3C,mBAAOuC,EAAP,KAAkBC,EAAlB,KAaA,OACI,0BAASrI,UAAWC,KAAOkF,UAA3B,UACI,oBAAInF,UAAU,uCAAd,mGACA,cAAC,GAAD,CAAQiG,OAAQmC,IAChB,0BAASE,SAfI,SAACzD,GAClB,IAAM0D,EAAY1D,EAAE2D,cAAcD,UAC9BA,GAAa,GAAKA,EAAYT,EAC9BO,EAAa,QACNE,GAAaT,GAAcS,EAAYT,EAAaE,EAC3DK,EAAa,UACNE,GAAaT,EAAaE,GAAgBO,EAAYT,EAAaE,EAAeE,GACzFG,EAAa,UAQoBrI,UAAWC,KAAOwI,OAAnD,UACI,cAAC,GAAD,CAAiB7I,GAAG,OAAOsH,UAAWa,EAAgBjP,KAAK,iCAAQmE,MAAOyK,IAC1E,cAAC,GAAD,CAAiB9H,GAAG,SAASsH,UAAWe,EAAkBnP,KAAK,iCAAQmE,MAAO2K,IAC9E,cAAC,GAAD,CAAiBhI,GAAG,QAAQsH,UAAWiB,EAAiBrP,KAAK,6CAAUmE,MAAO4K,W,yCC1B/Ea,OAbf,WACI,OACI,mCACI,cAACC,GAAA,EAAD,CAAaC,QAASC,KAAtB,SACI,sBAAK7I,UAAWC,KAAO6I,QAAvB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,Y,oBCILC,OAbf,WACI,OACI,qBAAK/I,UAAWC,KAAO6I,QAAvB,SACI,gCACI,mBAAG9I,UAAU,4BAAb,4HACA,mBAAGA,UAAU,8BAAb,SACI,cAAC,KAAD,CAAM8G,GAAG,IAAI9G,UAAWC,KAAO+I,KAA/B,oI,2ECLb,WAAwB5M,GAAxB,eAAAF,EAAA,sEACexB,EAAS,iBAAkB0B,GAD1C,cACGV,EADH,yBAEID,EAAYC,IAFhB,4C,oEAKA,WAAqBU,GAArB,eAAAF,EAAA,sEACexB,EAAS,cAAe0B,GADvC,cACGV,EADH,yBAEID,EAAYC,IAFhB,4C,oEAKA,8BAAAQ,EAAA,6DACGrB,EAA0B,CAC5BC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,mBAChBiB,cAAe,UAAYtD,EAAU,gBAEzCsC,SAAU,SACVC,eAAgB,eAXjB,SAaeI,MAAMf,EAAW,aAAcI,GAb9C,cAaGa,EAbH,yBAcID,EAAYC,IAdhB,4C,oEAiBA,WAA4BuN,GAA5B,eAAA/M,EAAA,sEACexB,EAAS,cAAeuO,GADvC,cACGvN,EADH,yBAEID,EAAYC,IAFhB,4C,oEAKA,WAAyBwN,GAAzB,iBAAAhN,EAAA,6DACGrB,EAA0B,CAC5BC,OAAQ,QACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACL,eAAgB,mBAChBiB,cAAe,UAAYtD,EAAU,gBAEzCsC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU2N,IAZtB,SAce1N,MAAMf,EAAW,aAAcI,GAd9C,cAcGa,EAdH,yBAeID,EAAYC,IAfhB,4C,sBC7BA,IAAMyN,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAkB,kBAClBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAe,eACfC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAwB,wBACxBC,GAAmB,mBACnBC,GAAmB,kBACnBC,GAAkB,kBAClBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAgB,gBA6IhBC,GAA8B,SAACvO,GAAD,OACvC,SAACU,GACGA,EAAS,CACLF,KAAMuM,KD1KX,SAAP,mCC4KQyB,CAASxO,GACJP,MAAK,SAAAH,GACEA,EAAIsB,UACJ3C,EAAgBqB,EAAIpB,aACpBuQ,aAAaC,QAAQ,eAAgBpP,EAAIqP,cACzCjO,EAAS,CACLF,KAAMwM,GACNhG,KAAM1H,EAAI0H,WAGnBlG,OAAM,SAAApB,GACLgB,EAAS,CACLF,KAAMyM,GACN2B,QAASlP,EAAIkP,UAEjBC,QAAQC,MAAMpP,QAIjBqP,GAA4B,SAAC/O,GAAD,OACrC,SAACU,GACGA,EAAS,CACLF,KAAM0M,KD7LX,SAAP,mCC+LQ8B,CAAMhP,GACDP,MAAK,SAAAH,GACEA,EAAIsB,UACJ3C,EAAgBqB,EAAIpB,aACpBuQ,aAAaC,QAAQ,eAAgBpP,EAAIqP,cACzCjO,EAAS,CACLF,KAAM2M,GACNnG,KAAM1H,EAAI0H,WAGnBlG,OAAM,SAAApB,GACLgB,EAAS,CACLF,KAAM4M,GACNwB,QAASlP,EAAIkP,UAEjBC,QAAQC,MAAMpP,QAIjBuP,GAAoC,SAACjP,GAAD,OAC7C,SAACU,GACGA,EAAS,CACLF,KAAM6M,KrB/KX,SAAP,kCqBiLQ6B,CAAelP,GACVP,MAAK,SAAAH,GACEA,EAAIsB,UACJ6N,aAAaC,QAAQ,kBAAmB,QACxChO,EAAS,CACLF,KAAM8M,SAGfxM,OAAM,SAAApB,GACLgB,EAAS,CACLF,KAAM+M,KAEVsB,QAAQC,MAAMpP,QAIjByP,GAAmC,SAACnP,GAAD,OAC5C,SAACU,GACGA,EAAS,CACLF,KAAMgN,KrB/LX,SAAP,kCqBiMQ4B,CAAcpP,GACTP,MAAK,SAAAH,GACEA,EAAIsB,SACJF,EAAS,CACLF,KAAMiN,QAGf3M,OAAM,SAAApB,GACLgB,EAAS,CACLF,KAAMkN,GACNkB,QAASlP,EAAIkP,UAEjBC,QAAQC,MAAMpP,QAIjB2P,GAA6B,SAA7BA,IAA6B,OACtC,SAAC3O,GACGA,EAAS,CACLF,KAAMmN,KD1PX,WAAP,gCC4PQ2B,GAAU7P,MAAK,SAAAH,GACPA,EAAIsB,UACJ6N,aAAac,WAAW,mBACxB7O,EAAS,CACLF,KAAMoN,GACN5G,KAAM1H,EAAI0H,WAGnBlG,OAAM,SAAApB,GACe,gBAAhBA,EAAIkP,SAA6C,kBAAhBlP,EAAIkP,QACrClO,EAAS8O,GAAsBH,KAE/B3O,EAAS,CACLF,KAAMqN,GACNe,QAASlP,EAAIkP,UAEjBC,QAAQC,MAAMpP,SAKjB8P,GAAkC,SAACC,GAAD,OAC3C,SAAC/O,GACGA,EAAS,CACLF,KAAMsN,KAEV,IAAM4B,EAAQjB,aAAakB,QAAQ,gBAC/BD,GDtQL,SAAP,mCCuQYf,CAAa,CAAEe,MAAOA,IACjBjQ,MAAK,SAAAH,GACEA,EAAIsB,UACJ3C,EAAgBqB,EAAIpB,aACpBuQ,aAAaC,QAAQ,eAAgBpP,EAAIqP,cACzCjO,EAAS,CACLF,KAAMuN,KAEVrN,EAAS+O,SAEd3O,OAAM,SAAApB,GACLgB,EAAS,CACLF,KAAMwN,GACNY,QAASlP,EAAIkP,UAEjBC,QAAQC,MAAMpP,QAMrBkQ,GAA+B,SAAC9C,GAAD,OACxC,SAACpM,GACGA,EAAS,CACLF,KAAMyN,KD1RX,SAAP,mCC4RQ4B,CAAU/C,GAAUrN,MAAK,SAAAH,GACjBA,EAAIsB,SACJF,EAAS,CACLF,KAAM0N,GACNlH,KAAM1H,EAAI0H,UAGnBlG,OAAM,SAAApB,GACe,gBAAhBA,EAAIkP,SAA6C,kBAAhBlP,EAAIkP,QACrClO,EAAS8O,GAAsBH,MAE/B3O,EAAS,CACLF,KAAM2N,GACNS,QAASlP,EAAIkP,UAEjBC,QAAQC,MAAMpP,SAKjBoQ,GAA4B,kBACrC,SAACpP,GACGA,EAAS,CACLF,KAAM4N,KAEV,IDnSevB,ECmST6C,EAAQjB,aAAakB,QAAQ,gBAC/BD,IDpSW7C,ECqSJ,CAAE6C,MAAOA,GDpSjBpR,EAAS,eAAgBuO,GAAWpN,KAAKJ,ICqSnCI,MAAK,SAAAH,GACEA,EAAIsB,UtB7TxBzD,EsB8TiC,ctB9TjB,KAAM,CAAEI,SAAU,IsB+TdkR,aAAac,WAAW,gBACxB7O,EAAS,CACLF,KAAM6N,KAEV3N,EAASa,SAEdT,OAAM,SAAApB,GACLgB,EAAS,CACLF,KAAM8N,GACNM,QAASlP,EAAIkP,UAEjBC,QAAQC,MAAMpP,Q,oBCnW5BqQ,GAA2C,SAAC,GAAkB,IAAhBtL,EAAe,EAAfA,SAChD,OACI,qBAAKb,UAAWC,KAAO6I,QAAvB,SACI,qBAAK9I,UAAWC,KAAOkF,UAAvB,SACMtE,OAMHH,OAAMC,KAAKwL,ICuFXC,OA/Ff,WACI,IAWkB,EAXlB,EAAwBvG,mBAAS,CAC7BwG,MAAO,GACPC,SAAU,KAFd,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAAwC3G,mBAAc,YAAtD,mBAAO4G,EAAP,KAAqBC,EAArB,KACMC,EAAcrO,iBAAyB,MACvCxB,EAAWnE,IACXgO,EAAWC,eAEjB,EAA0DnO,GAAY,SAAA2I,GAAK,OAAIA,EAAMgC,QAA7EwJ,EAAR,EAAQA,aAAczJ,EAAtB,EAAsBA,aAAc0J,EAApC,EAAoCA,kBAEpC,GAAI1J,EACA,iBAAIwD,EAASvF,aAAb,aAAI,EAAgB0L,MACR,cAAC,KAAD,CAAUhG,GAAKH,EAASvF,MAAM0L,OAElC,cAAC,KAAD,CAAUhG,GAAI,CAAEC,SAAU,OAGtC,IAAMgG,EAAW,SAAAlI,GAAC,OAAI2H,EAAQ,2BAAKD,GAAN,mBAAa1H,EAAEmI,OAAOlU,KAAO+L,EAAEmI,OAAOxT,UAsBnE,OAAIoT,EAEI,cAAC,GAAD,UACI,8BAAK,mBAAG5M,UAAU,6BAAb,mDAMb,eAAC,GAAD,WACI,oBAAIA,UAAU,6BAAd,sCACA,uBAAMiN,SA/BG,SAACpI,GACdA,EAAEqI,iBACF,IAAM9Q,EAAQ,eAAQmQ,GAClBnQ,EAASiQ,OAASjQ,EAASkQ,UAC3BxP,EAASqO,GAAgB/O,KA2BC4D,UAAWC,KAAOsM,KAA5C,UACI,qBAAKvM,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,QACNuQ,YAAa,SACb3T,MAAO+S,EAAKF,MACZvT,KAAM,QACNiU,SAAUA,MAGlB,qBAAK/M,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,WACNwQ,KAAMX,EACNY,YArCA,WACZV,EAAY7N,UACqB,aAA7B6N,EAAY7N,QAAQlC,MACpB+P,EAAY7N,QAAQlC,KAAO,OAC3B8P,EAAgB,cAEhBC,EAAY7N,QAAQlC,KAAO,WAC3B8P,EAAgB,eA+BRS,YAAa,uCACb3T,MAAO+S,EAAKD,SACZjO,IAAKsO,EACL7T,KAAM,WACNiU,SAAUA,MAGhBF,GACE,qBAAK7M,UAAS,eAAUC,KAAOiL,OAA/B,SACI,mBAAGlL,UAAU,8BAAb,SAA6C6M,MAGrD,qBAAK7M,UAAU,OAAf,SAAsB,cAAC,SAAD,CAAQpD,KAAK,UAAUsH,KAAK,SAA5B,iDAE1B,8BACI,oBAAGlE,UAAU,8BAAb,gJACI,cAAC,KAAD,CAAM8G,GAAG,YAAY9G,UAAWC,KAAO+I,KAAvC,+HAGR,8BACI,oBAAGhJ,UAAU,8BAAb,2FACI,cAAC,KAAD,CAAM8G,GAAG,mBAAmB9G,UAAWC,KAAO+I,KAA9C,oI,oBCMLsE,OA/Ff,WACI,IAAMxQ,EAAWnE,IACjB,EAAwBkN,mBAAS,CAC7B/M,KAAM,GACNuT,MAAO,GACPC,SAAU,KAHd,mBAAOC,EAAP,KAAaC,EAAb,KAKA,EAAwC3G,mBAAc,YAAtD,mBAAO4G,EAAP,KAAqBC,EAArB,KACMC,EAAcrO,iBAAyB,MAE7C,EAAgE7F,GAAY,SAAA2I,GAAK,OAAIA,EAAMgC,QAAnFmK,EAAR,EAAQA,gBAAiBpK,EAAzB,EAAyBA,aAAcqK,EAAvC,EAAuCA,qBAEvC,GAAIrK,EAAc,OAAQ,cAAC,KAAD,CAAU2D,GAAI,CAAEC,SAAU,OAEpD,IAQMgG,EAAW,SAAAlI,GAAC,OAAI2H,EAAQ,2BAAKD,GAAN,mBAAa1H,EAAEmI,OAAOlU,KAAO+L,EAAEmI,OAAOxT,UAcnE,OAAI+T,EAEI,cAAC,GAAD,UACI,mBAAGvN,UAAU,6BAAb,iDAMR,eAAC,GAAD,WACI,oBAAIA,UAAU,6BAAd,gFACA,uBAAMiN,SAjCG,SAACpI,GACdA,EAAEqI,iBACF,IAAM9Q,EAAQ,eAAQmQ,GAClBnQ,EAASiQ,OAASjQ,EAASkQ,UAAYlQ,EAAStD,MAChDgE,EAAS6N,GAAkBvO,KA6BD4D,UAAWC,KAAOsM,KAA5C,UACI,qBAAKvM,UAAU,OAAf,SAAsB,cAAC,QAAD,CAClBpD,KAAM,OACNuQ,YAAa,qBACb3T,MAAO+S,EAAKzT,KACZA,KAAM,OACNiU,SAAUA,MAGd,qBAAK/M,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,QACNuQ,YAAa,SACb3T,MAAO+S,EAAKF,MACZvT,KAAM,QACNiU,SAAUA,MAGlB,qBAAK/M,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,WACNwQ,KAAMX,EACNY,YA7CA,WACZV,EAAY7N,UACqB,aAA7B6N,EAAY7N,QAAQlC,MACpB+P,EAAY7N,QAAQlC,KAAO,OAC3B8P,EAAgB,cAEhBC,EAAY7N,QAAQlC,KAAO,WAC3B8P,EAAgB,eAuCRS,YAAa,uCACb3T,MAAO+S,EAAKD,SACZjO,IAAKsO,EACL7T,KAAM,WACNiU,SAAUA,MAGhBS,GACE,qBAAKxN,UAAS,eAAUC,KAAOiL,OAA/B,SACI,mBAAGlL,UAAU,8BAAb,SAA6CwN,MAGrD,qBAAKxN,UAAU,OAAf,SACI,cAAC,SAAD,CAAQpD,KAAK,UAAUsH,KAAK,SAA5B,+HAGR,8BACI,oBAAGlE,UAAU,8BAAb,qIACI,cAAC,KAAD,CAAM8G,GAAG,SAAS9G,UAAWC,KAAO+I,KAApC,qD,oBCnCLyE,OArDf,WACI,MAA0B5H,mBAAS,IAAnC,mBAAOwG,EAAP,KAAcqB,EAAd,KAEM5Q,EAAWnE,IAEjB,EAAuEF,GAAY,SAAA2I,GAAK,OAAIA,EAAMgC,QAA1FuK,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,sBAE/B,OAFA,EAAsDzK,aAE5B,cAAC,KAAD,CAAU2D,GAAI,CAAEC,SAAU,OAUhD4G,EAA+B,cAAC,KAAD,CAAU7G,GAAI,oBAE7C8G,EAEI,cAAC,GAAD,UACI,mBAAG5N,UAAU,6BAAb,iDAMR,eAAC,GAAD,WACI,oBAAIA,UAAU,6BAAd,uIACA,uBAAMiN,SArBG,SAACpI,GACdA,EAAEqI,iBACF,IAAM9Q,EAAW,CAAEiQ,MAAOA,GACtBjQ,EAASiQ,OACTvP,EAASuO,GAAwBjP,KAiBP4D,UAAWC,KAAOsM,KAA5C,UACI,qBAAKvM,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,QACNuQ,YAAa,oDACb3T,MAAO6S,EACPvT,KAAM,QACNiU,SAnCH,SAAAlI,GAAC,OAAI6I,EAAS7I,EAAEmI,OAAOxT,YAsC5B,qBAAKwG,UAAU,OAAf,SACI,cAAC,SAAD,CAAQpD,KAAK,UAAUsH,KAAK,SAA5B,2FAGR,8BACI,oBAAGlE,UAAU,8BAAb,6GACI,cAAC,KAAD,CAAM8G,GAAG,SAAS9G,UAAWC,KAAO+I,KAApC,qD,oBCqDL6E,OAnGf,WACI,MAAwBhI,mBAAS,CAC7BiG,MAAO,GACPQ,SAAU,KAFd,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAAwC3G,mBAAc,YAAtD,mBAAO4G,EAAP,KAAqBC,EAArB,KACMC,EAAcrO,iBAAyB,MACvCxB,EAAWnE,IAEjB,EAKIF,GAAY,SAAA2O,GAAK,OAAIA,EAAMhE,QAJ3B0K,EADJ,EACIA,qBACAC,EAFJ,EAEIA,qBACAC,EAHJ,EAGIA,0BAIJ,GAPA,EAII7K,aAGc,OAAQ,cAAC,KAAD,CAAU2D,GAAI,MAExC,IAAMmH,EAAkBpD,aAAakB,QAAQ,mBAE7C,IAAKkC,GAAuC,SAApBA,EACpB,OAAQ,cAAC,KAAD,CAAUnH,GAAI,qBAG1B,IAQMiG,EAAW,SAAAlI,GAAC,OAAI2H,EAAQ,2BAAKD,GAAN,mBAAa1H,EAAEmI,OAAOlU,KAAO+L,EAAEmI,OAAOxT,UAcnE,OAAIsU,EAA8B,cAAC,KAAD,CAAUhH,GAAI,WAE5CiH,EAEI,cAAC,GAAD,UACI,mBAAG/N,UAAU,6BAAb,iDAMR,eAAC,GAAD,WACI,oBAAIA,UAAU,6BAAd,uIACA,uBAAMiN,SAnCG,SAACpI,GACdA,EAAEqI,iBACF,IAAM9Q,EAAQ,eAAQmQ,GAClBnQ,EAASkQ,UAAYlQ,EAAS0P,OAC9BhP,EAASyO,GAAuBnP,KA+BN4D,UAAWC,KAAOsM,KAA5C,UACI,qBAAKvM,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,WACNwQ,KAAMX,EACNY,YA9BA,WACbV,EAAY7N,UACsB,aAA7B6N,EAAY7N,QAAQlC,MACpB+P,EAAY7N,QAAQlC,KAAO,OAC3B8P,EAAgB,cAEhBC,EAAY7N,QAAQlC,KAAO,WAC3B8P,EAAgB,eAwBRS,YAAa,iHACb3T,MAAO+S,EAAKD,SACZjO,IAAKsO,EACL7T,KAAM,WACNiU,SAAUA,MAGlB,qBAAK/M,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,OACNuQ,YAAa,kHACb3T,MAAO+S,EAAKT,MACZhT,KAAM,QACNiU,SAAUA,MAGhBiB,GACE,qBAAKhO,UAAS,eAAUC,KAAOiL,OAA/B,SACI,mBAAGlL,UAAU,8BAAb,SAA6CgO,MAGrD,qBAAKhO,UAAU,OAAf,SACI,cAAC,SAAD,CAAQpD,KAAK,UAAUsH,KAAK,SAA5B,yEAGR,8BACI,oBAAGlE,UAAU,8BAAb,6GACI,cAAC,KAAD,CAAM8G,GAAG,SAAS9G,UAAWC,KAAO+I,KAApC,qD,wCCrCLkF,GAnD0B,SAAC,GAAe,IAKpCjO,EALuBkO,EAAY,EAAZA,MAElCxH,EAAWC,eACX9J,EAAWnE,IAQXqQ,EAAOlI,mBAAQ,WACjB,OAAOqN,EAAMC,MAAK,SAAApF,GAAI,OAAIA,EAAKlC,KAAOH,EAASI,cAChD,CAACoH,EAAOxH,IAEX,OACQ,gCACA,sBAAK3G,UAAWC,KAAOoO,KAAvB,UACMF,EAAM/L,KAAI,SAAA4G,GACJ,OACI,qBAAmBhJ,UAAWC,KAAOqO,UAArC,SACI,cAAC,KAAD,CACIxH,GAAIkC,EAAKlC,GACTyH,gBAAiBtO,KAAOgG,OACxBuI,OAAK,EAHT,SAKI,mBAAGxO,UAAU,6BAAb,SACKgJ,EAAK9I,UAPR8I,EAAKpJ,OAa3B,qBAAKI,UAAWC,KAAOqO,UAAvB,SACI,wBACItO,WA9BHC,EA8BuB,CAAC,iDACjBA,KAAOwO,YA/BJxO,EAAOgB,KAAK,MAgCnBkD,QA9BL,WACXrH,EAASoP,OA0BG,iDAMNlD,GACE,qBAAKhJ,UAAWC,KAAOyO,YAAvB,SACI,mBAAG1O,UAAU,kDAAb,SACMgJ,EAAK2F,aClDzBR,GAAiB,CACnB,CACIvO,GAAI,EACJkH,GAAI,WACJ5G,KAAM,6CACNyO,KAAM,wTAEV,CACI/O,GAAI,EACJkH,GAAI,kBACJ5G,KAAM,wFACNyO,KAAM,mTAgBCC,GAZ8C,SAAC,GAAkB,IAAhB/N,EAAe,EAAfA,SAE5D,OACI,sBAAKb,UAAWC,KAAO6I,QAAvB,UACI,uBAAO9I,UAAWC,KAAO4O,MAAzB,SAAgC,cAAC,GAAD,CAAYV,MAAOA,OACnD,yBAASnO,UAAWC,KAAO6O,QAA3B,SACMjO,Q,wCClBZkO,GAAuD,SAAC,GAAoB,IAAlBrI,EAAiB,EAAjBA,WAE5D,OACI,sBAAK1G,UAAWC,KAAOkF,UAAvB,UACI,qBAAKnF,UAAWC,KAAO+O,OAAvB,SACI,oBAAIhP,UAAU,4BAAd,uHAEJ,sBAAKA,UAAWC,KAAOgP,QAAvB,UACI,qBAAKxJ,IAAKiB,EAAWwI,YAAavJ,IAAKe,EAAW5N,OAClD,mBAAGkH,UAAU,uCAAb,SAAqD0G,EAAW5N,OAChE,sBAAKkH,UAAWC,KAAOkP,KAAvB,UACI,sBAAKnP,UAAWC,KAAOmP,UAAvB,UACI,mBAAGpP,UAAU,uDAAb,iFACA,mBAAGA,UAAU,oDAAb,SAAkE0G,EAAW2I,cAEjF,sBAAKrP,UAAWC,KAAOmP,UAAvB,UACI,mBAAGpP,UAAU,uDAAb,oDACA,mBAAGA,UAAU,oDAAb,SAAkE0G,EAAW4I,cAEjF,sBAAKtP,UAAWC,KAAOmP,UAAvB,UACI,mBAAGpP,UAAU,uDAAb,8CACA,mBAAGA,UAAU,oDAAb,SAAkE0G,EAAW6I,SAEjF,sBAAKvP,UAAWC,KAAOmP,UAAvB,UACI,mBAAGpP,UAAU,uDAAb,sEACA,mBAAGA,UAAU,oDAAb,SAAkE0G,EAAW8I,6BAStF9O,OAAMC,KAAKoO,ICIXU,OAvCf,WAEI,IAAQ7P,EAAO8P,eAAP9P,GACR,EAA8CnH,GAAY,SAAA2I,GAAK,OAAIA,EAAMiG,qBAAjEpK,EAAR,EAAQA,MAAOkK,EAAf,EAAeA,aAAcwI,EAA7B,EAA6BA,aAC7B,EAAoC9J,mBAAsC,MAA1E,mBAAOa,EAAP,KAAmBkJ,EAAnB,KAUA,OARAjL,qBAAU,WACN,IAAM+B,EAAazJ,EAAMmR,MAAK,SAAAtK,GAAC,OAAIA,EAAEN,MAAQ5D,KACzC8G,GACAkJ,EAAclJ,KAGnB,CAACiJ,IAEAxI,EAEI,qBAAKnH,UAAWC,KAAO6I,QAAvB,SACI,8BAAK,mBAAG9I,UAAU,6BAAb,qEAMZ0G,EAUD,qBAAK1G,UAAWC,KAAO6I,QAAvB,SACI,cAAC,GAAD,CAAmBpC,WAAYA,MAT/B,qBAAK1G,UAAWC,KAAO6I,QAAvB,SACI,8BAAK,mBAAG9I,UAAU,6BAAb,yK,6DCxBR6P,GAAmB,SAACC,GAC7B,IAAMC,EAAmB,IAAIlW,KAAKA,KAAKmW,MAAMF,IACvCG,GAAe,IAAIpW,MAAOqW,UAAYH,EAAWG,UACvD,GAAID,EAAO,EAAG,MAAO,mGACrB,IAAME,EAAM,MACNC,EAAOL,EAAWM,mBAAmB,KAAM,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,SAAU,kBACjG,GAAIP,EAAOE,EACP,MAAM,0CAAN,OAAmBC,EAAnB,YACG,GAAIH,EAAa,EAANE,EACd,MAAM,mCAAN,OAAiBC,EAAjB,YAEA,IAAMK,EAAOC,KAAKC,MAAMV,EAAOE,GACzBS,EArBQ,SAACC,EAAWC,GAE9B,IAAIC,GADJF,EAAIH,KAAKM,IAAIH,GAAK,KACL,GACb,OAAIA,EAAI,IAAMA,EAAI,GAAaC,EAAW,GACtCC,EAAK,GAAKA,EAAK,EAAYD,EAAW,GAC/B,IAAPC,EAAmBD,EAAW,GAC3BA,EAAW,GAeKG,CAAcR,EAAM,CAAC,2BAAQ,qBAAO,6BACvD,MAAM,GAAN,OAAUA,EAAV,YAAkBG,EAAlB,4CAAuCR,EAAvC,a,wCCnBFc,GAA4D,SAAC,GAAoB,IAAlB7Q,EAAiB,EAAjBA,MAAOsF,EAAU,EAAVA,IACxE,OACI,qBAAK3F,UAAWC,KAAOkR,OAAvB,SACI,qBAAK1L,IAAKpF,EAAOL,UAAWC,KAAOmR,IAAKzL,IAAMA,GAAO,0BAKlDjF,OAAMC,KAAKuQ,ICDpBG,GAA6D,SAAC,GAAoB,IAAlBpU,EAAiB,EAAjBA,MAAOqU,EAAU,EAAVA,IAEnEC,EAAc,YAAKtU,GAAQuU,UAEjC,GAAIF,GAAOC,EAAYrP,OAASoP,EAAK,CAEjC,IAAMG,EAAOF,EAAYrP,OAASoP,EAAM,EAExC,OACI,sBAAKtR,UAAWC,KAAOyR,MAAvB,UACI,sBAAK1R,UAAWC,KAAO0R,KAAvB,UACI,mBAAG3R,UAAU,8BAAb,oBAAgDyR,KAChD,qBAAKzR,UAAWC,KAAOkR,OAAvB,SACI,cAAC,GAAD,CACI9Q,MAAOkR,EAAYA,EAAYrP,OAASoP,GAAKjR,MAC7CsF,IAAK4L,EAAYA,EAAYrP,QAAUoP,EAAM,IAAIxY,YAG3DyY,EACGK,MAAML,EAAYrP,QAAUoP,EAAM,GAAIC,EAAYrP,QAClDE,KAAI,SAAC5E,EAAMW,GACR,OACI,qBAAiB6B,UAAWC,KAAOkR,OAAnC,SACI,cAAC,GAAD,CAAiB9Q,MAAO7C,EAAK6C,MAAOsF,IAAKnI,EAAK1E,QADxCqF,SASlC,OACI,qBAAK6B,UAAWC,KAAOyR,MAAvB,SACMH,EAAYnP,KAAI,SAAC5E,EAAMW,GACrB,OAAQ,qBAAiB6B,UAAWC,KAAOkR,OAAnC,SACJ,cAAC,GAAD,CAAiB9Q,MAAO7C,EAAK6C,MAAOsF,IAAKnI,EAAK1E,QADhCqF,SAQnBuC,OAAMC,KAAK0Q,ICpCpBQ,GAA4B,SAAC,GAAsD,IAApDhP,EAAmD,EAAnDA,OAAQiP,EAA2C,EAA3CA,UAAWhZ,EAAgC,EAAhCA,KAAMmD,EAA0B,EAA1BA,YAAa8V,EAAa,EAAbA,OAEvE,EAAoDlM,mBAAiC,IAArF,mBAAOmM,EAAP,KAA2BC,EAA3B,KACQhV,EAAUxE,GAAY,SAAA2I,GAAK,OAAIA,EAAMiG,qBAArCpK,MAER0H,qBAAU,WAEN,IACMuN,EAAkC,GADlBjW,EAElBkW,SAAQ,SAAAvS,GACR,IAAMwS,EAA0CnV,EAAMmR,MAAK,SAAA5Q,GAAI,OAAIA,EAAKgG,MAAQ5D,KAChF,GAAIwS,EAAO,CACP,IAAMjU,EAAQ+T,EAAQG,WAAU,SAAA7U,GAAI,OAAIA,EAAKgG,MAAQ4O,EAAM5O,QAC5C,IAAXrF,EACA+T,EAAQ9N,KAAR,2BAAkBgO,GAAlB,IAAyB1Q,MAAO,KAEhCwQ,EAAQ/T,GAAOuD,YAI3BuQ,EAAsBC,KACvB,CAACjV,EAAOhB,IAEX,IAAM0H,EAAa7C,mBAAQ,WACvB,OAAOkR,EAAmB9P,OAAS8P,EAAmBpO,QAAO,SAACC,EAAO6C,GACjE,OAAO7C,EAAU6C,EAAWvG,MAAQuG,EAAWhF,QAChD,GAAK,IACT,CAACsQ,IAEJ,OACI,sBAAKhS,UAAWC,KAAO4G,KAAvB,UACI,sBAAK7G,UAAWC,KAAOqS,WAAvB,UACI,8BAAK,oBAAGtS,UAAU,gCAAb,cAA+C6C,OACpD,qBAAK7C,UAAWC,KAAO6P,KAAvB,SACI,mBAAG9P,UAAU,4BAAb,SAA0C6P,GAAiBiC,UAGnE,qBAAK9R,UAAWC,KAAOsS,QAAvB,SACI,oBAAIvS,UAAU,6BAAd,SAA4ClH,MAE9CiZ,GACE,qBAAK/R,UAAWC,KAAO8R,OAAvB,SACkB,SAAXA,EACG,sBAAM/R,UAAWC,KAAOuS,KAAxB,SAA8B,mBAAGxS,UAAU,8BAAb,gEAClB,iBAAX+R,EACG,mBAAG/R,UAAU,8BAAb,kDACA,mBAAGA,UAAU,8BAAb,sEAKlB,sBAAKA,UAAWC,KAAOwS,cAAvB,UACMT,EAAmB9P,QAAU,cAAC,GAAD,CAAsBjF,MAAO+U,EAAoBV,IAAK,IACrF,sBAAKtR,UAAWC,KAAOE,MAAvB,UACI,mBAAGH,UAAU,qCAAb,SAAmD2D,IACnD,cAAC,eAAD,CAAc/G,KAAK,sBAOxB+D,kBAAKkR,ICjEda,GAAuC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAEpDlM,EAAWC,eAEjB,OACI,qBAAK5G,UAAWC,KAAO+B,KAAvB,SACM2Q,GAAUA,EAAOvQ,KAAI,SAAAU,GACf,OACI,cAAC,KAAD,CAEIgE,GAAI,CACAC,SAAS,IAAD,OAAM6L,EAAN,YAAc9P,EAAMU,KAC5BpC,MAAO,CACH4F,WAAYL,EACZ7D,MAAOA,IANnB,SASI,yBAAS9C,UAAWC,KAAO4G,KAA3B,SACI,cAAC,GAAD,CACIhE,OAAQC,EAAMD,OACdiP,UAAWhP,EAAMgP,UACjBhZ,KAAMgK,EAAMhK,KACZmD,YAAa6G,EAAM7G,YACnB8V,OAAWc,GAAc/P,EAAMiP,aAAWzY,OAd7CwJ,EAAMU,WAyBxB7C,kBAAK+R,IC7CPI,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAAiB,iBACjBC,GAAsB,sBAEtBC,GAA2B,2BAC3BC,GAA6B,6BAC7BC,GAA4B,4BAC5BC,GAA2B,2BAC3BC,GAAsB,sBACtBC,GAA2B,2BAkG3BC,GAAa,iBAAqC,CAC3D9W,KAAMwW,KAGGO,GAAc,iBAAsC,CAC7D/W,KAAM0W,KCjFKM,OA9Bf,WAEI,IAAM9W,EAAWnE,IACjB,EAA8CF,GAAY,SAAA2I,GAAK,MAAK,CAChEuR,OAAQvR,EAAMyS,WAAWlB,OACzBmB,YAAa1S,EAAMyS,WAAWC,YAC9B3Q,aAAc/B,EAAMgC,KAAKD,iBAHrBA,EAAR,EAAQA,aAAc2Q,EAAtB,EAAsBA,YAAanB,EAAnC,EAAmCA,OAiBnC,OAXAhO,qBAAU,WAKN,OAJIxB,IAAiB2Q,GACnBhX,EAAS4W,MAGJ,WACH5W,EAAS6W,SAGd,CAACxQ,IAGA,yBAASnD,UAAWC,KAAO0S,OAA3B,SACOA,GAAUA,EAAOzQ,OACd,cAAC,GAAD,CAAW0Q,KAAM,iBAAkBD,OAAQ,YAAKA,GAAQnB,UAAWqB,YAAU,IAC7E,8BAAK,mBAAG7S,UAAU,6BAAb,sE,4DCrBjB+T,GAAqC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOrB,EAAmB,EAAnBA,OAAQH,EAAW,EAAXA,KAEnDyB,EAAUtB,GAAU,CACtBA,EAAOf,MAAM,EAAG,IAChBe,EAAOf,MAAM,GAAI,IACjBe,EAAOf,MAAM,GAAI,IACjBe,EAAOf,MAAM,GAAI,IACjBe,EAAOf,MAAM,GAAI,KAGrB,OACI,sBAAK5R,UAAWC,KAAO+B,KAAvB,UACI,oBAAIhC,UAAU,kCAAd,mBAAoDgU,EAApD,OACA,qBAAKhU,UAAWC,KAAOgU,QAAvB,SACMA,GAAWA,EAAQtM,QAAO,SAAAuM,GAAM,OAAsB,IAAlBA,EAAOhS,UAAcE,KAAI,SAAC8R,EAAQ/V,GACpE,OACI,qBAAiB6B,UAAS,UAAKC,KAAOiU,OAAZ,YAAuB1B,GAAQvS,KAAOuS,MAAhE,SACM0B,EAAO9R,KAAI,SAACmD,EAAazB,GACvB,OAAO,mBAAW9D,UAAU,qCAArB,SAA2DuF,GAAnDzB,OAFb3F,YAYnBwC,kBAAKoT,IC1BdI,GAAmC,SAAC,GAAsD,IAApDtQ,EAAmD,EAAnDA,MAAOuQ,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACvE,OACI,sBAAKtU,UAAWC,KAAOkF,UAAvB,UACI,sBAAKnF,UAAWC,KAAOsU,gBAAvB,UACI,qBAAKvU,UAAWC,KAAO+B,KAAvB,SACI,cAAC,GAAD,CAAagS,MAAO,uCAAUrB,OAAQ0B,EAAY7B,MAAI,MAE1D,qBAAKxS,UAAWC,KAAO+B,KAAvB,SACI,cAAC,GAAD,CAAagS,MAAO,8CAAYrB,OAAQ2B,SAGhD,sBAAKtU,UAAU,QAAf,UACI,oBAAIA,UAAU,6BAAd,oIACA,qBAAKA,UAAWC,KAAOuU,KAAvB,SAA6B,mBAAGxU,UAAU,8BAAb,SAA4C6D,SAE7E,sBAAK7D,UAAU,QAAf,UACI,oBAAIA,UAAU,6BAAd,6HACA,qBAAKA,UAAWC,KAAOuU,KAAvB,SAA6B,mBAAGxU,UAAU,8BAAb,SAA4CoU,aAM1EzT,kBAAKwT,ICiBLM,OA5Cf,WAEI,IAAM3X,EAAWnE,IACjB,EAAmDF,GAAY,SAAA2I,GAAK,OAAIA,EAAMuR,UAAtEmB,EAAR,EAAQA,YAAanB,EAArB,EAAqBA,OAAQ9O,EAA7B,EAA6BA,MAAOuQ,EAApC,EAAoCA,WAEpCzP,qBAAU,WAIN,OAHKmP,GACDhX,EAAS,CAAEF,KAAMkW,KAEd,WACHhW,EAAS,CAAEF,KAAMuW,QAGtB,IAEH,IAAMkB,EAAavT,mBAAQ,WACvB,OAAO6R,EAAOhL,QAAO,SAAA7E,GAAK,MAAqB,SAAjBA,EAAMiP,UAAmB3P,KAAI,SAAAU,GAAK,OAAIA,EAAMD,YAC3E,CAAC8P,IACE2B,EAAgBxT,mBAAQ,WAC1B,OAAO6R,EAAOhL,QAAO,SAAA7E,GAAK,MAAqB,YAAjBA,EAAMiP,UAAsB3P,KAAI,SAAAU,GAAK,OAAIA,EAAMD,YAC9E,CAAC8P,IAEJ,OACI,sBAAK3S,UAAWC,KAAO6I,QAAvB,UACI,oBAAI9I,UAAU,uCAAd,uFACA,sBAAKA,UAAWC,KAAOkF,UAAvB,UACI,yBAASnF,UAAWC,KAAO0S,OAA3B,SACMA,EAAOzQ,OACH,cAAC,GAAD,CAAW0Q,KAAM,OAAQD,OAAQA,IACjC,8BAAK,mBAAG3S,UAAU,6BAAb,qEAGf,yBAASA,UAAWC,KAAOyU,MAA3B,SACM/B,EAAOzQ,OACH,cAAC,GAAD,CAAY2B,MAAOA,EAAOuQ,WAAYA,EAAYC,WAAYA,EAAYC,cAAeA,IACzF,8BAAK,mBAAGtU,UAAU,6BAAb,4E,wCC9BzB2U,GAAyC,SAAC,GAAe,IAAb7R,EAAY,EAAZA,MAE9C,EAAsC+C,mBAAiC,IAAvE,mBAAO5J,EAAP,KAAoB2Y,EAApB,KACQ3X,EAAUxE,GAAY,SAAA2I,GAAK,OAAIA,EAAMiG,qBAArCpK,MAER0H,qBAAU,WACN,IAAMkQ,EAAgB/R,EAAM7G,YACtBiW,EAAkC,GACxC2C,EAAI1C,SAAQ,SAAAvS,GACR,IAAMwS,EAA0CnV,EAAMmR,MAAK,SAAA5Q,GAAI,OAAIA,EAAKgG,MAAQ5D,KAChF,GAAIwS,EAAO,CACP,IAAMjU,EAAQ+T,EAAQG,WAAU,SAAA7U,GAAI,OAAIA,EAAKgG,MAAQ4O,EAAM5O,QAC5C,IAAXrF,EACA+T,EAAQ9N,KAAR,2BAAkBgO,GAAlB,IAAyB1Q,MAAO,KAEhCwQ,EAAQ/T,GAAOuD,YAI3BkT,EAAe1C,KAChB,CAACjV,EAAO6F,IAEX,IAAMa,EAAa7C,mBAAQ,WACvB,OAAI7E,EAAYiG,OACLjG,EACF2H,QAAO,SAACC,EAAO6C,GAAR,OAAuB7C,EAAS6C,EAAWvG,MAAQuG,EAAWhF,QAAQ,GAE/E,IACR,CAACzF,IAEJ,OACI,sBAAK+D,UAAWC,KAAOkF,UAAvB,UACI,qBAAKnF,UAAWC,KAAO4C,OAAvB,SACI,mBAAG7C,UAAU,gCAAb,oBAAkD8C,EAAMD,YAE5D,qBAAK7C,UAAU,QAAf,SACI,oBAAIA,UAAU,6BAAd,SAA4C8C,EAAMhK,SAEtD,qBAAKkH,UAAU,OAAf,SACwB,SAAjB8C,EAAMiP,OACH,sBAAM/R,UAAWC,KAAOuS,KAAxB,SAA8B,mBAAGxS,UAAU,8BAAb,gEACZ,iBAAjB8C,EAAMiP,OACH,mBAAG/R,UAAU,8BAAb,kDACA,mBAAGA,UAAU,8BAAb,sEAGd,sBAAKA,UAAU,QAAf,UACI,oBAAIA,UAAU,6BAAd,mDACA,qBAAKA,UAAWC,KAAOhE,YAAvB,SACMA,EAAYiG,QAAUjG,EAAYmG,KAAI,SAACsE,EAAYvI,GAC7C,OACI,sBAAK6B,UAAWC,KAAOzC,KAAvB,UACI,cAAC,GAAD,CAAiB6C,MAAOqG,EAAWrG,MAAOsF,IAAKe,EAAW5N,OAC1D,qBAAKkH,UAAWC,KAAOnH,KAAvB,SACI,mBAAGkH,UAAU,mCAAb,SAAiD0G,EAAW5N,SAEhE,sBAAKkH,UAAWC,KAAOE,MAAvB,UACI,mBAAGH,UAAU,qCAAb,mBACQ0G,EAAWhF,MADnB,cAC8BgF,EAAWvG,SAEzC,cAAC,eAAD,CAAcvD,KAAK,iBATOuB,WAiBtD,sBAAK6B,UAAS,UAAKC,KAAO6U,OAAZ,UAAd,UACI,mBAAG9U,UAAU,kDAAb,SAAgE6P,GAAiB/M,EAAMgP,aACvF,sBAAK9R,UAAWC,KAAOE,MAAvB,UACI,mBAAGH,UAAU,qCAAb,SAAmD2D,IACnD,cAAC,eAAD,CAAc/G,KAAK,sBAQxB+D,kBAAKgU,IChCLI,OApDf,WAEI,IAAQnV,EAAO8P,eAAP9P,GACF9C,EAAWnE,IACjB,EAAgCF,GAAY,SAAA2I,GAAK,OAAIA,EAAMuR,UAAnDmB,EAAR,EAAQA,YAAanB,EAArB,EAAqBA,OACrB,EAA0B9M,mBAAwB,MAAlD,mBAAO/C,EAAP,KAAckS,EAAd,KAoBA,OAlBArQ,qBAAU,WAIN,OAHKmP,GACDhX,EAAS,CAAEF,KAAMkW,KAEd,WACHhW,EAAS,CAAEF,KAAMuW,QAGtB,IAEHxO,qBAAU,WACN,IAAM7B,EAAQ6P,EAAOvE,MAAK,SAAA6G,GAAC,OAAIA,EAAEzR,MAAQ5D,KACrCkD,GACAkS,EAASlS,KAGd,CAAC6P,IAEAA,IAAWA,EAAOzQ,OAEd,qBAAKlC,UAAWC,KAAO6I,QAAvB,SACI,8BAAK,mBAAG9I,UAAU,6BAAb,qEAMb8C,EAEI,qBAAK9C,UAAWC,KAAO6I,QAAvB,SACI,qBAAK9I,UAAWC,KAAOkF,UAAvB,SACI,cAAC,GAAD,CAAerC,MAAOA,QAM9B,qBAAK9C,UAAWC,KAAO6I,QAAvB,SACI,8BAAK,mBAAG9I,UAAU,6BAAb,2I,oBCYNkV,OAzDf,WAEI,IAAQtV,EAAO8P,eAAP9P,GAEF9C,EAAWnE,IACjB,EAA8CF,GAAY,SAAA2I,GAAK,MAAK,CAChEuR,OAAQvR,EAAMyS,WAAWlB,OACzBmB,YAAa1S,EAAMyS,WAAWC,YAC9B3Q,aAAc/B,EAAMgC,KAAKD,iBAHrBA,EAAR,EAAQA,aAAc2Q,EAAtB,EAAsBA,YAAanB,EAAnC,EAAmCA,OAKnC,EAA0B9M,mBAAwB,MAAlD,mBAAO/C,EAAP,KAAckS,EAAd,KAoBA,OAlBArQ,qBAAU,WAIN,OAHIxB,IAAiB2Q,GACnBhX,EAAS4W,MAEJ,WACH5W,EAAS6W,SAGd,CAACxQ,IAEJwB,qBAAU,WACN,IAAM7B,EAAQ6P,EAAOvE,MAAK,SAAA6G,GAAC,OAAIA,EAAEzR,MAAQ5D,KACrCkD,GACAkS,EAASlS,KAGd,CAAC6P,IAEAA,IAAWA,EAAOzQ,OAEd,qBAAKlC,UAAWC,KAAO6I,QAAvB,SACI,8BAAK,mBAAG9I,UAAU,6BAAb,qEAMb8C,EAEI,qBAAK9C,UAAWC,KAAO6I,QAAvB,SACI,qBAAK9I,UAAWC,KAAOkF,UAAvB,SACI,cAAC,GAAD,CAAerC,MAAOA,QAM9B,qBAAK9C,UAAWC,KAAO6I,QAAvB,SACI,8BAAK,mBAAG9I,UAAU,6BAAb,2I,wCCjDfmV,GAA2B,SAAC,GAAe,IAAbhH,EAAY,EAAZA,MAEhC,OACI,qBAAKnO,UAAWC,KAAOmV,IAAvB,SACI,oBAAIpV,UAAWC,KAAO+B,KAAtB,SACMmM,EAAM/L,KAAI,SAAC4G,GACL,OACI,oBAAkBhJ,UAAWC,KAAOzC,KAApC,SACI,eAAC,KAAD,CACIsJ,GAAIkC,EAAKlC,GACTyH,gBAAiBtO,KAAOgG,OACxBjG,UAAWC,KAAOoV,SAClB7G,MAAmB,MAAZxF,EAAKlC,GAJhB,UAMKkC,EAAKoE,KACN,mBAAGpN,UAAU,mCAAb,SAAiDgJ,EAAK9I,WARrD8I,EAAKpJ,YAmB3Bc,OAAMC,KAAKwU,I,qBCvBXG,OARf,WACI,OACI,cAAC,KAAD,CAAMxO,GAAG,IAAI9G,UAAWC,KAAOsV,KAA/B,SACI,cAAC,OAAD,OCuCGC,OAlCf,WAEI,IAAMrH,EAAiB,CACnB,CACIvO,GAAI,EACJkH,GAAI,IACJ5G,KAAM,qEACNkN,KAAM,cAAC,aAAD,CAAYxQ,KAAK,aAE3B,CACIgD,GAAI,EACJkH,GAAI,QACJ5G,KAAM,4EACNkN,KAAM,cAAC,WAAD,CAAUxQ,KAAK,aAEzB,CACIgD,GAAI,EACJkH,GAAI,WACJ5G,KAAM,kFACNkN,KAAM,cAAC,cAAD,CAAaxQ,KAAK,cAIhC,OACI,wBAAQoD,UAAWC,KAAO+O,OAA1B,SACI,sBAAKhP,UAAWC,KAAO6O,QAAvB,UACI,cAAC,GAAD,CAAQX,MAAOA,IACf,cAAC,GAAD,U,qBChCVsH,GAA6B,SAAC,GAAkB,IAAhB5U,EAAe,EAAfA,SAClC,OACI,sBAAMb,UAAWC,KAAOyV,KAAxB,SACM7U,KAKCH,OAAMC,KAAK8U,ICPpBE,GAAyC,SAAC,GAAkB,IAAhB9U,EAAe,EAAfA,SAC9C,OACI,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,UACMA,QAMHH,OAAMC,KAAKgV,I,gBCTpBC,GAAiD,SAAC,GAA2B,IAAzB/U,EAAwB,EAAxBA,SAAa4Q,EAAW,kBAEtEtO,EAAiB1K,GAAY,SAAA2O,GAAK,OAAIA,EAAMhE,QAA5CD,aAER,OACI,cAAC,KAAD,2BAAWsO,GAAX,IAAiBoE,OAAQ,gBAAGlP,EAAH,EAAGA,SAAH,OACrBxD,EACMtC,EACA,cAAC,KAAD,CAAUiG,GAAI,CACRC,SAAU,SACV3F,MAAO,CAAE0L,KAAMnG,WAMxBjG,OAAMC,KAAKiV,I,oBC8GXE,OAlIf,WAEI,MAAwBjQ,mBAAS,CAC7B/M,KAAM,GACNuT,MAAO,GACPC,SAAU,KAHd,mBAAOC,EAAP,KAAaC,EAAb,KAKMuJ,EAAUzX,iBAAO,MACjB0X,EAAW1X,iBAAO,MAClBqO,EAAcrO,iBAAO,MACrBxB,EAAWnE,IAEjB,EAAwDF,GAAY,SAAA2I,GAAK,OAAIA,EAAMgC,QAA3EA,EAAR,EAAQA,KAAM6S,EAAd,EAAcA,eAAgBC,EAA9B,EAA8BA,sBAE9BvR,qBAAU,WACN7H,EAAS2O,QAEV,IAEH9G,qBAAU,WACF,SAAUvB,GAAQ,UAAWA,GAC7BoJ,EAAQ,2BACDD,GADA,IAEHzT,KAAMsK,EAAKtK,KACXuT,MAAOjJ,EAAKiJ,MACZC,SAAU,QAInB,CAAClJ,IAEJ,IAqBM2J,EAAW,SAAClI,GACd2H,EAAQ,2BAAKD,GAAN,mBAAa1H,EAAEmI,OAAOlU,KAAO+L,EAAEmI,OAAOxT,UAG3C2c,EAAmB,SAAC9X,GACtBA,EAAIS,QAAQsX,UAAW,EACvB/X,EAAIS,QAAQuX,UAAUC,OAAO,6BAC7BjY,EAAIS,QAAQyX,SAGVC,EAAc,SAACnY,GACjBA,EAAIS,QAAQsX,UAAW,EACvB/X,EAAIS,QAAQuX,UAAUI,IAAI,8BAG9B,OACI,8BACUR,EACI,8BAAK,mBAAGjW,UAAU,8BAAb,qFACL,uBAAMiN,SAxCP,SAACpI,GACdA,EAAEqI,iBACF,IAAI9Q,EAAW,GACXmQ,EAAKF,QAASjQ,EAAQ,2BAAOA,GAAP,IAAiBiQ,MAAOE,EAAKF,SACnDE,EAAKzT,OAAQsD,EAAQ,2BAAOA,GAAP,IAAiBtD,KAAMyT,EAAKzT,QACjDyT,EAAKD,WAAYlQ,EAAQ,2BAAOA,GAAP,IAAiBkQ,SAAUC,EAAKD,YAC7DxP,EAASkP,GAAmB5P,KAkCY4D,UAAWC,KAAOsM,KAA5C,UACE,8BACI,cAAC,QAAD,CACI3P,KAAM,OACN9D,KAAM,OACNU,MAAO+S,EAAKzT,KACZqU,YAAa,qBACbC,KAAM,WACNgJ,UAAQ,EACR/I,YAAa,kBAAM8I,EAAiBJ,IACpChJ,SAAUA,EACV1O,IAAK0X,EACLW,OAAQ,kBAAMF,EAAYT,QAGlC,qBAAK/V,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,QACN9D,KAAM,QACNU,MAAO+S,EAAKF,MACZc,YAAa,iCACbC,KAAM,WACNgJ,UAAQ,EACR/I,YAAa,kBAAM8I,EAAiBH,IACpCjJ,SAAUA,EACV1O,IAAK2X,EACLU,OAAQ,kBAAMF,EAAYR,QAGlC,qBAAKhW,UAAU,OAAf,SACI,cAAC,QAAD,CACIpD,KAAM,WACN9D,KAAM,WACNU,MAAO+S,EAAKD,SACZa,YAAa,uCACbC,KAAM,WACNgJ,UAAQ,EACR/I,YAAa,kBAAM8I,EAAiBxJ,IACpCI,SAAUA,EACV1O,IAAKsO,EACL+J,OAAQ,kBAAMF,EAAY7J,QAGhCuJ,GACE,qBAAKlW,UAAS,eAAUC,KAAOiL,OAA/B,SACI,mBAAGlL,UAAU,8BAAb,SAA6CkW,MAGrD,sBAAKlW,UAAU,OAAf,UACI,cAAC,SAAD,CAAQpD,KAAK,UAAUsH,KAAK,SAA5B,oEACA,cAAC,SAAD,CAAQtH,KAAK,YAAYsH,KAAK,SAASC,QAjFzC,SAACU,GACnBA,EAAEqI,iBACE,SAAU9J,GAAQ,UAAWA,GAC7BoJ,EAAQ,2BACDD,GADA,IAEHzT,KAAMsK,EAAKtK,KACXuT,MAAOjJ,EAAKiJ,MACZC,SAAU,OA0EE,2DC/Fb,SAASqK,KAEtB,IAAM7Z,EAAWnE,IACXoS,EAAeF,aAAakB,QAAQ,gBAU1C,OARApH,qBAAU,WACFoG,GACFjO,EAAS2O,MAEX3O,EAASD,OAEV,IAGD,cAAC,KAAD,UACI,cAAC+Z,GAAD,MAWR,SAASA,KAEP,IAAInT,EAAUC,eACRiD,EAAWC,eAEXI,EAAgC,SAAnBvD,EAAQoT,QAAqBlQ,EAASvF,OAASuF,EAASvF,MAAM4F,WAC3EN,EAAaC,EAASvF,OAASuF,EAASvF,MAAMsF,WAC9C5D,EAAQ6D,EAASvF,OAASuF,EAASvF,MAAM0B,MAEzCwB,EAAU,WACdb,EAAQqT,UAGV,OACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAQnQ,SAAWK,GAAcL,EAAjC,UACE,cAAC,KAAD,CAAOoQ,KAAK,IAAIvI,OAAK,EAArB,SAAsB,cAAC,GAAD,MACtB,cAAC,KAAD,CAAOuI,KAAK,QAAQvI,OAAK,EAAzB,SAA0B,cAAC,GAAD,MAC1B,cAAC,KAAD,CAAOuI,KAAK,YAAYvI,OAAK,EAA7B,SAA8B,cAAC,GAAD,MAC9B,cAAC,GAAD,CAAgBuI,KAAK,WAAWvI,OAAK,EAArC,SACE,cAAC,GAAD,UAAa,cAAC,GAAD,QAEf,cAAC,GAAD,CAAgBuI,KAAK,kBAAkBvI,OAAK,EAA5C,SACE,cAAC,GAAD,UAAa,cAAC,GAAD,QAEf,cAAC,GAAD,CAAgBuI,KAAK,sBAAsBvI,OAAK,EAAhD,SAAiD,cAAC,GAAD,MACjD,cAAC,KAAD,CAAOuI,KAAK,SAASvI,OAAK,EAA1B,SAA2B,cAAC,GAAD,MAC3B,cAAC,KAAD,CAAOuI,KAAK,YAAYvI,OAAK,EAA7B,SAA8B,cAAC,GAAD,MAC9B,cAAC,KAAD,CAAOuI,KAAK,mBAAmBvI,OAAK,EAApC,SAAqC,cAAC,GAAD,MACrC,cAAC,KAAD,CAAOuI,KAAK,kBAAkBvI,OAAK,EAAnC,SAAoC,cAAC,GAAD,MACpC,cAAC,KAAD,CAAOuI,KAAK,kBAAkBvI,OAAK,EAAnC,SAAoC,cAAC,GAAD,MACpC,cAAC,KAAD,UAAO,cAAC,GAAD,SAGNxH,GAAcN,GACf,cAAC,KAAD,CAAOqQ,KAAK,kBAAkBlB,OAAQ,WAClC,OACE,cAAC,GAAD,CAAOvR,QAASA,EAAhB,SACE,cAAC,GAAD,CAAmBoC,WAAYA,SAKtCM,GAAclE,GACf,cAAC,KAAD,CAAOiU,KAAK,YAAYlB,OAAQ,WAC5B,OACE,cAAC,GAAD,CAAOvR,QAASA,EAAhB,SACE,cAAC,GAAD,CAAexB,MAAOA,SAK7BkE,GAAclE,GACf,cAAC,KAAD,CAAOiU,KAAK,sBAAsBlB,OAAQ,WACtC,OACE,cAAC,GAAD,CAAOvR,QAASA,EAAhB,SACE,cAAC,GAAD,CAAexB,MAAOA,Y,aChGhCkU,GAAwC,CAC1C/Z,MAAO,GACPkK,cAAc,EACdwI,cAAc,EACdsH,aAAa,GCRXD,GAAwC,CAC1C1V,IAAK,KACLC,UAAW,ICFTyV,GAA4B,CAC9BnU,OAAQ,KACRK,cAAc,EACdgU,aAAa,GC4CXF,GAA2B,CAC7B5T,KAAM,GACND,cAAc,EAEdoK,iBAAiB,EACjB4J,gBAAgB,EAChB3J,qBAAsB,GACtBZ,cAAc,EACdwK,aAAa,EACbvK,kBAAmB,GACnBe,uBAAuB,EACvBD,uBAAuB,EACvB0J,sBAAsB,EACtBtJ,sBAAsB,EACtBD,sBAAsB,EACtBwJ,qBAAqB,EACrBtJ,0BAA2B,GAC3BiI,gBAAgB,EAChBsB,eAAe,EACfC,oBAAqB,GACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,oBAAoB,EACpBC,yBAA0B,GAC1BC,kBAAkB,EAClBC,iBAAiB,EACjB5B,sBAAuB,GACvB6B,eAAe,EACfC,cAAc,EACdC,mBAAoB,IC1ElBjB,GAAyB,CAC7BlD,aAAa,EACbnB,OAAQ,GACR9O,MAAO,EACPuQ,WAAY,GCNN4C,GAA6B,CACjClD,aAAa,EACbnB,OAAQ,ICRCuF,GAAcC,aAAgB,CACvC9Q,kBNgBoC,WAA8D,IAA7DjG,EAA4D,uDAApD4V,GAAcH,EAAsC,uCACjG,OAAQA,EAAOja,MACX,KAAKP,EACD,OAAO,2BACF+E,GADL,IAEE+F,cAAc,IAGpB,KAAK7K,EACD,OAAO,2BACA8E,GADP,IAEI6V,aAAa,EACbtH,cAAc,EACd1S,MAAO,YAAI4Z,EAAO5Z,OAAOmF,KAAI,SAAC5E,GAAD,mBAAC,eAAeA,GAAhB,IAAsBkE,MAAO,OAC1DyF,cAAc,IAGtB,KAAK5K,EACD,OAAO,2BACA6E,GADP,IAEI6V,aAAa,EACb9P,cAAc,IAGtB,KAAK3K,EACD,MAAyB,QAArBqa,EAAOrZ,KAAKZ,KACL,2BACAwE,GADP,IAEInE,MAAO,YAAImE,EAAMnE,OACZmF,KAAI,SAAA5E,GAAI,MAAkB,QAAdA,EAAKZ,KAAL,2BAA0BY,GAA1B,IAAgCkE,MAAO,IAAKlE,KACxD4E,KAAI,SAAA5E,GAAI,OAAIA,EAAKgG,MAAQqT,EAAOrZ,KAAKgG,IAAzB,2BAAmChG,GAAnC,IAAyCkE,MAAOlE,EAAKkE,MAAQ,IAAKlE,OAGpF,2BACA4D,GADP,IAEInE,MAAO,YAAImE,EAAMnE,OACZmF,KAAI,SAAA5E,GAAI,OAAIA,EAAKgG,MAAQqT,EAAOrZ,KAAKgG,IAAzB,2BAAmChG,GAAnC,IAAyCkE,QAASlE,EAAKkE,QAASlE,OAGzF,KAAKf,EACD,OAAO,2BACA2E,GADP,IAEInE,MAAO,YAAImE,EAAMnE,OACZmF,KAAI,SAAA5E,GAAI,OAAIA,EAAKgG,MAAQqT,EAAOrZ,KAAKgG,IAAzB,2BAAmChG,GAAnC,IAAyCkE,QAASlE,EAAKkE,QAASlE,OAGzF,KAAKd,EACD,OAAO,2BACA0E,GADP,IAEInE,MAAO,YAAImE,EAAMnE,OACZmF,KAAI,SAAA5E,GAAI,kCAAUA,GAAV,IAAgBkE,MAAO,SAG5C,QACI,OAAON,IMrEfC,kBLSoC,WAA8D,IAA7DD,EAA4D,uDAApD4V,GAAcH,EAAsC,uCACjG,OAAOA,EAAOja,MACV,KAAKO,EACD,MAAyB,QAArB0Z,EAAOrZ,KAAKZ,KACL,2BACAwE,GADP,IAEIE,IAAKuV,EAAOrZ,OAGT,2BACA4D,GADP,IAEIG,UAAU,GAAD,mBAAMH,EAAMG,WAAZ,CAAuBsV,EAAOrZ,SAInD,KAAKJ,EACD,OAAO,2BACAgE,GADP,IAEIG,UAAW,YAAIH,EAAMG,WAAWoG,QAAO,SAAAnK,GAAI,OAAIA,EAAKqC,OAASgX,EAAOrZ,KAAKqC,UAGjF,KAAKxC,EACD,OAAO,2BACA+D,GADP,IAEIG,UAAWsV,EAAOhV,YAG1B,KAAKvE,EACD,OAAO0Z,GAEX,QACI,OAAO5V,IKvCf0B,MJSwB,WAAkD,IAAjD1B,EAAgD,uDAAxC4V,GAAcH,EAA0B,uCACzE,OAAQA,EAAOja,MACX,KAAK0F,GACD,OAAO,2BACFlB,GADL,IAEE8B,cAAc,IAGpB,KAAKX,GACD,OAAO,2BACAnB,GADP,IAEIyB,OAAQgU,EAAOhU,OACfqU,aAAa,EACbhU,cAAc,IAGtB,KAAKV,GACD,OAAO,2BACApB,GADP,IAEI8V,aAAa,EACbhU,cAAc,IAGtB,KAAKT,GACD,OAAOuU,GAEX,QACI,OAAO5V,IInCfgC,KHiFuB,WAAiD,IAAhDhC,EAA+C,uDAAvC4V,GAAcH,EAAyB,uCACvE,OAAOA,EAAOja,MACV,KAAKuM,GACD,OAAO,2BACA/H,GADP,IAEImM,iBAAiB,IAGzB,KAAKnE,GACD,OAAO,2BACAhI,GADP,IAEIgX,uBAAuB,EACvBhV,KAAMyT,EAAOzT,KACbD,cAAc,EACdoK,iBAAiB,EACjBC,qBAAsB,KAG9B,KAAKnE,GACD,OAAO,2BACAjI,GADP,IAEIgX,uBAAuB,EACvB7K,iBAAiB,EACjBC,qBAAsBqJ,EAAO7L,UAGrC,KAAK1B,GACD,OAAO,2BACAlI,GADP,IAEIwL,cAAc,IAGtB,KAAKrD,GACD,OAAO,2BACAnI,GADP,IAEIiX,oBAAoB,EACpBzL,cAAc,EACdxJ,KAAMyT,EAAOzT,KACbD,cAAc,EACd0J,kBAAmB,KAG3B,KAAKrD,GACD,OAAO,2BACApI,GADP,IAEIiX,oBAAoB,EACpBzL,cAAc,EACdC,kBAAmBgK,EAAO7L,UAGlC,KAAKvB,GACD,OAAO,2BACArI,GADP,IAEIwM,uBAAuB,IAG/B,KAAKlE,GACD,OAAO,2BACAtI,GADP,IAEIuM,uBAAuB,EACvBC,uBAAuB,EACvByJ,sBAAsB,IAG9B,KAAK1N,GACD,OAAO,2BACAvI,GADP,IAEIiW,sBAAsB,EACtBzJ,uBAAuB,IAG/B,KAAKhE,GACD,OAAO,2BACAxI,GADP,IAEI2M,sBAAsB,IAG9B,KAAKlE,GACD,OAAO,2BACAzI,GADP,IAEI0M,sBAAsB,EACtBC,sBAAsB,EACtBuJ,qBAAqB,EACrBtJ,0BAA2B,KAGnC,KAAKlE,GACD,OAAO,2BACA1I,GADP,IAEIkW,qBAAqB,EACrBvJ,sBAAsB,EACtBC,0BAA2B6I,EAAO7L,UAG1C,KAAKjB,GACD,OAAO,2BACA3I,GADP,IAEI6U,gBAAgB,IAGxB,KAAKjM,GACD,OAAO,2BACA5I,GADP,IAEI6U,gBAAgB,EAChBsB,eAAe,EACfnU,KAAMyT,EAAOzT,KACbD,cAAc,EACdqU,oBAAqB,KAG7B,KAAKvN,GACD,OAAO,2BACA7I,GADP,IAEImW,eAAe,EACftB,gBAAgB,EAChBuB,oBAAqBX,EAAO7L,UAGpC,KAAKd,GACD,OAAO,2BACA9I,GADP,IAEIqW,qBAAqB,IAG7B,KAAKtN,GACD,OAAO,2BACA/I,GADP,IAEIqW,qBAAqB,EACrBE,oBAAoB,EACpBD,qBAAqB,EACrBE,yBAA0B,KAGlC,KAAKxN,GACD,OAAO,2BACAhJ,GADP,IAEIuW,oBAAoB,EACpBF,qBAAqB,EACrBG,yBAA0Bf,EAAO7L,UAGzC,KAAKX,GACD,OAAO,2BACAjJ,GADP,IAEIyW,kBAAkB,IAG1B,KAAKvN,GACD,OAAO,2BACAlJ,GADP,IAEIyW,kBAAkB,EAClBC,iBAAiB,EACjB1U,KAAMyT,EAAOzT,KACbD,cAAc,EACd+S,sBAAuB,KAG/B,KAAK3L,GACD,OAAO,2BACAnJ,GADP,IAEI0W,iBAAiB,EACjBD,kBAAkB,EAClB3B,sBAAuBW,EAAO7L,UAGtC,KAAKR,GACD,OAAO,2BACApJ,GADP,IAEI2W,eAAe,IAGvB,KAAKtN,GACD,OAAO,2BACArJ,GADP,IAEI+B,cAAc,EACdC,KAAM,GACN2U,eAAe,EACfC,cAAc,EACdC,mBAAoB,KAG5B,KAAKvN,GACD,OAAO,2BACAtJ,GADP,IAEI4W,cAAc,EACdD,eAAe,EACfE,mBAAoBpB,EAAO7L,UAGnC,QACI,OAAO5J,IG9QfuR,OFUuB,WAA+C,IAA9CvR,EAA6C,uDAArC4V,GAAcH,EAAuB,uCACrE,OAAQA,EAAOja,MACb,KAAKmW,GACH,OAAO,2BACF3R,GADL,IAEE0S,aAAa,IAGjB,KAAKd,GAML,KAAKC,GACH,OAAO,2BACF7R,GADL,IAEE0S,aAAa,IAGjB,KAAKZ,GACH,OAAO,2BACA9R,GADP,IAEIuR,OAAQkE,EAAOyB,QAAQ3F,OACvB9O,MAAOgT,EAAOyB,QAAQzU,MACtBuQ,WAAYyC,EAAOyB,QAAQlE,aAGjC,QACE,OAAOhT,IEtCXyS,WDK2B,WAA+C,IAA9CzS,EAA6C,uDAArC4V,GAAcH,EAAuB,uCACzE,OAAQA,EAAOja,MACb,KAAKyW,GACH,OAAO,2BACFjS,GADL,IAEE0S,aAAa,IAGjB,KAAKP,GAML,KAAKD,GACH,OAAO,2BACFlS,GADL,IAEE0S,aAAa,IAGjB,KAAKN,GACH,OAAO,2BACApS,GADP,IAEIuR,OAAQkE,EAAOyB,QAAQ3F,SAG7B,QACE,OAAOvR,M,yBEnCFmX,GAAmB,SAACC,EAAeC,GAAwD,IAAnCC,EAAkC,wDACrG,OAAO,SAAAtR,GAEL,IAAIuR,EAA2B,KAE/B,OAAO,SAAAC,GAAI,OAAI,SAAA/B,GACb,IAAQ/Z,EAAasK,EAAbtK,SACAF,EAASia,EAATja,KACAic,EAAyDJ,EAAzDI,OAAQC,EAAiDL,EAAjDK,QAASC,EAAwCN,EAAxCM,OAAQC,EAAgCP,EAAhCO,UAAW1U,EAAqBmU,EAArBnU,QAAS2U,EAAYR,EAAZQ,QAC/C3e,EAAczB,EAAU,eAE1B+D,IAASic,IAETF,EADED,GAAgBpe,EACT,IAAI4e,UAAJ,UAAiBV,EAAjB,kBAAgCle,IAEhC,IAAI4e,UAAJ,UAAiBV,KAI1BG,IACFA,EAAOQ,OAAS,SAAAC,GACdtc,EAAS,CAAEF,KAAMmc,EAAQT,QAASc,KAGpCT,EAAOU,QAAU,SAAAD,GACftc,EAAS,CAAEF,KAAMqc,EAASX,QAASc,KAGrCT,EAAOW,UAAY,SAAAF,GACjB,IAAQxe,EAASwe,EAATxe,KACF2e,EAAaje,KAAK0U,MAAMpV,GACtBoC,EAA+Buc,EAA/Bvc,QAAYwc,EAApB,YAAuCD,EAAvC,IACIvc,GACFF,EAAS,CAAEF,KAAMoc,EAAWV,QAASkB,KAIzCb,EAAOc,QAAU,SAAAL,GACftc,EAAS,CAAEF,KAAM0H,EAASgU,QAASc,MAInCT,GAAU/b,IAASkc,GACrBH,EAAOtT,QAGTuT,EAAK/B,OCtCL4B,GAAY,CACdI,OAAQ/F,GACRgG,QAAS3F,GACT4F,OAAQhG,GACRzO,QAAS2O,GACTgG,QAASjG,GACTgG,UAAW9F,IAGTwG,GAAgB,CAClBb,OAAQzF,GACR0F,QAASrF,GACTsF,OAAQ1F,GACR/O,QAASgP,GACT2F,QAAS1F,GACTyF,UAAWxF,IAcTmG,IAFmBC,OAAOC,sCAAwCC,MAEtCC,aAC1BC,KACAzB,GAPM,6CAOkBE,IACxBF,GAPU,yCAOkBmB,IAAe,KAGtCtS,GAAQ6S,aAAY/B,GAAayB,IC7C9C1U,IAAS4Q,OACP,cAAC,IAAMqE,WAAP,UACE,cAAC,IAAD,CAAU9S,MAAOA,GAAjB,SACE,cAACuP,GAAD,QAGJ3d,SAASyL,eAAe,U,mBCd1BlM,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,uBAAuB,YAAc,4BAA4B,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,wB,mBCA9PD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,uBAAuB,UAAY,0BAA0B,KAAO,qBAAqB,UAAY,4B,mBCAlKD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,WAAa,2BAA2B,KAAO,qBAAqB,QAAU,wBAAwB,OAAS,uBAAuB,KAAO,qBAAqB,cAAgB,8BAA8B,MAAQ,wB,mBCAtQD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,YAAc,2BAA2B,WAAa,0BAA0B,OAAS,wB,mBCA3KD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,uBAAuB,KAAO,uB,mBCAvFD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,gBAAkB,gCAAgC,KAAO,qBAAqB,KAAO,uB,mBCA7ID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,0BAA0B,aAAe,+B,mBCArGD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,uBAAuB,IAAM,oBAAoB,SAAW,2B,mBCA/ID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,SAAW,yBAAyB,WAAa,2BAA2B,OAAS,yB,mBCArID,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,wB,mBCA9ID,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,uB,mBCAhFD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,yBAAyB,OAAS,sBAAsB,MAAQ,uB,mBCA/HD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,wBAAwB,OAAS,uBAAuB,KAAO,uB,mBCAvHD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,2B,mBCA/DD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,2B,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,UAAY,0BAA0B,QAAU,wBAAwB,QAAU,0B,mBCA1ID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,0BAA0B,MAAQ,wB,mBCA9FD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,uB,mBCAhFD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,uB,mBCAhFD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,MAAQ,uB,mBCAxFD,EAAOC,QAAU,CAAC,QAAU,yB,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,aAAe,+B,mBCAvED,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,uB,mBCArDD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,sB,mBCA1DD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,UAAY,2B,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,sB,mBCApDD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,uB,mBCArDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,IAAM,sB,mBCAxDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B,mBCA5DD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,oBAAoB,MAAQ,wB","file":"static/js/main.26d71080.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2rbZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__2qOmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_bar\":\"styles_tab_bar__2GtLa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2wKrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__15Tuw\",\"orders\":\"style_orders__kufCn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"styles_logo__28LwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__FS2oU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__2Jgtx\",\"outerList\":\"styles_outerList__2zWVk\",\"bun\":\"styles_bun__TQv7V\",\"dummy\":\"styles_dummy__2Zuy0\",\"staffing\":\"styles_staffing__3oxyY\",\"ingredients_container\":\"styles_ingredients_container__2l_FQ\"};","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux';\r\n  import { AppDispatch, AppThunk, RootState } from './types';\r\n  \r\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n  \r\n  export const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); ","export function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n      // eslint-disable-next-line\r\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n  \r\nexport function setCookie(name, value, props) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n      const d = new Date();\r\n      d.setTime(d.getTime() + exp * 1000);\r\n      exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n      props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n      updatedCookie += '; ' + propName;\r\n      const propValue = props[propName];\r\n      if (propValue !== true) {\r\n        updatedCookie += '=' + propValue;\r\n      }\r\n    }\r\n    document.cookie = updatedCookie;\r\n  }\r\n  \r\nexport function deleteCookie(name) {\r\n    setCookie(name, null, { expires: -1 });\r\n}\r\n\r\nexport function setAccessCookie(accessToken) {\r\n  if (accessToken.indexOf('Bearer') === 0) {\r\n      setCookie('accessToken', accessToken.split('Bearer ')[1], undefined)\r\n  }\r\n}","import { getCookie } from '../utils/cookie';\r\n\r\nexport const BASE_URL = 'https://norma.nomoreparties.space/api' as const;\r\n\r\nexport function sendData(endpoint: string, data: any) {\r\n    const reqOptions: RequestInit = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(data),\r\n    };\r\n    return fetch(BASE_URL + endpoint, reqOptions);\r\n}\r\n\r\nexport function getResponse(res: Response) {\r\n    return res.ok ? res.json() : res.json().then(err => Promise.reject(err));\r\n}\r\n\r\nexport async function sendOrder(ingredients: { ingredients: string[] }) {\r\n    const reqOptions: RequestInit = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: 'Bearer ' + getCookie('accessToken'),\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(ingredients),\r\n    }\r\n    const res = await fetch(BASE_URL + '/orders', reqOptions);\r\n    return getResponse(res);\r\n}\r\n\r\nexport async function getIngredients() {\r\n    const res = await fetch(BASE_URL + '/ingredients');\r\n    return getResponse(res);\r\n}\r\n\r\nexport async function forgotPassword(formData: { email: string }) {\r\n    const res = await sendData('/password-reset', formData);\r\n    return getResponse(res);\r\n}\r\n\r\nexport async function resetPassword(formData: { token: string; password: string }) {\r\n    const res = await sendData('/password-reset/reset', formData);\r\n    return getResponse(res);\r\n}","import { getIngredients } from \"../api\";\r\nimport { TIngredient, TIngredientWithUuid } from \"../types/data\";\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST' as const;\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS'  as const;\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED'  as const;\r\nexport const INCREASE_INGREDIENT_COUNT = 'INCREASE_INGREDIENT_COUNT'  as const;\r\nexport const DECREASE_INGREDIENT_COUNT = 'DECREASE_INGREDIENT_COUNT'  as const;\r\nexport const RESET_INGREDIENTS_COUNT = 'RESET_INGREDIENTS_COUNT'  as const;\r\n\r\ninterface IGetIngredientsRequestAction {\r\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\n\r\ninterface IGetIngredientsSuccessAction {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n    readonly items: TIngredient[];\r\n}\r\n\r\ninterface IGetIngredientsFailedAction {\r\n    readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\n\r\ninterface IIncreaseIngredientCountAction {\r\n    readonly type: typeof INCREASE_INGREDIENT_COUNT;\r\n    readonly item: TIngredientWithUuid;\r\n}\r\n\r\ninterface IDecreaseIngredientCountAction {\r\n    readonly type: typeof DECREASE_INGREDIENT_COUNT;\r\n    readonly item: TIngredientWithUuid;\r\n}\r\n\r\ninterface IResetIngredientsCountAction  {\r\n    readonly type: typeof RESET_INGREDIENTS_COUNT;\r\n}\r\n\r\ninterface IDefault {\r\n    readonly type: undefined;\r\n}\r\n\r\nexport type TBurgerIngredientsActions =\r\n    | IGetIngredientsRequestAction\r\n    | IGetIngredientsSuccessAction\r\n    | IGetIngredientsFailedAction\r\n    | IIncreaseIngredientCountAction\r\n    | IDecreaseIngredientCountAction\r\n    | IResetIngredientsCountAction\r\n    | IDefault\r\n\r\nexport const getIngredientsRequest = (): IGetIngredientsRequestAction => ({\r\n    type: GET_INGREDIENTS_REQUEST\r\n});\r\n\r\nexport const getIngredientsSuccess = (data: TIngredient[]): IGetIngredientsSuccessAction => ({\r\n    type: GET_INGREDIENTS_SUCCESS,\r\n    items: data\r\n});\r\n\r\nexport const getIngredientsFailed = (): IGetIngredientsFailedAction => ({\r\n    type: GET_INGREDIENTS_FAILED\r\n});\r\n\r\nexport const increaseIngredientCount = (item: TIngredientWithUuid): IIncreaseIngredientCountAction => ({\r\n    type: INCREASE_INGREDIENT_COUNT,\r\n    item\r\n});\r\n\r\nexport const decreaseIngredientCount = (item: TIngredientWithUuid): IDecreaseIngredientCountAction => ({\r\n    type: DECREASE_INGREDIENT_COUNT,\r\n    item\r\n});\r\n\r\nexport const resetIngredientsCount = (): IResetIngredientsCountAction => ({\r\n    type: RESET_INGREDIENTS_COUNT,\r\n});\r\n\r\nexport const getIngredientsThunk: AppThunk = () => \r\n    (dispatch: AppDispatch) => {\r\n        dispatch(getIngredientsRequest());\r\n        getIngredients()\r\n            .then((res) => {\r\n                if (res && res.success) {\r\n                    dispatch(getIngredientsSuccess(res.data));\r\n                } else {\r\n                    dispatch(getIngredientsFailed());\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(getIngredientsFailed());\r\n            });\r\n    }","import {\r\n    increaseIngredientCount,\r\n    decreaseIngredientCount,\r\n    resetIngredientsCount\r\n} from './burger-ingredients';\r\nimport { TIngredientWithUuid } from '../types/data';\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nexport const ADD_CONSTRUCTOR_COMPONENT = 'ADD_CONSTRUCTOR_COMPONENT' as const;\r\nexport const REMOVE_CONSTRUCTOR_COMPONENT = 'REMOVE_CONSTRUCTOR_COMPONENT'as const;\r\nexport const REORDER_CONSTRUCTOR_COMPONENTS = 'REORDER_CONSTRUCTOR_COMPONENTS'as const;\r\nexport const CLEAR_CONSTRUCTOR_COMPONENTS = 'CLEAR_CONSTRUCTOR_COMPONENTS' as const;\r\n\r\ninterface IAddConstructorComponentAction {\r\n    readonly type: typeof ADD_CONSTRUCTOR_COMPONENT;\r\n    readonly item: TIngredientWithUuid;\r\n}\r\n\r\ninterface IRemoveConstructorComponentAction {\r\n    readonly type: typeof REMOVE_CONSTRUCTOR_COMPONENT;\r\n    readonly item: TIngredientWithUuid;\r\n}\r\n\r\ninterface IReorderConstructorComponentsAction {\r\n    readonly type: typeof REORDER_CONSTRUCTOR_COMPONENTS;\r\n    readonly reordered: TIngredientWithUuid[];\r\n}\r\n\r\ninterface IClearConstructorComponentsAction {\r\n    readonly type: typeof CLEAR_CONSTRUCTOR_COMPONENTS;\r\n}\r\n\r\ninterface IDefault {\r\n    readonly type: undefined;\r\n}\r\n\r\nexport type TBurgerConstructorActions =\r\n    | IAddConstructorComponentAction\r\n    | IRemoveConstructorComponentAction\r\n    | IReorderConstructorComponentsAction\r\n    | IClearConstructorComponentsAction\r\n    | IDefault\r\n\r\nexport const addConstructorComponent = (item: TIngredientWithUuid): IAddConstructorComponentAction => ({\r\n    type: ADD_CONSTRUCTOR_COMPONENT,\r\n    item\r\n});\r\n\r\nexport const removeConstructorComponent = (item: TIngredientWithUuid): IRemoveConstructorComponentAction => ({\r\n    type: REMOVE_CONSTRUCTOR_COMPONENT,\r\n    item\r\n});\r\n\r\nexport const reorderConstructorComponents = (reordered: TIngredientWithUuid[]): IReorderConstructorComponentsAction => ({\r\n    type: REORDER_CONSTRUCTOR_COMPONENTS,\r\n    reordered\r\n});\r\n\r\nexport const clearConstructorComponents = (): IClearConstructorComponentsAction => ({\r\n    type: CLEAR_CONSTRUCTOR_COMPONENTS\r\n});\r\n\r\nexport const addConstructorComponentThunk: AppThunk = (item: TIngredientWithUuid) =>\r\n    (dispatch: AppDispatch) => {\r\n        dispatch(addConstructorComponent(item));\r\n        dispatch(increaseIngredientCount(item))\r\n    }\r\n\r\nexport const clearComponentsAndResetCountsThunk: AppThunk = () =>\r\n    (dispatch: AppDispatch) => {\r\n        dispatch(clearConstructorComponents());\r\n        dispatch(resetIngredientsCount());\r\n    }\r\n\r\nexport const removeConstructorComponentThunk: AppThunk = (item: TIngredientWithUuid) => \r\n    (dispatch: AppDispatch) => {\r\n        dispatch(removeConstructorComponent(item));\r\n        dispatch(decreaseIngredientCount(item))\r\n    }","export const dndTypes = {\r\n    INGREDIENT: 'INGREDIENT' as const,\r\n    CONSTRUCTOR_ITEM: 'CONSTRUCTOR_ITEM' as const\r\n}","import React, { useRef, FC } from \"react\";\r\nimport styles from './styles.module.css';\r\nimport { ConstructorElement, DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch } from '../../../services/hooks';\r\nimport { removeConstructorComponentThunk } from \"../../../services/actions/burger-constructor\";\r\nimport { useDrag, useDrop, XYCoord  } from \"react-dnd\";\r\nimport { dndTypes } from \"../../../utils/constants\";\r\nimport { TIngredientWithUuid } from '../../../services/types/data';\r\n\r\ninterface IBurgerComponentProps {\r\n    type?: 'top' | 'bottom';\r\n    component: TIngredientWithUuid;\r\n    isLocked?: boolean;\r\n    index?: number;\r\n    moveComponent?: (dragIndex: number, hoverIndex: number) => void;\r\n}\r\n\r\nconst BurgerComponent: FC<IBurgerComponentProps> = ({ type, isLocked, component, index, moveComponent }) => {\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const removeItem = () => {\r\n        dispatch(removeConstructorComponentThunk(component));\r\n    }\r\n    \r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: dndTypes.CONSTRUCTOR_ITEM,\r\n        collect: (monitor) => {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            };\r\n        },\r\n        hover(item: { id: string; index: number }, monitor): void {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            \r\n            const dragIndex = item.index;\r\n            let hoverIndex: number;\r\n\r\n            if (index !== undefined) {\r\n                hoverIndex = index;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset: XYCoord | null = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset ? (clientOffset.y - hoverBoundingRect.top) : null;\r\n            if (hoverClientY) {\r\n                if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                    return;\r\n                }\r\n                if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                    return;\r\n                }\r\n            }\r\n            moveComponent && moveComponent(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        }\r\n    });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: dndTypes.CONSTRUCTOR_ITEM,\r\n        item: () => {\r\n            return { id: component.uuid, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        component.type === 'bun' ? (\r\n            <div className={styles.component}>\r\n                <ConstructorElement\r\n                    type={type}\r\n                    isLocked={isLocked}\r\n                    text={component.name}\r\n                    price={component.price}\r\n                    thumbnail={component.image}                 \r\n                />\r\n            </div>\r\n        ) : (\r\n            <div ref={ref} style={{ opacity: isDragging ? 0 : 1 }} className={styles.component} data-handler-id={handlerId}>\r\n                { !isLocked && <div className={styles.drag_icon}><DragIcon type=\"primary\" /></div> }\r\n                <ConstructorElement\r\n                    isLocked={isLocked}\r\n                    text={component.name}\r\n                    price={component.price}\r\n                    thumbnail={component.image} \r\n                    handleClose={removeItem}                   \r\n                />\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default React.memo(BurgerComponent);","import { useMemo, FC, memo } from 'react'\r\nimport styles from './styles.module.css';\r\n\r\ninterface IDummyComponentProps {\r\n    type?: string;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst DummyComponent: FC<IDummyComponentProps> = ({ children, type }) => {\r\n\r\n    const style = useMemo(() => {\r\n        switch (type) {\r\n            case 'top':\r\n                return [styles.dummy, styles.dummy_top].join(' ');\r\n            case 'bottom':\r\n                return [styles.dummy, styles.dummy_bottom].join(' ');\r\n            default:\r\n                return styles.dummy;\r\n        }\r\n    }, [type]);\r\n\r\n    return (\r\n        <div className={style}>\r\n            <p className=\"text text_type_main-default\">{children}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(DummyComponent);","import styles from './styles.module.css';\r\nimport { useCallback } from 'react';\r\nimport BurgerComponent from '../burger-component/burger-component';\r\nimport DummyComponent from '../dummy-component/dummy-component';\r\nimport { useSelector, useDispatch } from '../../../services/hooks';\r\nimport { useDrop } from \"react-dnd\";\r\nimport { addConstructorComponentThunk, REORDER_CONSTRUCTOR_COMPONENTS } from \"../../../services/actions/burger-constructor\";\r\nimport { dndTypes } from \"../../../utils/constants\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport { TIngredientWithCount } from '../../../services/types/data';\r\n\r\nfunction ComponentList() {\r\n    const dispatch = useDispatch();\r\n    const { bun, staffings } = useSelector(state => state.burgerConstructor);\r\n\r\n    const [, drop] = useDrop({\r\n        accept: dndTypes.INGREDIENT,\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        }),\r\n        drop(item: TIngredientWithCount) {\r\n            const { count, ...itemWithoutCount} = item;\r\n            dispatch(addConstructorComponentThunk({\r\n                ...itemWithoutCount,\r\n                uuid: uuid()\r\n            }));\r\n        },\r\n    });\r\n\r\n    const moveComponent = useCallback((dragIndex, hoverIndex) => {\r\n        const reordered = [ ...staffings ];\r\n        const dragComponent = reordered[dragIndex];\r\n        reordered.splice(dragIndex, 1);\r\n        reordered.splice(hoverIndex, 0, dragComponent);\r\n        dispatch({\r\n                type: REORDER_CONSTRUCTOR_COMPONENTS,\r\n                reordered: reordered,\r\n            });\r\n    //eslint-disable-next-line\r\n    }, [staffings]);\r\n\r\n    return (\r\n        <ul ref={drop} className={`${styles.list} ${styles.outerList}`}>\r\n            { bun ?\r\n                <li className={styles.bun}>\r\n                    <BurgerComponent\r\n                        type=\"top\"\r\n                        isLocked={true}\r\n                        component={{...bun, name: bun.name + ' (верх)' }}\r\n                    />\r\n                </li>\r\n                :\r\n                <li className={styles.dummy}>\r\n                    <DummyComponent type={\"top\"}>Верхняя булка</DummyComponent>\r\n                </li>\r\n            }\r\n            { (staffings && staffings.length)\r\n                ? <li className={styles.ingredients_container}>\r\n                    <ul className={styles.list}>\r\n                        { staffings.map((component, index) => {\r\n                                return (<li key={component.uuid} className={styles.staffing}>\r\n                                    <BurgerComponent component={component} index={index} moveComponent={moveComponent} />\r\n                                </li>);\r\n                            }\r\n                        )}\r\n                    </ul>\r\n                </li>\r\n                : <li className={styles.dummy}>\r\n                    <DummyComponent>Добавьте ингредиенты</DummyComponent>\r\n                </li>\r\n            }  \r\n            { bun\r\n                ? <li className={styles.bun}>\r\n                    <BurgerComponent\r\n                        type=\"bottom\"\r\n                        isLocked={true}\r\n                        component={{...bun, name: bun.name + ' (низ)' }}           \r\n                    />\r\n                </li>\r\n                : <li className={styles.dummy}>\r\n                    <DummyComponent type={\"bottom\"}>Нижняя булка</DummyComponent>\r\n                </li>\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ComponentList;","import { sendOrder } from '../api';\r\nimport { clearComponentsAndResetCountsThunk } from \"./burger-constructor\";\r\nimport { AppDispatch, AppThunk } from '../types';\r\n\r\nexport const GET_ORDER_REQUEST = 'GET_ORDER_REQUEST' as const;\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS' as const;\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED' as const;\r\nexport const RESET_ORDER = 'RESET_ORDER' as const;\r\n\r\ninterface IGetOrderRequestAction {\r\n    readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\n\r\ninterface IGetOrderFailedAction {\r\n    readonly type: typeof GET_ORDER_FAILED;\r\n}\r\n\r\ninterface IGetOrderSuccessAction {\r\n    readonly type: typeof GET_ORDER_SUCCESS;\r\n    readonly number: string;\r\n}\r\n\r\ninterface IResetOrderAction {\r\n    readonly type: typeof RESET_ORDER;\r\n}\r\n\r\ninterface IDefault {\r\n    readonly type: undefined;\r\n}\r\n\r\nexport type TOrderActions = \r\n    | IGetOrderRequestAction\r\n    | IGetOrderFailedAction\r\n    | IGetOrderSuccessAction\r\n    | IResetOrderAction\r\n    | IDefault\r\n\r\nexport const getOrderRequest = (): IGetOrderRequestAction => ({\r\n    type: GET_ORDER_REQUEST\r\n});\r\n\r\nexport const getOrderFailed = (): IGetOrderFailedAction => ({\r\n    type: GET_ORDER_FAILED\r\n});\r\n\r\nexport const getOrderSuccess = (number: string): IGetOrderSuccessAction => ({\r\n    type: GET_ORDER_SUCCESS,\r\n    number\r\n});\r\n\r\nexport const resetOrder = (): IResetOrderAction => ({\r\n    type: RESET_ORDER\r\n});\r\n\r\nexport const fetchOrderThunk: AppThunk = (ingredients: { ingredients: string[] }) => {\r\n    return (dispatch: AppDispatch | AppThunk) => {\r\n        dispatch(getOrderRequest());\r\n        sendOrder(ingredients)\r\n            .then((res) => {\r\n                if (res && res.success) {\r\n                    const number = res.order.number.toString();\r\n                    dispatch(getOrderSuccess(number));\r\n                    dispatch(clearComponentsAndResetCountsThunk());\r\n                } else {\r\n                    dispatch(getOrderFailed());\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(getOrderFailed());\r\n            });\r\n    }\r\n}","import { useMemo } from \"react\";\r\nimport styles from './styles.module.css';\r\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector, useDispatch } from '../../../services/hooks';\r\nimport { fetchOrderThunk } from '../../../services/actions/order';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction OrderInfo() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { bun, staffings, orderRequest, isAuthorised } = useSelector(state => ({\r\n        bun: state.burgerConstructor.bun,\r\n        staffings: state.burgerConstructor.staffings,\r\n        orderRequest: state.order.orderRequest,\r\n        isAuthorised: state.user.isAuthorised,\r\n    }));\r\n\r\n    const ingredientsToSend: string[] | null = useMemo(() => {\r\n        if (bun && staffings.length !== 0) {\r\n            const staffingIds = staffings.map(c => c._id)\r\n            return [\r\n                bun._id,\r\n                bun._id,\r\n                ...staffingIds\r\n            ];\r\n        }\r\n        return null;\r\n    }, [bun, staffings]);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        if (!isAuthorised) {\r\n            history.push('/login');\r\n        } else {\r\n            if (ingredientsToSend) {\r\n                const orderIds = { ingredients: ingredientsToSend }\r\n                dispatch(fetchOrderThunk(orderIds));\r\n            }\r\n        }\r\n    }\r\n\r\n    const totalPrice = useMemo(() => {\r\n        const bunPrice = bun ? bun.price * 2 : 0;\r\n        const staffingsTotalPrice = staffings.reduce((total, i) => total + i.price, 0);\r\n        return bunPrice + staffingsTotalPrice;\r\n    }, [bun, staffings]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.messages}>\r\n                { orderRequest && <p className=\"text text_type_main-default mt-6\">Отправка заказа...</p> } \r\n            </div>\r\n            <div className={styles.order_info}>\r\n                <div className={styles.total}>\r\n                    <p className=\"text text_type_digits-medium mr-2\">{totalPrice}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <div className={styles.submit}>\r\n                    <Button type=\"primary\" size=\"large\" onClick={handleClick}>\r\n                        Оформить заказ\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderInfo;","import React from 'react';\r\nimport styles from './styles.module.css';\r\n\r\ninterface IModalOverlayProps {\r\n    onClose: () => void;\r\n}\r\n\r\nconst ModalOverlay: React.FC<IModalOverlayProps> = ({onClose}) => {\r\n    return (\r\n        <div className={styles.overlay} onClick={onClose}></div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ModalOverlay);","import React, { useEffect, FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './styles.module.css';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalOverlay from './modal-overlay/modal-overlay';\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\ninterface IModalProps {\r\n    onClose: () => void;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Modal: FC<IModalProps> = ({ children, onClose }) => {\r\n\r\n    useEffect(() => {\r\n        const onEscPressed = (e: KeyboardEvent) => {\r\n            if (e.code === \"Escape\") onClose();\r\n        }\r\n        document.addEventListener('keydown', onEscPressed);\r\n        return () => document.removeEventListener('keydown', onEscPressed);\r\n    }, [onClose])\r\n\r\n    return ReactDOM.createPortal(\r\n        (\r\n            <div className={styles.container}>\r\n                <div className={styles.modal}>\r\n                    <div className={styles.close}>\r\n                        <CloseIcon type=\"primary\" onClick={onClose} />\r\n                    </div>\r\n                    { children }\r\n                </div>\r\n                <ModalOverlay onClose={onClose} />\r\n            </div>\r\n        ), modalRoot as HTMLElement\r\n    );\r\n}\r\n\r\nexport default React.memo(Modal);","export default __webpack_public_path__ + \"static/media/confirm-order.7341dd32.svg\";","import styles from './styles.module.css';\r\nimport React, { useEffect, FC } from 'react';\r\nimport ConfirmedLogo from '../../../assets/images/confirm-order.svg';\r\nimport { useDispatch } from '../../../services/hooks';\r\nimport { resetOrder } from '../../../services/actions/order';\r\n\r\ninterface IOrderDetailsProps {\r\n    orderNumber: string;\r\n}\r\n\r\nconst OrderDetails: FC<IOrderDetailsProps> = ({ orderNumber }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(resetOrder());\r\n        }\r\n    //eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2 className={'text text_type_digits-large mb-8 ' + styles.order_number}>{orderNumber}</h2>\r\n            <p className='text text_type_main-medium'>идентификатор заказа</p>\r\n            <div className='mt-15 mb-15'>\r\n                <img src={ConfirmedLogo} alt=\"React Logo\" />\r\n            </div>\r\n            <p className=\"text text_type_main-default mb-2\">Ваш заказ начали готовить</p>\r\n            <p className=\"text text_type_main-default text_color_inactive\">Дождитесь готовности на орбитальной станции</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(OrderDetails);","import styles from './styles.module.css';\r\nimport ComponentList from './component-list/component-list';\r\nimport OrderInfo from './order-info/order-info';\r\nimport Modal from '../modal/modal';\r\nimport OrderDetails from '../modal/order-details/order-details';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nfunction BurgerConstructor() {\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const onClose = useCallback(() => {\r\n        setOpen(false);\r\n    }, []);\r\n\r\n    const { number } = useSelector(state => state.order);\r\n\r\n    useEffect(() => {\r\n        if ( number ) {\r\n            setOpen(true);\r\n        }\r\n    }, [number])\r\n\r\n    return (\r\n        <>\r\n            <section className={styles.container}>\r\n                <ComponentList />\r\n                <OrderInfo />\r\n            </section>\r\n            { (open && number) && <Modal onClose={onClose}><OrderDetails orderNumber={number} /></Modal> }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BurgerConstructor;","import React, { useEffect, FC } from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './styles.module.css';\r\n\r\ninterface ITabBar {\r\n    active: string;\r\n}\r\n\r\nconst TabBar: FC<ITabBar> = ({ active }) => {\r\n    const [current, setCurrent] = React.useState('buns');\r\n\r\n    useEffect(() => {\r\n        setCurrent(active)\r\n    }, [active])\r\n\r\n    const setTab = (tabValue: string) => {\r\n        setCurrent(tabValue);\r\n        const element = document.getElementById(tabValue);\r\n        if (element) element.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    return ( \r\n        <div className={styles.tab_bar}>\r\n            <Tab value=\"buns\" active={current === 'buns'} onClick={setTab}>Булки</Tab>\r\n            <Tab value=\"sauces\" active={current === 'sauces'} onClick={setTab}>Соусы</Tab>\r\n            <Tab value=\"mains\" active={current === 'mains'} onClick={setTab}>Начинки</Tab>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(TabBar);","import React, {FC} from 'react';\r\nimport styles from './styles.module.css';\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDrag } from 'react-dnd';\r\nimport { dndTypes } from '../../../utils/constants';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { TIngredientWithCount } from '../../../services/types/data';\r\n\r\ninterface IIngredientCardProps {\r\n    ingredient: TIngredientWithCount;\r\n}\r\n\r\nconst IngredientCard: FC<IIngredientCardProps> = ({ ingredient }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const [, drag] = useDrag({\r\n        type: dndTypes.INGREDIENT,\r\n        item: ingredient,\r\n    });\r\n\r\n    return (\r\n        <article ref={drag} className={styles.card}>\r\n            <Link\r\n                to={{\r\n                    pathname: `/ingredient/${ingredient._id}`,\r\n                    state: {\r\n                        background: location,\r\n                        ingredient: ingredient\r\n                     },\r\n                }} >\r\n                <img className={styles.image} src={ingredient.image} alt={ingredient.name} />\r\n            </Link>\r\n                <div className={styles.price}>\r\n                    <p className=\"text text_type_digits-default mr-2\">{ingredient.price}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            <Link\r\n                to={{\r\n                    pathname: `/ingredient/${ingredient._id}`,\r\n                    state: {\r\n                        background: location,\r\n                        ingredient: ingredient\r\n                        },\r\n                }} >\r\n                <div className={styles.name}>\r\n                    <h3 className=\"text text_type_main-default\">{ingredient.name}</h3>\r\n                </div>\r\n            </Link>\r\n            { (!!ingredient.count && ingredient.count !== 0) && <Counter count={ingredient.count} size=\"default\" />}\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default React.memo(IngredientCard);","import React, { useEffect, useRef, FC } from \"react\";\r\nimport styles from './styles.module.css';\r\nimport IngredientCard from \"../ingredient-card/ingredient-card\";\r\nimport { useSelector } from '../../../services/hooks';\r\nimport { TIngredientWithCount } from \"../../../services/types/data\";\r\n\r\ninterface IIngredientGroup {\r\n    name: string;\r\n    id: string;\r\n    items: TIngredientWithCount[];\r\n    setHeight: (height: number) => void;\r\n}\r\n\r\nconst IngredientGroup: FC<IIngredientGroup> = ({ name, id, items, setHeight }) => {\r\n\r\n    const { itemsRequest } = useSelector(store => store.burgerIngredients);\r\n    const groupRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (groupRef && groupRef.current) {\r\n            const height = groupRef.current.getBoundingClientRect().height;\r\n            setHeight(height);\r\n        }\r\n    // eslint-disable-next-line\r\n    }, [items]);\r\n\r\n    return (\r\n        <section ref={groupRef}>\r\n            <h2 id={id} className=\"text text_type_main-medium mb-6\">{name}</h2>\r\n            { itemsRequest\r\n                ? <p className=\"text text_type_main-default mb-10\">Загрузка...</p>\r\n                : <ul className={styles.list}>\r\n                    {   \r\n                        items.length === 0\r\n                        ? <p className=\"text text_type_main-default\">Ой, похоже ничего нет...</p>\r\n                        : items.map((ingredient, key) => {\r\n                            return <li key={key} className={styles.item}>\r\n                                    <IngredientCard ingredient={ingredient} />\r\n                                </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default React.memo(IngredientGroup);\r\n\r\n","import { useMemo, useState, UIEvent} from \"react\";\r\nimport styles from './styles.module.css';\r\nimport TabBar from './tab-bar/tab-bar';\r\nimport IngredientGroup from './ingredient-group/ingredient-group';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nfunction BurgerIngredients() {\r\n    \r\n    const { items } = useSelector(state => state.burgerIngredients);\r\n\r\n    const buns = useMemo(() => {\r\n        return items.filter(i => i.type === 'bun')\r\n    }, [items]);\r\n\r\n    const sauces = useMemo(() => {\r\n        return items.filter(i => i.type === 'sauce')\r\n    }, [items]);\r\n\r\n    const mains = useMemo(() => {\r\n        return items.filter(i => i.type === 'main')\r\n    }, [items]);\r\n\r\n    const [bunsHeight, setBunsHeights] = useState(0);\r\n    const [saucesHeight, setSaucesHeights] = useState(0);\r\n    const [mainsHeight, setMainsHeights] = useState(0);\r\n    const [activeTab, setActiveTab] = useState('buns');\r\n\r\n    const handleScroll = (e: UIEvent<HTMLDivElement>) => {\r\n        const scrollTop = e.currentTarget.scrollTop;\r\n        if (scrollTop >= 0 && scrollTop < bunsHeight) {\r\n            setActiveTab('buns')\r\n        } else if (scrollTop >= bunsHeight && scrollTop < bunsHeight + saucesHeight) {\r\n            setActiveTab('sauces')\r\n        } else if (scrollTop >= bunsHeight + saucesHeight && scrollTop < bunsHeight + saucesHeight + mainsHeight) {\r\n            setActiveTab('mains')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n            <h1 className=\"text text_type_main-large mb-5 mt-10\">Соберите бургер</h1>\r\n            <TabBar active={activeTab} />\r\n            <section onScroll={handleScroll} className={styles.groups}>\r\n                <IngredientGroup id='buns' setHeight={setBunsHeights} name=\"Булки\" items={buns} />\r\n                <IngredientGroup id='sauces' setHeight={setSaucesHeights} name=\"Соусы\" items={sauces} />\r\n                <IngredientGroup id='mains' setHeight={setMainsHeights} name=\"Начинка\" items={mains} />\r\n            </section>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default BurgerIngredients;","import BurgerConstructor from '../../components/burger-constructor/burger-constructor';\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport styles from './style.module.css';\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <div className={styles.wrapper}>\r\n                    <BurgerIngredients />\r\n                    <BurgerConstructor />\r\n                </div>\r\n            </DndProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import styles from './style.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NotFoundPage() {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div>\r\n                <p className=\"text text_type_main-large\">404. Страница не найдена.</p>\r\n                <p className=\"text text_type_main-default\">\r\n                    <Link to=\"/\" className={styles.link}>Вернуться на главную</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage;","import { BASE_URL, sendData, getResponse } from \"./api\";\r\nimport { getCookie } from \"../utils/cookie\";\r\nimport { TUserPathData, TUserRegisterData } from \"./types/data\";\r\n\r\nexport async function register(formData: TUserRegisterData) {\r\n    const res = await sendData('/auth/register', formData);\r\n    return getResponse(res);\r\n}\r\n\r\nexport async function login(formData: { email: string; password: string; }) {\r\n    const res = await sendData('/auth/login', formData);\r\n    return getResponse(res);\r\n}\r\n\r\nexport async function getUser() {\r\n    const reqOptions: RequestInit = {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: 'Bearer ' + getCookie('accessToken')\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer'\r\n    }\r\n    const res = await fetch(BASE_URL + '/auth/user', reqOptions);\r\n    return getResponse(res);\r\n}\r\n\r\nexport async function refreshToken(tokenData: { token: string; }) {\r\n    const res = await sendData('/auth/token', tokenData);\r\n    return getResponse(res);\r\n}\r\n\r\nexport async function patchUser(userData: TUserPathData) {\r\n    const reqOptions: RequestInit = {\r\n        method: 'PATCH',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: 'Bearer ' + getCookie('accessToken')\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(userData)\r\n    };\r\n    const res = await fetch(BASE_URL + '/auth/user', reqOptions);\r\n    return getResponse(res);\r\n}\r\n\r\nexport function logout(tokenData) {\r\n    return sendData('/auth/logout', tokenData).then(getResponse);\r\n}\r\n\r\n","import { forgotPassword, resetPassword } from '../api';\r\nimport { register, login, getUser, refreshToken, patchUser, logout } from '../auth';\r\nimport { deleteCookie, setAccessCookie } from '../../utils/cookie';\r\nimport { clearComponentsAndResetCountsThunk } from './burger-constructor';\r\nimport { AppDispatch, AppThunk } from '../types';\r\nimport { TUser, TUserPathData, TUserRegisterData } from '../types/data';\r\n\r\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST' as const;\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS' as const;\r\nexport const REGISTER_FAILED = 'REGISTER_FAILED' as const;\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST' as const;\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS' as const;\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED' as const;\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST' as const;\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS' as const;\r\nexport const FORGOT_PASSWORD_FAILED = 'FORGOT_PASSWORD_FAILED' as const;\r\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST' as const;\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS' as const;\r\nexport const RESET_PASSWORD_FAILED = 'RESET_PASSWORD_FAILED' as const;\r\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST' as const; \r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCESS' as const;\r\nexport const GET_USER_FAILED = 'GET_USER_FAILED' as const;\r\nexport const REFRESH_TOKEN_REQUEST = 'REFRESH_TOKEN_REQUEST' as const;\r\nexport const REFRESH_TOKEN_SUCCESS = 'REFRESH_TOKEN_SUCCESS' as const;\r\nexport const REFRESH_TOKEN_FAILED = 'REFRESH_TOKEN_FAILED' as const;\r\nexport const PATCH_USER_REQUEST = 'PATCH_USER_REQUEST' as const;\r\nexport const PATCH_USER_SUCCESS = 'PATCH_USER_SUCCESS' as const;\r\nexport const PATCH_USER_FAILED = 'PATCH_USER_FAILED' as const;\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST' as const;\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS' as const;\r\nexport const LOGOUT_FAILED = 'LOGOUT_FAILED' as const;\r\n\r\ninterface IRegisterRequestAction {\r\n    readonly type: typeof REGISTER_REQUEST\r\n}\r\n\r\ninterface IRegisterSuccessAction {\r\n    readonly type: typeof REGISTER_SUCCESS;\r\n    readonly user: TUser;\r\n}\r\n\r\ninterface IRegisterFailedAction {\r\n    readonly type: typeof REGISTER_FAILED;\r\n    readonly message: string;\r\n}\r\n\r\ninterface ILoginRequestAction {\r\n    readonly type: typeof LOGIN_REQUEST\r\n}\r\n\r\ninterface ILoginSuccessAction {\r\n    readonly type: typeof LOGIN_SUCCESS;\r\n    readonly user: TUser;\r\n}\r\n\r\ninterface ILoginFailedAction {\r\n    readonly type: typeof LOGIN_FAILED;\r\n    readonly message: string;\r\n}\r\n\r\ninterface IForgotPasswordRequestAction {\r\n    readonly type: typeof FORGOT_PASSWORD_REQUEST\r\n}\r\n\r\ninterface IForgotPasswordSuccessAction {\r\n    readonly type: typeof FORGOT_PASSWORD_SUCCESS;\r\n}\r\n\r\ninterface IForgotPasswordFailedAction {\r\n    readonly type: typeof FORGOT_PASSWORD_FAILED\r\n}\r\n\r\ninterface IResetPasswordRequestAction {\r\n    readonly type: typeof RESET_PASSWORD_REQUEST\r\n}\r\n\r\ninterface IResetPasswordSuccessAction {\r\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n}\r\n\r\ninterface IResetPasswordFailedAction {\r\n    readonly type: typeof RESET_PASSWORD_FAILED;\r\n    readonly message: string;\r\n}\r\n\r\ninterface IGetUserRequestAction {\r\n    readonly type: typeof GET_USER_REQUEST\r\n}\r\n\r\ninterface IGetUserSuccessAction {\r\n    readonly type: typeof GET_USER_SUCCESS;\r\n    readonly user: TUser;\r\n}\r\n\r\ninterface IGetUserFailedAction {\r\n    readonly type: typeof GET_USER_FAILED;\r\n    readonly message: string;\r\n}\r\n\r\ninterface IRefreshTokenRequestAction {\r\n    readonly type: typeof REFRESH_TOKEN_REQUEST\r\n}\r\n\r\ninterface IRefreshTokenSuccessAction {\r\n    readonly type: typeof REFRESH_TOKEN_SUCCESS;\r\n}\r\n\r\ninterface IRefreshTokenFailedAction {\r\n    readonly type: typeof REFRESH_TOKEN_FAILED;\r\n    readonly message: string;\r\n}\r\n\r\ninterface IPatchUserRequestAction {\r\n    readonly type: typeof PATCH_USER_REQUEST\r\n}\r\n\r\ninterface IPatchUserSuccessAction {\r\n    readonly type: typeof PATCH_USER_SUCCESS;\r\n    readonly user: TUser;\r\n}\r\n\r\ninterface IPatchUserFailedAction {\r\n    readonly type: typeof PATCH_USER_FAILED;\r\n    readonly message: string;\r\n}\r\n\r\ninterface ILogoutRequestAction {\r\n    readonly type: typeof LOGOUT_REQUEST\r\n}\r\n\r\ninterface ILogoutSuccessAction {\r\n    readonly type: typeof LOGOUT_SUCCESS;\r\n}\r\n\r\ninterface ILogoutFailedAction {\r\n    readonly type: typeof LOGOUT_FAILED;\r\n    readonly message: string;\r\n}\r\n\r\ninterface IDefault {\r\n    readonly type: undefined;\r\n}\r\n\r\nexport type TUserActions =\r\n    | IRegisterRequestAction\r\n    | IRegisterSuccessAction\r\n    | IRegisterFailedAction\r\n    | ILoginRequestAction\r\n    | ILoginSuccessAction\r\n    | ILoginFailedAction\r\n    | IForgotPasswordRequestAction\r\n    | IForgotPasswordSuccessAction\r\n    | IForgotPasswordFailedAction\r\n    | IResetPasswordRequestAction\r\n    | IResetPasswordSuccessAction\r\n    | IResetPasswordFailedAction\r\n    | IGetUserRequestAction\r\n    | IGetUserSuccessAction\r\n    | IGetUserFailedAction\r\n    | IRefreshTokenRequestAction\r\n    | IRefreshTokenSuccessAction\r\n    | IRefreshTokenFailedAction\r\n    | IPatchUserRequestAction\r\n    | IPatchUserSuccessAction\r\n    | IPatchUserFailedAction\r\n    | ILogoutRequestAction\r\n    | ILogoutSuccessAction\r\n    | ILogoutFailedAction\r\n    | IDefault\r\n\r\n\r\nexport const registerUserThunk: AppThunk = (formData: TUserRegisterData) =>\r\n    (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: REGISTER_REQUEST\r\n        });\r\n        register(formData)\r\n            .then(res => {\r\n                if (res.success) {\r\n                    setAccessCookie(res.accessToken);\r\n                    localStorage.setItem('refreshToken', res.refreshToken);\r\n                    dispatch({\r\n                        type: REGISTER_SUCCESS,\r\n                        user: res.user\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: REGISTER_FAILED,\r\n                    message: err.message,\r\n                });\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\nexport const loginUserThunks: AppThunk = (formData: { email: string; password: string; }) =>\r\n    (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: LOGIN_REQUEST\r\n        });\r\n        login(formData)\r\n            .then(res => {\r\n                if (res.success) {\r\n                    setAccessCookie(res.accessToken);\r\n                    localStorage.setItem('refreshToken', res.refreshToken);\r\n                    dispatch({\r\n                        type: LOGIN_SUCCESS,\r\n                        user: res.user\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: LOGIN_FAILED,\r\n                    message: err.message,\r\n                });\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\nexport const forgotUserPasswordThunk: AppThunk = (formData: { email: string }) => \r\n    (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_REQUEST\r\n        });\r\n        forgotPassword(formData)\r\n            .then(res => {\r\n                if (res.success) {\r\n                    localStorage.setItem('isResetPassword', 'true');\r\n                    dispatch({\r\n                        type: FORGOT_PASSWORD_SUCCESS\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: FORGOT_PASSWORD_FAILED\r\n                });\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\nexport const resetUserPasswordThunk: AppThunk = (formData: { token: string; password: string }) =>\r\n    (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: RESET_PASSWORD_REQUEST\r\n        });\r\n        resetPassword(formData)\r\n            .then(res => {\r\n                if (res.success) {\r\n                    dispatch({\r\n                        type: RESET_PASSWORD_SUCCESS,\r\n                    });\r\n                }\r\n            }).catch(err => {\r\n                dispatch({\r\n                    type: RESET_PASSWORD_FAILED,\r\n                    message: err.message\r\n                });\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\nexport const getUserDataThunk: AppThunk = () =>\r\n    (dispatch: AppDispatch | AppThunk) => {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        });\r\n        getUser().then(res => {\r\n            if (res.success) {\r\n                localStorage.removeItem('isResetPassword');\r\n                dispatch({\r\n                    type: GET_USER_SUCCESS,\r\n                    user: res.user\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            if (err.message === \"jwt expired\" || err.message === \"jwt malformed\") {\r\n                dispatch(refreshUserTokenThunk(getUserDataThunk));\r\n            } else {\r\n                dispatch({\r\n                    type: GET_USER_FAILED,\r\n                    message: err.message\r\n                });\r\n                console.error(err);\r\n            }\r\n        });\r\n    }\r\n\r\nexport const refreshUserTokenThunk: AppThunk = (toDispatchAgain) =>\r\n    (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: REFRESH_TOKEN_REQUEST\r\n        });\r\n        const token = localStorage.getItem('refreshToken');\r\n        if (token) {\r\n            refreshToken({ token: token })\r\n                .then(res => {\r\n                    if (res.success) {\r\n                        setAccessCookie(res.accessToken);\r\n                        localStorage.setItem('refreshToken', res.refreshToken);\r\n                        dispatch({\r\n                            type: REFRESH_TOKEN_SUCCESS,\r\n                        });\r\n                        dispatch(toDispatchAgain());\r\n                    }\r\n                }).catch(err => {\r\n                    dispatch({\r\n                        type: REFRESH_TOKEN_FAILED,\r\n                        message: err.message\r\n                    });\r\n                    console.error(err);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\nexport const patchUserDataThunk: AppThunk = (userData: TUserPathData) =>\r\n    (dispatch: AppDispatch | AppThunk) => {\r\n        dispatch({\r\n            type: PATCH_USER_REQUEST\r\n        });\r\n        patchUser(userData).then(res => {\r\n            if (res.success) {\r\n                dispatch({\r\n                    type: PATCH_USER_SUCCESS,\r\n                    user: res.user\r\n                });\r\n            }\r\n        }).catch(err => {\r\n            if (err.message === \"jwt expired\" || err.message === \"jwt malformed\") {\r\n                dispatch(refreshUserTokenThunk(getUserDataThunk));\r\n            } else {\r\n                dispatch({\r\n                    type: PATCH_USER_FAILED,\r\n                    message: err.message\r\n                });\r\n                console.error(err);\r\n            }\r\n        });\r\n    }\r\n\r\nexport const logoutUserThunk: AppThunk = () =>\r\n    (dispatch: AppDispatch | AppThunk) => {\r\n        dispatch({\r\n            type: LOGOUT_REQUEST\r\n        });\r\n        const token = localStorage.getItem('refreshToken');\r\n        if (token) {\r\n            logout({ token: token })\r\n                .then(res => {\r\n                    if (res.success) {\r\n                        deleteCookie('accessToken');\r\n                        localStorage.removeItem('refreshToken');\r\n                        dispatch({\r\n                            type: LOGOUT_SUCCESS,\r\n                        });\r\n                        dispatch(clearComponentsAndResetCountsThunk());\r\n                    }\r\n                }).catch(err => {\r\n                    dispatch({\r\n                        type: LOGOUT_FAILED,\r\n                        message: err.message\r\n                    });\r\n                    console.error(err);\r\n                });\r\n        }\r\n    }","import styles from './style.module.css';\r\nimport React from 'react';\r\n\r\ninterface IFormWrapperProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst FormWrapper: React.FC<IFormWrapperProps> = ({ children }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(FormWrapper);","import styles from './style.module.css';\r\nimport React, { useState, useRef } from 'react';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { loginUserThunks } from '../../services/actions/user';\r\nimport { Redirect, useLocation, Link } from 'react-router-dom';\r\nimport FormWrapper from '../../components/form-wrapper/form-wrapper';\r\nimport { Location } from 'history';\r\n\r\nfunction LoginPage() {\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [passwordIcon, setPasswordIcon] = useState<any>('ShowIcon');\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation<{ from?: Location }>();\r\n\r\n    const { loginRequest, isAuthorised, loginErrorMessage } = useSelector(state => state.user);\r\n\r\n    if (isAuthorised) {\r\n        if (location.state?.from) {\r\n            return (<Redirect to={ location.state.from } />);\r\n        }\r\n        return (<Redirect to={{ pathname: '/' }} />);\r\n    }\r\n\r\n    const onChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = { ...form };\r\n        if (formData.email && formData.password) {\r\n            dispatch(loginUserThunks(formData));\r\n        }\r\n    }\r\n\r\n    const onIconClick = () => {\r\n        if (passwordRef.current) {\r\n            if (passwordRef.current.type === 'password') {\r\n                passwordRef.current.type = 'text';\r\n                setPasswordIcon('HideIcon');\r\n            } else {\r\n                passwordRef.current.type = 'password';\r\n                setPasswordIcon('ShowIcon');\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loginRequest) {\r\n        return (\r\n            <FormWrapper>\r\n                <div><p className=\"text text_type_main-medium\">Ждите...</p></div>\r\n            </FormWrapper>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FormWrapper>\r\n            <h2 className=\"text text_type_main-medium\">Вход</h2>\r\n            <form onSubmit={onSubmit} className={styles.form}>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        value={form.email}\r\n                        name={'email'}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'password'}\r\n                        icon={passwordIcon}\r\n                        onIconClick={onIconClick}\r\n                        placeholder={'Пароль'}\r\n                        value={form.password}\r\n                        ref={passwordRef}\r\n                        name={'password'}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                { loginErrorMessage && (\r\n                    <div className={`mt-6 ${styles.error}`}>\r\n                        <p className=\"text text_type_main-default\">{ loginErrorMessage }</p>\r\n                    </div> )\r\n                }\r\n                <div className=\"mt-6\"><Button type=\"primary\" size=\"medium\">Войти</Button></div>\r\n            </form>\r\n            <div>\r\n                <p className=\"text text_type_main-default\">Вы — новый пользователь?&nbsp;\r\n                    <Link to=\"/register\" className={styles.link}>Зарегистрироваться</Link>\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <p className=\"text text_type_main-default\">Забыли пароль?&nbsp;\r\n                    <Link to=\"/forgot-password\" className={styles.link}>Восстановить пароль</Link>\r\n                </p>\r\n            </div>\r\n        </FormWrapper>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import { useDispatch, useSelector } from '../../services/hooks';\r\nimport styles from './style.module.css';\r\nimport { useState, useRef } from 'react';\r\nimport { Input, Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { registerUserThunk } from '../../services/actions/user';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport FormWrapper from '../../components/form-wrapper/form-wrapper';\r\n\r\nfunction RegisterPage() {\r\n    const dispatch = useDispatch();\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [passwordIcon, setPasswordIcon] = useState<any>('ShowIcon');\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n    \r\n    const { registerRequest, isAuthorised, registerErrorMessage } = useSelector(state => state.user)\r\n\r\n    if (isAuthorised) return (<Redirect to={{ pathname: '/' }} />);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = { ...form };\r\n        if (formData.email && formData.password && formData.name) {\r\n            dispatch(registerUserThunk(formData));\r\n        }\r\n    }\r\n\r\n    const onChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    const onIconClick = () => {\r\n        if (passwordRef.current) {\r\n            if (passwordRef.current.type === 'password') {\r\n                passwordRef.current.type = 'text';\r\n                setPasswordIcon('HideIcon');\r\n            } else {\r\n                passwordRef.current.type = 'password';\r\n                setPasswordIcon('ShowIcon');\r\n            }\r\n        }\r\n    }\r\n\r\n    if (registerRequest) {\r\n        return (\r\n            <FormWrapper>\r\n                <p className=\"text text_type_main-medium\">Ждите...</p>\r\n            </FormWrapper>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <FormWrapper>\r\n            <h2 className=\"text text_type_main-medium\">Регистрация</h2>\r\n            <form onSubmit={onSubmit} className={styles.form}>\r\n                <div className=\"mt-6\"><Input\r\n                    type={'text'}\r\n                    placeholder={'Имя'}\r\n                    value={form.name}\r\n                    name={'name'}\r\n                    onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        value={form.email}\r\n                        name={'email'}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'password'}\r\n                        icon={passwordIcon}\r\n                        onIconClick={onIconClick}\r\n                        placeholder={'Пароль'}\r\n                        value={form.password}\r\n                        ref={passwordRef}\r\n                        name={'password'}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                { registerErrorMessage && (\r\n                    <div className={`mt-6 ${styles.error}`}>\r\n                        <p className=\"text text_type_main-default\">{ registerErrorMessage }</p>\r\n                    </div> )\r\n                }\r\n                <div className=\"mt-6\">\r\n                    <Button type=\"primary\" size=\"medium\">Зарегистрироваться</Button>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <p className=\"text text_type_main-default\">Уже зарегистрированы?&nbsp;\r\n                    <Link to=\"/login\" className={styles.link}>Войти</Link>\r\n                </p>\r\n            </div>\r\n        </FormWrapper>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import styles from './style.module.css';\r\nimport { useState } from 'react';\r\nimport { Input, Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { forgotUserPasswordThunk } from '../../services/actions/user';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport FormWrapper from '../../components/form-wrapper/form-wrapper';\r\n\r\nfunction ForgotPasswordPage() {\r\n    const [email, setEmail] = useState('');\r\n    const onChange = e => setEmail(e.target.value);\r\n    const dispatch = useDispatch()\r\n\r\n    const { forgotPasswordSuccess, forgotPasswordRequest, isAuthorised } = useSelector(state => state.user);\r\n\r\n    if (isAuthorised) return (<Redirect to={{ pathname: '/' }} />);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = { email: email };\r\n        if (formData.email) {\r\n            dispatch(forgotUserPasswordThunk(formData));\r\n        }\r\n    }\r\n\r\n    if (forgotPasswordSuccess) return (<Redirect to={'/reset-password'} />);\r\n    \r\n    if (forgotPasswordRequest) {\r\n        return (\r\n            <FormWrapper>\r\n                <p className=\"text text_type_main-medium\">Ждите...</p>\r\n            </FormWrapper>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FormWrapper>\r\n            <h2 className=\"text text_type_main-medium\">Восстановление пароля</h2>\r\n            <form onSubmit={onSubmit} className={styles.form}>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'Укажите e-mail'}\r\n                        value={email}\r\n                        name={'email'}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <Button type=\"primary\" size=\"medium\">Восстановить</Button>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <p className=\"text text_type_main-default\">Вспомнили пароль?&nbsp;\r\n                    <Link to=\"/login\" className={styles.link}>Войти</Link>\r\n                </p>\r\n            </div>\r\n        </FormWrapper>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage;","import styles from './style.module.css';\r\nimport { useState, useRef } from 'react';\r\nimport { Input, Button} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { resetUserPasswordThunk } from '../../services/actions/user';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport FormWrapper from '../../components/form-wrapper/form-wrapper';\r\n\r\nfunction ResetPasswordPage() {\r\n    const [form, setForm] = useState({\r\n        token: '',\r\n        password: '',\r\n    });\r\n    const [passwordIcon, setPasswordIcon] = useState<any>('ShowIcon');\r\n    const passwordRef = useRef<HTMLInputElement>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        resetPasswordSuccess,\r\n        resetPasswordRequest,\r\n        resetPasswordErrorMessage,\r\n        isAuthorised\r\n    } = useSelector(store => store.user);\r\n\r\n    if (isAuthorised) return (<Redirect to={'/'} />);\r\n\r\n    const isResetPassword = localStorage.getItem('isResetPassword');\r\n    \r\n    if (!isResetPassword || isResetPassword !== 'true' ) {\r\n        return (<Redirect to={'/forgot-password'} />);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = { ...form };\r\n        if (formData.password && formData.token) {\r\n            dispatch(resetUserPasswordThunk(formData));\r\n        }\r\n    }\r\n\r\n    const onChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    const onIconClick = () => {\r\n        if(passwordRef.current) {\r\n            if (passwordRef.current.type === 'password') {\r\n                passwordRef.current.type = 'text';\r\n                setPasswordIcon('HideIcon');\r\n            } else {\r\n                passwordRef.current.type = 'password';\r\n                setPasswordIcon('ShowIcon');\r\n            }\r\n        }\r\n    }\r\n\r\n    if (resetPasswordSuccess) return (<Redirect to={'/login'} />);\r\n\r\n    if (resetPasswordRequest) {\r\n        return (\r\n            <FormWrapper>\r\n                <p className=\"text text_type_main-medium\">Ждите...</p>\r\n            </FormWrapper>\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <FormWrapper>\r\n            <h2 className=\"text text_type_main-medium\">Восстановление пароля</h2>\r\n            <form onSubmit={onSubmit} className={styles.form}>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'password'}\r\n                        icon={passwordIcon}\r\n                        onIconClick={onIconClick}\r\n                        placeholder={'Введите новый пароль'}\r\n                        value={form.password}\r\n                        ref={passwordRef}\r\n                        name={'password'}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Введите код из письма'}\r\n                        value={form.token}\r\n                        name={'token'}\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                { resetPasswordErrorMessage && (\r\n                    <div className={`mt-6 ${styles.error}`}>\r\n                        <p className=\"text text_type_main-default\">{ resetPasswordErrorMessage }</p>\r\n                    </div> )\r\n                }\r\n                <div className=\"mt-6\">\r\n                    <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <p className=\"text text_type_main-default\">Вспомнили пароль?&nbsp;\r\n                    <Link to=\"/login\" className={styles.link}>Войти</Link>\r\n                </p>\r\n            </div>\r\n        </FormWrapper>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordPage;\r\n\r\n","import styles from './style.module.css';\r\nimport { useMemo, FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { logoutUserThunk } from '../../services/actions/user';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { TLink } from '../../services/types/data';\r\n\r\ninterface IProfileNavProps {\r\n    links: TLink[];\r\n}\r\n\r\nconst ProfileNav: FC<IProfileNavProps> = ({ links }) => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const setStyle = styles => styles.join(' ');\r\n\r\n    const logout = () => {\r\n        dispatch(logoutUserThunk());\r\n    }\r\n\r\n    const link = useMemo(() => {\r\n        return links.find(link => link.to === location.pathname);\r\n    }, [links, location]);\r\n\r\n    return (\r\n            <div>\r\n            <div className={styles.menu}>\r\n                { links.map(link => {\r\n                        return (\r\n                            <div key={link.id} className={styles.menu_item}>\r\n                                <NavLink\r\n                                    to={link.to}\r\n                                    activeClassName={styles.active}\r\n                                    exact\r\n                                >\r\n                                    <p className=\"text text_type_main-medium\">\r\n                                        {link.text}</p>\r\n                                </NavLink>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n                <div className={styles.menu_item}>\r\n                    <button\r\n                        className={setStyle(['text text_type_main-medium text_color_inactive', \r\n                            styles.btn_logout])}\r\n                        onClick={logout}>Выход</button>\r\n                </div>\r\n            </div>\r\n            { link && (\r\n                <div className={styles.description}>\r\n                    <p className='text text_type_main-default text_color_inactive'>\r\n                        { link.desc }\r\n                    </p>\r\n                </div>\r\n            ) }\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default ProfileNav;","import styles from './style.module.css';\r\nimport ProfileNav from '../../components/profile-nav/profile-nav';\r\nimport { TLink } from '../../services/types/data';\r\nimport React from 'react';\r\n\r\nconst links: TLink[] = [\r\n    {   \r\n        id: 0,\r\n        to: '/profile',\r\n        text: 'Профиль',\r\n        desc: 'В этом разделе вы можете изменить свои персональные данные',\r\n    },\r\n    {   \r\n        id: 1,\r\n        to: '/profile/orders',\r\n        text: 'История заказов',\r\n        desc: 'В этом разделе вы можете просмотреть свою историю заказов',\r\n    },\r\n];\r\n\r\nconst ProfilePage: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    \r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <aside className={styles.aside}><ProfileNav links={links} /></aside>\r\n            <section className={styles.content}>\r\n                { children }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import styles from './styles.module.css';\r\nimport React from 'react';\r\nimport { TIngredientWithCount } from '../../../services/types/data';\r\n\r\ninterface IIngredientDetailsProps {\r\n    ingredient: TIngredientWithCount;\r\n}\r\n\r\nconst IngredientDetails: React.FC<IIngredientDetailsProps> = ({ ingredient }) => {\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.header}>\r\n                <h3 className='text text_type_main-large'>Детали ингредиента</h3>\r\n            </div>\r\n            <div className={styles.details}>\r\n                <img src={ingredient.image_large} alt={ingredient.name} />\r\n                <p className='text text_type_main-medium mt-4 mb-8'>{ingredient.name}</p>\r\n                <div className={styles.info}>\r\n                    <div className={styles.info_item}>\r\n                        <p className='text text_type_main-default text_color_inactive mb-2'>Калории,ккал</p>\r\n                        <p className='text text_type_digits-default text_color_inactive'>{ingredient.calories}</p>\r\n                    </div>\r\n                    <div className={styles.info_item}>\r\n                        <p className='text text_type_main-default text_color_inactive mb-2'>Белки, г</p>\r\n                        <p className='text text_type_digits-default text_color_inactive'>{ingredient.proteins}</p>\r\n                    </div>\r\n                    <div className={styles.info_item}>\r\n                        <p className='text text_type_main-default text_color_inactive mb-2'>Жиры, г</p>\r\n                        <p className='text text_type_digits-default text_color_inactive'>{ingredient.fat}</p>\r\n                    </div>\r\n                    <div className={styles.info_item}>\r\n                        <p className='text text_type_main-default text_color_inactive mb-2'>Углеводы, г</p>\r\n                        <p className='text text_type_digits-default text_color_inactive'>{ingredient.carbohydrates}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default React.memo(IngredientDetails);","import styles from './style.module.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport IngredientDetails from '../../components/modal/ingredient-details/ingredient-details';\r\nimport { TIngredientWithCount } from '../../services/types/data';\r\n\r\nfunction IngredientPage() {\r\n\r\n    const { id } = useParams<any>();\r\n    const { items, itemsRequest, itemsSuccess } = useSelector(state => state.burgerIngredients);\r\n    const [ingredient, setIngredient] = useState<TIngredientWithCount | null>(null);\r\n\r\n    useEffect(() => {\r\n        const ingredient = items.find(i => i._id === id);\r\n        if (ingredient) {\r\n            setIngredient(ingredient);\r\n        }\r\n    //eslint-disable-next-line\r\n    }, [itemsSuccess])\r\n\r\n    if (itemsRequest) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div><p className=\"text text_type_main-medium\">\r\n                    Загрузка...</p></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!ingredient) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div><p className=\"text text_type_main-medium\">\r\n                    Ой, не нашли такой ингредиент!</p></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <IngredientDetails ingredient={ingredient} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngredientPage;","const dayTextFormat = (n: number, text_forms: string[]): string => {  \r\n    n = Math.abs(n) % 100; \r\n    var n1 = n % 10;\r\n    if (n > 10 && n < 20) { return text_forms[2]; }\r\n    if (n1 > 1 && n1 < 5) { return text_forms[1]; }\r\n    if (n1 === 1) { return text_forms[0]; }\r\n    return text_forms[2];\r\n}\r\n\r\nexport const getFormattedDate = (date: string) => {\r\n    const parsedDate: Date = new Date(Date.parse(date));\r\n    const diff: number = new Date().valueOf() - parsedDate.valueOf();\r\n    if (diff < 0) return 'когда-то в будущем...';\r\n    const day = 24 * 60 * 60 * 1000;\r\n    const time = parsedDate.toLocaleTimeString('ru', { hour: '2-digit', minute: '2-digit', timeZone: 'Europe/Moscow'});\r\n    if (diff < day) {\r\n        return `Cегодня, ${time} i-GMT+3`;\r\n    } else if (diff < day * 2) {\r\n        return `Вчера, ${time} i-GMT+3`;\r\n    } else {\r\n        const days = Math.floor(diff / day);\r\n        const daysFormat = dayTextFormat(days, ['день', 'дня', 'дней']);\r\n        return `${days} ${daysFormat} назад, ${time} i-GMT+3`;\r\n    }\r\n}","import React from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nconst ComponentAvatar: React.FC<{ image: string; alt: string }> = ({ image, alt }) => {\r\n    return (\r\n        <div className={styles.avatar}>\r\n            <img src={image} className={styles.img} alt={ alt || 'unknown ingredient' } />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ComponentAvatar); ","import React from 'react';\r\nimport styles from './styles.module.css';\r\nimport ComponentAvatar from '../avatar/avatar';\r\nimport { TIngredientWithCount } from '../../../services/types/data';\r\n\r\ninterface IComponentAvatarGroupProps {\r\n    items: TIngredientWithCount[];\r\n    max: number;\r\n}\r\n\r\nconst ComponentAvatarGroup: React.FC<IComponentAvatarGroupProps> = ({ items, max }) => {\r\n\r\n    const renderItems = [ ...items ].reverse();\r\n\r\n    if (max && renderItems.length > max) {\r\n\r\n        const rest = renderItems.length - max + 1;\r\n\r\n        return (\r\n            <div className={styles.group}>\r\n                <div className={styles.more}>\r\n                    <p className=\"text text_type_main-default\">{`+${rest}`}</p>\r\n                    <div className={styles.avatar}>\r\n                        <ComponentAvatar\r\n                            image={renderItems[renderItems.length - max].image}\r\n                            alt={renderItems[renderItems.length - (max - 1)].name} />\r\n                    </div>\r\n                </div>\r\n                { renderItems\r\n                    .slice(renderItems.length - (max - 1), renderItems.length)\r\n                    .map((item, index) => {\r\n                        return (\r\n                            <div key={index} className={styles.avatar}>\r\n                                <ComponentAvatar image={item.image} alt={item.name} />\r\n                            </div>\r\n                        );\r\n                }) }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={styles.group}>\r\n            { renderItems.map((item, index) => {\r\n                return (<div key={index} className={styles.avatar}>\r\n                    <ComponentAvatar image={item.image} alt={item.name} />\r\n                    </div>);\r\n            }) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ComponentAvatarGroup); ","import styles from './styles.module.css';\r\nimport { memo, useMemo, useEffect, useState, FC } from \"react\";\r\nimport { useSelector } from '../../../services/hooks';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getFormattedDate } from '../../../utils/date-format';\r\nimport ComponentAvatarGroup from '../avatar-group/avatar-group';\r\nimport { TIngredientWithCount } from '../../../services/types/data';\r\n\r\ninterface IOrderCard {\r\n    number: number;\r\n    createdAt: string;\r\n    name:string;\r\n    ingredients: string[];\r\n    status?: string;\r\n}\r\n\r\nconst OrderCard: FC<IOrderCard> = ({ number, createdAt, name, ingredients, status }) => {\r\n\r\n    const [updatedIngredients, setUpdatedIngredients] = useState<TIngredientWithCount[]>([]);\r\n    const { items } = useSelector(state => state.burgerIngredients)\r\n\r\n    useEffect(() => {\r\n\r\n        const ids: string[] = ingredients;\r\n        const ingreds: TIngredientWithCount[] = [];\r\n        ids.forEach(id => {\r\n            const found: TIngredientWithCount | undefined = items.find(item => item._id === id);\r\n            if (found) {\r\n                const index = ingreds.findIndex(item => item._id === found._id);\r\n                if (index === -1) {\r\n                    ingreds.push({ ...found, count: 1 });\r\n                } else {\r\n                    ingreds[index].count++\r\n                }\r\n            }\r\n        });\r\n        setUpdatedIngredients(ingreds);\r\n    }, [items, ingredients])\r\n\r\n    const totalPrice = useMemo(() => {\r\n        return updatedIngredients.length ? updatedIngredients.reduce((total, ingredient) => {\r\n            return total + ( ingredient.price * ingredient.count )\r\n        }, 0) : 0;\r\n    }, [updatedIngredients]);\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <div className={styles.topDetails}>\r\n                <div><p className=\"text text_type_digits-default\">#{number}</p></div>\r\n                <div className={styles.date}>\r\n                    <p className=\"text text_type_main-small\">{getFormattedDate(createdAt)}</p>\r\n                </div>\r\n            </div>\r\n            <div className={styles.heading}>\r\n                <h3 className=\"text text_type_main-medium\">{name}</h3>\r\n            </div>\r\n            { status && (\r\n                <div className={styles.status}>\r\n                    { (status === 'done')\r\n                        ? <span className={styles.done}><p className=\"text text_type_main-default\">Выполнен</p></span>\r\n                        : (status === 'сreated')\r\n                            ? <p className=\"text text_type_main-default\">Создан</p>\r\n                            : <p className=\"text text_type_main-default\">Готовится</p>\r\n                    }\r\n                </div>\r\n            ) }\r\n            \r\n            <div className={styles.bottomDetails}>\r\n                { updatedIngredients.length && <ComponentAvatarGroup items={updatedIngredients} max={6} /> }\r\n                <div className={styles.price}>\r\n                    <p className=\"text text_type_digits-default mr-2\">{totalPrice}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(OrderCard);","import styles from './styles.module.css';\r\nimport React, { memo } from 'react';\r\nimport OrderCard from './order-card/order-card';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { TOrder } from '../../services/types/data';\r\n\r\ninterface IOrderListProps {\r\n    orders: TOrder[];\r\n    page: string;\r\n    withStatus?: boolean\r\n}\r\n\r\nconst OrderList: React.FC<IOrderListProps> = ({ orders, page, withStatus }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className={styles.list}>\r\n            { orders && orders.map(order => {\r\n                    return (\r\n                        <Link\r\n                            key={order._id} \r\n                            to={{\r\n                                pathname: `/${page}/${order._id}`,\r\n                                state: {\r\n                                    background: location,\r\n                                    order: order\r\n                                },\r\n                            }} >\r\n                            <article className={styles.card}>\r\n                                <OrderCard\r\n                                    number={order.number}\r\n                                    createdAt={order.createdAt}\r\n                                    name={order.name}\r\n                                    ingredients={order.ingredients}\r\n                                    status={ ( withStatus && order.status) || undefined }\r\n                                />\r\n                            </article>\r\n                        </Link>\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(OrderList);","import { TOrder, TPayload } from \"../types/data\";\r\n\r\nexport const WS_CONNECTION_START = 'WS_CONNECTION_START' as const;\r\nexport const WS_CONNECTION_SUCCESS = 'WS_CONNECTION_SUCCESS' as const;\r\nexport const WS_CONNECTION_ERROR = 'WS_CONNECTION_ERROR' as const;\r\nexport const WS_CONNECTION_CLOSED = 'WS_CONNECTION_CLOSED' as const;\r\nexport const WS_GET_MESSAGE = 'WS_GET_MESSAGE' as const;\r\nexport const WS_CONNECTION_CLOSE = 'WS_CONNECTION_CLOSE' as const;\r\n\r\nexport const USER_WS_CONNECTION_START = 'USER_WS_CONNECTION_START' as const;\r\nexport const USER_WS_CONNECTION_SUCCESS = 'USER_WS_CONNECTION_SUCCESS' as const;\r\nexport const USER_WS_CONNECTION_CLOSED = 'USER_WS_CONNECTION_CLOSED' as const;\r\nexport const USER_WS_CONNECTION_ERROR = 'USER_WS_CONNECTION_ERROR' as const;\r\nexport const USER_WS_GET_MESSAGE = 'USER_WS_GET_MESSAGE' as const;\r\nexport const USER_WS_CONNECTION_CLOSE = 'USER_WS_CONNECTION_CLOSE' as const;\r\n\r\ninterface IWsConnectionStartAction {\r\n    readonly type: typeof WS_CONNECTION_START\r\n}\r\n\r\ninterface IWsConnectionSuccessAction {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS\r\n}\r\n\r\ninterface IWsConnectionErrorAction {\r\n    readonly type: typeof WS_CONNECTION_ERROR\r\n}\r\n\r\ninterface IWsConnectionClosedAction {\r\n    readonly type: typeof WS_CONNECTION_CLOSED\r\n}\r\n\r\ninterface IWsGetMessageAction {\r\n    readonly type: typeof WS_GET_MESSAGE;\r\n    readonly payload: TPayload;\r\n}\r\n\r\ninterface IWsConnectionCloseAction {\r\n    readonly type: typeof WS_CONNECTION_CLOSE\r\n}\r\n\r\n// User actions\r\n\r\ninterface IUserWsConnectionStartAction {\r\n    readonly type: typeof USER_WS_CONNECTION_START\r\n}\r\n\r\ninterface IUserWsConnectionSuccessAction {\r\n    readonly type: typeof USER_WS_CONNECTION_SUCCESS\r\n}\r\n\r\ninterface IUserWsConnectionErrorAction {\r\n    readonly type: typeof USER_WS_CONNECTION_ERROR\r\n}\r\n\r\ninterface IUserWsConnectionClosedAction {\r\n    readonly type: typeof USER_WS_CONNECTION_CLOSED\r\n}\r\n\r\ninterface IUserWsGetMessageAction {\r\n    readonly type: typeof USER_WS_GET_MESSAGE;\r\n    readonly payload: { orders: TOrder[] };\r\n}\r\n\r\ninterface IUserWsConnectionCloseAction {\r\n    readonly type: typeof USER_WS_CONNECTION_CLOSE\r\n}\r\n\r\ninterface IDefault {\r\n    readonly type: undefined\r\n}\r\n\r\nexport type TWsActions =\r\n    | IWsConnectionStartAction\r\n    | IWsConnectionSuccessAction\r\n    | IWsConnectionErrorAction\r\n    | IWsConnectionClosedAction\r\n    | IWsGetMessageAction\r\n    | IWsConnectionCloseAction\r\n    | IUserWsConnectionStartAction\r\n    | IUserWsConnectionSuccessAction\r\n    | IUserWsConnectionErrorAction\r\n    | IUserWsConnectionClosedAction\r\n    | IUserWsGetMessageAction\r\n    | IUserWsConnectionCloseAction\r\n    | IDefault\r\n\r\nexport const wsInit = (): IWsConnectionStartAction => ({\r\n    type: WS_CONNECTION_START\r\n});\r\n\r\nexport const wsClose = (): IWsConnectionClosedAction => ({\r\n    type: WS_CONNECTION_CLOSED\r\n});\r\n\r\nexport const onOpen = (): IWsConnectionSuccessAction => ({\r\n    type: WS_CONNECTION_SUCCESS\r\n});\r\n\r\nexport const onError = (): IWsConnectionErrorAction => ({\r\n    type: WS_CONNECTION_ERROR\r\n});\r\n\r\nexport const onClose = (): IWsConnectionCloseAction => ({\r\n    type: WS_CONNECTION_CLOSE\r\n});\r\n\r\nexport const onMessage = (payload: TPayload): IWsGetMessageAction => ({\r\n    type: WS_GET_MESSAGE,\r\n    payload\r\n});\r\n\r\nexport const userWsInit = (): IUserWsConnectionStartAction => ({\r\n    type: USER_WS_CONNECTION_START\r\n});\r\n\r\nexport const userWsClose = (): IUserWsConnectionClosedAction => ({\r\n    type: USER_WS_CONNECTION_CLOSED\r\n});\r\n\r\nexport const userOnOpen = (): IUserWsConnectionSuccessAction => ({\r\n    type: USER_WS_CONNECTION_SUCCESS\r\n});\r\n\r\nexport const userOnError = (): IUserWsConnectionErrorAction => ({\r\n    type: USER_WS_CONNECTION_ERROR\r\n});\r\n\r\nexport const userOnClose = (): IUserWsConnectionCloseAction => ({\r\n    type: USER_WS_CONNECTION_CLOSE\r\n});\r\n\r\nexport const userOnMessage = (payload: { orders: TOrder[] }): IUserWsGetMessageAction => ({\r\n    type: USER_WS_GET_MESSAGE,\r\n    payload\r\n});\r\n\r\n\r\n","import styles from './style.module.css';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport OrderList from '../../components/orders-list/order-list';\r\nimport { userWsClose, userWsInit } from '../../services/actions/wsActions';\r\n\r\nfunction ProfileOrdersPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { isAuthorised, wsConnected, orders } = useSelector(state => ({\r\n        orders: state.userOrders.orders,\r\n        wsConnected: state.userOrders.wsConnected,\r\n        isAuthorised: state.user.isAuthorised,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (isAuthorised && !wsConnected) {\r\n          dispatch(userWsInit());\r\n        }\r\n\r\n        return () => {\r\n            dispatch(userWsClose());\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [isAuthorised]);\r\n\r\n    return (\r\n        <section className={styles.orders}>\r\n            { (orders && orders.length)\r\n                ? <OrderList page={'profile/orders'} orders={[ ...orders].reverse()} withStatus />\r\n                : <div><p className=\"text text_type_main-medium\">Загрузка...</p></div>\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ProfileOrdersPage;","import { memo, FC } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\ninterface IOrderColumnProps {\r\n    title: string;\r\n    orders: number[];\r\n    done?: boolean\r\n}\r\n\r\nconst OrderColumn: FC<IOrderColumnProps> = ({ title, orders, done }) => {\r\n\r\n    const columns = orders && [\r\n        orders.slice(0, 10),\r\n        orders.slice(10, 20),\r\n        orders.slice(20, 30),\r\n        orders.slice(30, 40),\r\n        orders.slice(40, 50),\r\n    ];\r\n\r\n    return (\r\n        <div className={styles.list}>\r\n            <h6 className=\"text text_type_main-medium mb-6\">{`${title}:`}</h6>\r\n            <div className={styles.columns}>\r\n                { columns && columns.filter(column => column.length !== 0).map((column, index) => {\r\n                    return (\r\n                        <div key={index} className={`${styles.column} ${ done && styles.done}`}>\r\n                            { column.map((orderNumber, i) => {\r\n                                return <p key={i} className=\"text text_type_digits-default mb-2\">{orderNumber}</p>\r\n                            }) }\r\n                        </div>\r\n                    );\r\n                }) }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(OrderColumn);","import { memo, FC } from 'react';\r\nimport styles from './styles.module.css';\r\nimport OrderColumn from './order-column/order-column';\r\n\r\ninterface IOrderStatsProps {\r\n    total: number;\r\n    totalToday: number;\r\n    ordersDone: number[];\r\n    ordersPending: number[];\r\n}\r\n\r\nconst OrderStats: FC<IOrderStatsProps> = ({ total, totalToday, ordersDone, ordersPending }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.statusContainer}>\r\n                <div className={styles.list}>\r\n                    <OrderColumn title={'Готовы'} orders={ordersDone} done />\r\n                </div>\r\n                <div className={styles.list}>\r\n                    <OrderColumn title={'В работе'} orders={ordersPending} />\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-15\">\r\n                <h6 className=\"text text_type_main-medium\">Выполнено за все время:</h6>\r\n                <div className={styles.glow}><p className=\"text text_type_digits-large\">{total}</p></div>\r\n            </div>\r\n            <div className=\"mt-15\">\r\n                <h6 className=\"text text_type_main-medium\">Выполнено за сегодня:</h6>\r\n                <div className={styles.glow}><p className=\"text text_type_digits-large\">{totalToday}</p></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(OrderStats);","import styles from './style.module.css';\r\nimport { useMemo, useEffect } from 'react';\r\nimport OrderList from '../../components/orders-list/order-list';\r\nimport OrderStats from '../../components/orders-stats/order-stats';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSE } from '../../services/actions/wsActions';\r\n\r\nfunction FeedPage() {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { wsConnected, orders, total, totalToday } = useSelector(state => state.orders);\r\n\r\n    useEffect(() => {\r\n        if (!wsConnected) {\r\n            dispatch({ type: WS_CONNECTION_START});\r\n        }\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSE});\r\n        }\r\n    //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const ordersDone = useMemo(() => {\r\n        return orders.filter(order => order.status === 'done').map(order => order.number)\r\n    }, [orders]);\r\n    const ordersPending = useMemo(() => {\r\n        return orders.filter(order => order.status === 'pending').map(order => order.number);\r\n    }, [orders]);\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h1 className=\"text text_type_main-large mb-5 mt-10\">Лента заказов</h1>\r\n            <div className={styles.container}>\r\n                <section className={styles.orders}>\r\n                    { orders.length\r\n                        ? <OrderList page={'feed'} orders={orders} />\r\n                        : <div><p className=\"text text_type_main-medium\">Загрузка...</p></div>\r\n                    }\r\n                </section>\r\n                <section className={styles.stats}>\r\n                    { orders.length\r\n                        ? <OrderStats total={total} totalToday={totalToday} ordersDone={ordersDone} ordersPending={ordersPending} />\r\n                        : <div><p className=\"text text_type_main-medium\">Загрузка...</p></div>\r\n                    }\r\n                </section>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeedPage;","import styles from './styles.module.css';\r\nimport { memo, useMemo, useState, useEffect, FC } from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { getFormattedDate } from '../../utils/date-format';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ComponentAvatar from '../orders-list/avatar/avatar';\r\nimport { TIngredientWithCount, TOrder } from '../../services/types/data';\r\n\r\ninterface IFeedOrderInfoProps {\r\n    order: TOrder;\r\n}\r\n\r\nconst FeedOrderInfo: FC<IFeedOrderInfoProps> = ({ order }) => {\r\n\r\n    const [ingredients, setIngredients] = useState<TIngredientWithCount[]>([]);\r\n    const { items } = useSelector(state => state.burgerIngredients)\r\n\r\n    useEffect(() => {\r\n        const ids: string[] = order.ingredients;\r\n        const ingreds: TIngredientWithCount[] = [];\r\n        ids.forEach(id => {\r\n            const found: TIngredientWithCount | undefined = items.find(item => item._id === id);\r\n            if (found) {\r\n                const index = ingreds.findIndex(item => item._id === found._id);\r\n                if (index === -1) {\r\n                    ingreds.push({ ...found, count: 1 });\r\n                } else {\r\n                    ingreds[index].count++\r\n                }\r\n            }\r\n        });\r\n        setIngredients(ingreds);\r\n    }, [items, order])\r\n\r\n    const totalPrice = useMemo(() => {\r\n        if (ingredients.length) {\r\n            return ingredients\r\n                .reduce((total, ingredient) => total + (ingredient.price * ingredient.count), 0)\r\n        }\r\n        return 0;\r\n    }, [ingredients]);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.number}>\r\n                <p className=\"text text_type_digits-default\">{`#${order.number}`}</p>\r\n            </div>\r\n            <div className=\"mt-10\">\r\n                <h1 className=\"text text_type_main-medium\">{order.name}</h1>\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                { (order.status === 'done')\r\n                    ? <span className={styles.done}><p className=\"text text_type_main-default\">Выполнен</p></span>\r\n                    : (order.status === 'сreated')\r\n                        ? <p className=\"text text_type_main-default\">Создан</p>\r\n                        : <p className=\"text text_type_main-default\">Готовится</p>\r\n                }\r\n            </div>\r\n            <div className=\"mt-15\">\r\n                <h2 className=\"text text_type_main-medium\">Состав:</h2>\r\n                <div className={styles.ingredients}>\r\n                    { ingredients.length && ingredients.map((ingredient, index) => {\r\n                            return (\r\n                                <div className={styles.item} key={index}>\r\n                                    <ComponentAvatar image={ingredient.image} alt={ingredient.name} />\r\n                                    <div className={styles.name}>\r\n                                        <p className=\"text text_type_main-default ml-4\">{ingredient.name}</p>\r\n                                    </div>\r\n                                    <div className={styles.price}>\r\n                                        <p className=\"text text_type_digits-default mr-2\">\r\n                                            {`${ingredient.count} x ${ingredient.price}`}\r\n                                        </p>\r\n                                        <CurrencyIcon type=\"primary\" />\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={`${styles.footer} mt-10`}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{getFormattedDate(order.createdAt)}</p>\r\n                <div className={styles.price}>\r\n                    <p className=\"text text_type_digits-default mr-2\">{totalPrice}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(FeedOrderInfo);","import styles from './style.module.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport FeedOrderInfo from '../../components/feed-order-info/feed-order-info';\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSE } from '../../services/actions/wsActions';\r\nimport { TOrder } from '../../services/types/data';\r\n\r\nfunction FeedOrderPage() {\r\n\r\n    const { id } = useParams<any>();\r\n    const dispatch = useDispatch();\r\n    const { wsConnected, orders } = useSelector(state => state.orders);\r\n    const [order, setOrder] = useState<TOrder | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (!wsConnected) {\r\n            dispatch({ type: WS_CONNECTION_START});\r\n        }\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSE});\r\n        }\r\n    //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const order = orders.find(o => o._id === id);\r\n        if (order) {\r\n            setOrder(order);\r\n        }\r\n    //eslint-disable-next-line\r\n    }, [orders]);\r\n\r\n    if (orders && !orders.length) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div><p className=\"text text_type_main-medium\">\r\n                    Загрузка...</p></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (order) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.container}>\r\n                    <FeedOrderInfo order={order} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div><p className=\"text text_type_main-medium\">\r\n                    Ой, не нашли такой заказ!</p></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedOrderPage;","import styles from './style.module.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport FeedOrderInfo from '../../components/feed-order-info/feed-order-info';\r\nimport { userWsClose, userWsInit } from '../../services/actions/wsActions';\r\nimport { TOrder } from '../../services/types/data';\r\n\r\nfunction ProfileOrderPage() {\r\n\r\n    const { id } = useParams<any>();\r\n\r\n    const dispatch = useDispatch();\r\n    const { isAuthorised, wsConnected, orders } = useSelector(state => ({\r\n        orders: state.userOrders.orders,\r\n        wsConnected: state.userOrders.wsConnected,\r\n        isAuthorised: state.user.isAuthorised,\r\n    }));\r\n    const [order, setOrder] = useState<TOrder | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (isAuthorised && !wsConnected) {\r\n          dispatch(userWsInit());\r\n        }\r\n        return () => {\r\n            dispatch(userWsClose());\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [isAuthorised]);\r\n\r\n    useEffect(() => {\r\n        const order = orders.find(o => o._id === id);\r\n        if (order) {\r\n            setOrder(order);\r\n        }\r\n    //eslint-disable-next-line\r\n    }, [orders]);\r\n\r\n    if (orders && !orders.length) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div><p className=\"text text_type_main-medium\">\r\n                    Загрузка...</p></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (order) {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.container}>\r\n                    <FeedOrderInfo order={order} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div><p className=\"text text_type_main-medium\">\r\n                    Ой, не нашли такой заказ!</p></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileOrderPage;","import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\nimport { TLink } from '../app-header';\r\n\r\ntype INavBarProps = {\r\n    links: TLink[];\r\n};\r\n\r\nconst NavBar: FC<INavBarProps> = ({ links }) => {\r\n\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <ul className={styles.list}>\r\n                { links.map((link) => {\r\n                        return (\r\n                            <li key={link.id} className={styles.item}>\r\n                                <NavLink\r\n                                    to={link.to}\r\n                                    activeClassName={styles.active}\r\n                                    className={styles.inactive}\r\n                                    exact={link.to === '/' ? true : false}\r\n                                >\r\n                                    {link.icon}\r\n                                    <p className=\"text text_type_main-default ml-2\">{link.text}</p>\r\n                                </NavLink>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default React.memo(NavBar);","import styles from './styles.module.css';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction AppLogo() {\r\n    return (\r\n        <Link to=\"/\" className={styles.logo}>\r\n            <Logo />\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default AppLogo;","import styles from './styles.module.css';\r\nimport NavBar from './nav-bar/nav-bar';\r\nimport AppLogo from './app-logo/app-logo';\r\nimport { BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nexport type TLink = {\r\n    id: number;\r\n    to: string;\r\n    text: string;\r\n    icon: React.ReactNode;\r\n}\r\n\r\nfunction AppHeader() {\r\n\r\n    const links: TLink[] = [\r\n        {   \r\n            id: 0,\r\n            to: '/',\r\n            text: 'Конструктор',\r\n            icon: <BurgerIcon type=\"primary\" />,\r\n        },\r\n        {   \r\n            id: 1,\r\n            to: '/feed',\r\n            text: 'Лента заказов',\r\n            icon: <ListIcon type=\"primary\" />,\r\n        },\r\n        {   \r\n            id: 2,\r\n            to: '/profile',\r\n            text: 'Личный кабинет',\r\n            icon: <ProfileIcon type=\"primary\" />,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <div className={styles.content}>\r\n                <NavBar links={links} />\r\n                <AppLogo />\r\n            </div>\r\n        </header>\r\n    );\r\n    \r\n}\r\n\r\nexport default AppHeader;","import styles from './style.module.css';\r\nimport React from 'react';\r\n\r\ninterface IMainProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Main: React.FC<IMainProps> = ({ children }) => {\r\n    return (\r\n        <main className={styles.main}>\r\n            { children }\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default React.memo(Main);","import React from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport Main from '../main/main';\r\n\r\ninterface IBaseLayoutProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst BaseLayout: React.FC<IBaseLayoutProps> = ({ children }) => {\r\n    return (\r\n        <>\r\n            <AppHeader />\r\n            <Main>\r\n                { children }\r\n            </Main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(BaseLayout);","import { useSelector } from '../../services/hooks';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\ninterface IProtectedRouteProps {\r\n    path: string;\r\n    children: React.ReactNode;\r\n    exact?: boolean;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<IProtectedRouteProps> = ({ children, ...rest }) => {\r\n\r\n    const { isAuthorised } = useSelector(store => store.user);\r\n\r\n    return (\r\n        <Route {...rest} render={({ location }) => (\r\n            isAuthorised\r\n                ? children\r\n                : <Redirect to={{\r\n                        pathname: '/login',\r\n                        state: { from: location }\r\n                    }} />\r\n        )} />\r\n    )\r\n}\r\n\r\nexport default React.memo(ProtectedRoute);","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { getUserDataThunk, patchUserDataThunk } from '../../services/actions/user';\r\nimport styles from './style.module.css';\r\n\r\nfunction ProfileForm() {\r\n\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const nameRef = useRef(null);\r\n    const emailRef = useRef(null);\r\n    const passwordRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    \r\n    const { user, getUserRequest, patchUserErrorMessage } = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserDataThunk());\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if ('name' in user && 'email' in user) {\r\n            setForm({\r\n                ...form,\r\n                name: user.name,\r\n                email: user.email,\r\n                password: '',\r\n            });\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [user]);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        let formData = {};\r\n        if (form.email) { formData = {...formData, email: form.email} }\r\n        if (form.name) { formData = {...formData, name: form.name} }\r\n        if (form.password) { formData = {...formData, password: form.password} }\r\n        dispatch(patchUserDataThunk(formData));\r\n    }\r\n\r\n    const onCancelClick = (e) => {\r\n        e.preventDefault();\r\n        if ('name' in user && 'email' in user) {\r\n            setForm({\r\n                ...form,\r\n                name: user.name,\r\n                email: user.email,\r\n                password: '',\r\n            });\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onInputEditClick = (ref) => {\r\n        ref.current.disabled = false;\r\n        ref.current.classList.remove('input__textfield-disabled');\r\n        ref.current.focus();\r\n    }\r\n\r\n    const onInputBlur = (ref) => {\r\n        ref.current.disabled = true;\r\n        ref.current.classList.add('input__textfield-disabled');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                { getUserRequest\r\n                    ? <div><p className=\"text text_type_main-default\">Загружается...</p></div> \r\n                    : <form onSubmit={onSubmit} className={styles.form}>\r\n                        <div>\r\n                            <Input\r\n                                type={'text'}\r\n                                name={'name'}\r\n                                value={form.name}\r\n                                placeholder={'Имя'}\r\n                                icon={'EditIcon'}\r\n                                disabled\r\n                                onIconClick={() => onInputEditClick(nameRef)}\r\n                                onChange={onChange}\r\n                                ref={nameRef}\r\n                                onBlur={() => onInputBlur(nameRef)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mt-6\">\r\n                            <Input\r\n                                type={'email'}\r\n                                name={'email'}\r\n                                value={form.email}\r\n                                placeholder={'Логин'}\r\n                                icon={'EditIcon'}\r\n                                disabled\r\n                                onIconClick={() => onInputEditClick(emailRef)}\r\n                                onChange={onChange}\r\n                                ref={emailRef}\r\n                                onBlur={() => onInputBlur(emailRef)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mt-6\">\r\n                            <Input\r\n                                type={'password'}\r\n                                name={'password'}\r\n                                value={form.password}\r\n                                placeholder={'Пароль'}\r\n                                icon={'EditIcon'}\r\n                                disabled\r\n                                onIconClick={() => onInputEditClick(passwordRef)}\r\n                                onChange={onChange}\r\n                                ref={passwordRef}\r\n                                onBlur={() => onInputBlur(passwordRef)}\r\n                            />\r\n                        </div>\r\n                        { patchUserErrorMessage && (\r\n                            <div className={`mt-6 ${styles.error}`}>\r\n                                <p className=\"text text_type_main-default\">{ patchUserErrorMessage }</p>\r\n                            </div> )\r\n                        }\r\n                        <div className=\"mt-6\">\r\n                            <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n                            <Button type=\"secondary\" size=\"medium\" onClick={onCancelClick}>Отмена</Button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileForm;","import {\r\n    HomePage,\r\n    LoginPage,\r\n    RegisterPage,\r\n    ForgotPasswordPage,\r\n    ResetPasswordPage,\r\n    ProfilePage,\r\n    IngredientPage,\r\n    NotFoundPage,\r\n    ProfileOrdersPage,\r\n    FeedPage,\r\n    FeedOrderPage,\r\n    ProfileOrderPage } from '../../pages';\r\nimport BaseLayout from '../layouts/base-layout';\r\nimport { Location } from 'history';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport ProtectedRoute from '../protected-route/protected-route';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { getUserDataThunk } from '../../services/actions/user';\r\nimport { getIngredientsThunk } from '../../services/actions/burger-ingredients';\r\nimport IngredientDetails from '../modal/ingredient-details/ingredient-details';\r\nimport Modal from '../modal/modal';\r\nimport FeedOrderInfo from '../feed-order-info/feed-order-info';\r\nimport ProfileForm from '../profile-form/profile-form';\r\nimport { TIngredientWithCount } from '../../services/types/data';\r\n \r\nexport default function App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n  useEffect(() => {\r\n      if (refreshToken) {\r\n        dispatch(getUserDataThunk());\r\n      }\r\n      dispatch(getIngredientsThunk());\r\n  //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n        <ModalSwitch />\r\n    </Router>\r\n  );\r\n}\r\n\r\ninterface IState {\r\n  background?: Location;\r\n  ingredient?: TIngredientWithCount;\r\n  order?: any\r\n}\r\n\r\nfunction ModalSwitch() {\r\n\r\n  let history = useHistory();\r\n  const location = useLocation<IState>();\r\n\r\n  const background = history.action === 'PUSH' && location.state && location.state.background;\r\n  const ingredient = location.state && location.state.ingredient;\r\n  const order = location.state && location.state.order;\r\n\r\n  const onClose = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <Switch location={ background || location } >\r\n        <Route path=\"/\" exact><HomePage /></Route>\r\n        <Route path=\"/feed\" exact><FeedPage /></Route>\r\n        <Route path=\"/feed/:id\" exact><FeedOrderPage /></Route>\r\n        <ProtectedRoute path=\"/profile\" exact>\r\n          <ProfilePage><ProfileForm /></ProfilePage>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders\" exact>\r\n          <ProfilePage><ProfileOrdersPage /></ProfilePage>\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders/:id\" exact><ProfileOrderPage /></ProtectedRoute>\r\n        <Route path=\"/login\" exact><LoginPage /></Route>\r\n        <Route path=\"/register\" exact><RegisterPage /></Route>\r\n        <Route path=\"/forgot-password\" exact><ForgotPasswordPage /></Route>\r\n        <Route path=\"/reset-password\" exact><ResetPasswordPage /></Route>\r\n        <Route path=\"/ingredient/:id\" exact><IngredientPage /></Route>\r\n        <Route><NotFoundPage /></Route>\r\n      </Switch>\r\n\r\n      { (background && ingredient) && (\r\n        <Route path=\"/ingredient/:id\" render={() => {\r\n            return (\r\n              <Modal onClose={onClose}>\r\n                <IngredientDetails ingredient={ingredient} />\r\n              </Modal>\r\n            );\r\n          }} /> \r\n      )}\r\n      { (background && order) && (\r\n        <Route path=\"/feed/:id\" render={() => {\r\n            return (\r\n              <Modal onClose={onClose}>\r\n                <FeedOrderInfo order={order} />\r\n              </Modal>\r\n            );\r\n          }} /> \r\n      )}\r\n      { (background && order) && (\r\n        <Route path=\"/profile/orders/:id\" render={() => {\r\n            return (\r\n              <Modal onClose={onClose}>\r\n                <FeedOrderInfo order={order} />\r\n              </Modal>\r\n            );\r\n          }} /> \r\n      )}\r\n      \r\n    </BaseLayout>\r\n  );\r\n}\r\n","import {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    INCREASE_INGREDIENT_COUNT,\r\n    DECREASE_INGREDIENT_COUNT,\r\n    RESET_INGREDIENTS_COUNT,\r\n    TBurgerIngredientsActions\r\n} from '../actions/burger-ingredients';\r\nimport { TIngredientWithCount } from '../types/data';\r\n\r\nexport type TBurgerIngredientsState = {\r\n    items: TIngredientWithCount[];\r\n    itemsRequest: boolean;\r\n    itemsSuccess: boolean;\r\n    itemsFailed: boolean;\r\n} \r\n\r\nconst initialState: TBurgerIngredientsState = {\r\n    items: [],\r\n    itemsRequest: false,\r\n    itemsSuccess: false,\r\n    itemsFailed: false,\r\n};\r\n\r\nexport const burgerIngredientsReducer = (state = initialState, action: TBurgerIngredientsActions) => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return {\r\n              ...state,\r\n              itemsRequest: true\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                itemsFailed: false,\r\n                itemsSuccess: true,\r\n                items: [...action.items].map((item) => ({ ...item, count: 0 })),\r\n                itemsRequest: false\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_FAILED: {\r\n            return {\r\n                ...state,\r\n                itemsFailed: true,\r\n                itemsRequest: false\r\n            };\r\n        }\r\n        case INCREASE_INGREDIENT_COUNT: {\r\n            if (action.item.type === 'bun') {\r\n                return {\r\n                    ...state,\r\n                    items: [...state.items]\r\n                        .map(item => item.type === 'bun' ? {...item, count: 0} : item)\r\n                        .map(item => item._id === action.item._id ? {...item, count: item.count + 2} : item)\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                items: [...state.items]\r\n                    .map(item => item._id === action.item._id ? {...item, count: ++item.count} : item)\r\n            }\r\n        }\r\n        case DECREASE_INGREDIENT_COUNT: {\r\n            return {\r\n                ...state,\r\n                items: [...state.items]\r\n                    .map(item => item._id === action.item._id ? {...item, count: --item.count} : item)\r\n            }\r\n        }\r\n        case RESET_INGREDIENTS_COUNT: {\r\n            return {\r\n                ...state,\r\n                items: [...state.items]\r\n                    .map(item => ({ ...item, count: 0 }))\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n    ADD_CONSTRUCTOR_COMPONENT,\r\n    REMOVE_CONSTRUCTOR_COMPONENT,\r\n    REORDER_CONSTRUCTOR_COMPONENTS,\r\n    CLEAR_CONSTRUCTOR_COMPONENTS,\r\n    TBurgerConstructorActions\r\n} from '../actions/burger-constructor';\r\nimport { TIngredientWithUuid } from '../types/data';\r\n\r\nexport type TBurgerConstructorState = {\r\n    bun: TIngredientWithUuid | null,\r\n    staffings: TIngredientWithUuid[],\r\n}\r\n\r\nconst initialState: TBurgerConstructorState = {\r\n    bun: null,\r\n    staffings: [],\r\n};\r\n\r\nexport const burgerConstructorReducer = (state = initialState, action: TBurgerConstructorActions) => {\r\n    switch(action.type) {\r\n        case ADD_CONSTRUCTOR_COMPONENT: {\r\n            if (action.item.type === 'bun') {\r\n                return {\r\n                    ...state,\r\n                    bun: action.item,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    staffings: [...state.staffings, action.item ],\r\n                }\r\n            }\r\n        }\r\n        case REMOVE_CONSTRUCTOR_COMPONENT: {\r\n            return {\r\n                ...state,\r\n                staffings: [...state.staffings].filter(item => item.uuid !== action.item.uuid),\r\n            }\r\n        }\r\n        case REORDER_CONSTRUCTOR_COMPONENTS: {\r\n            return {\r\n                ...state,\r\n                staffings: action.reordered\r\n            }\r\n        }\r\n        case CLEAR_CONSTRUCTOR_COMPONENTS: {\r\n            return initialState;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    RESET_ORDER,\r\n    TOrderActions\r\n} from '../actions/order';\r\n\r\nexport type TOrderState = {\r\n    number: string | null,\r\n    orderRequest: boolean,\r\n    orderFailed: boolean,\r\n}\r\n\r\nconst initialState: TOrderState = {\r\n    number: null,\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n};\r\n\r\nexport const orderReducer = (state = initialState, action: TOrderActions) => {\r\n    switch (action.type) {\r\n        case GET_ORDER_REQUEST: {\r\n            return {\r\n              ...state,\r\n              orderRequest: true\r\n            };\r\n        }\r\n        case GET_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                number: action.number,\r\n                orderFailed: false,\r\n                orderRequest: false\r\n            };\r\n        }\r\n        case GET_ORDER_FAILED: {\r\n            return {\r\n                ...state,\r\n                orderFailed: true,\r\n                orderRequest: false\r\n            };\r\n        }\r\n        case RESET_ORDER: {\r\n            return initialState\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n    REGISTER_REQUEST,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILED,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    LOGIN_REQUEST,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAILED,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILED,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAILED,\r\n    REFRESH_TOKEN_REQUEST,\r\n    REFRESH_TOKEN_SUCCESS,\r\n    REFRESH_TOKEN_FAILED,\r\n    PATCH_USER_REQUEST,\r\n    PATCH_USER_SUCCESS,\r\n    PATCH_USER_FAILED,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAILED,\r\n    TUserActions\r\n} from '../actions/user';\r\nimport { TUser } from '../types/data';\r\n\r\nexport type TUserState = {\r\n    user: TUser | {},\r\n    isAuthorised: boolean,\r\n    \r\n    registerRequest: boolean,\r\n    registerFailed: boolean,\r\n    registerErrorMessage: string,\r\n    loginRequest: boolean,\r\n    loginFailed: boolean,\r\n    loginErrorMessage: string,\r\n    forgotPasswordRequest: boolean,\r\n    forgotPasswordSuccess: boolean,\r\n    forgotPasswordFailed: boolean,\r\n    resetPasswordRequest: boolean,\r\n    resetPasswordSuccess: boolean,\r\n    resetPasswordFailed: boolean,\r\n    resetPasswordErrorMessage: string,\r\n    getUserRequest: boolean,\r\n    getUserFailed: boolean,\r\n    getUserErrorMessage: string,\r\n    refreshTokenRequest: boolean,\r\n    refreshTokenSuccess: boolean,\r\n    refreshTokenFailed: boolean,\r\n    refreshTokenErrorMessage: string,\r\n    patchUserRequest: boolean,\r\n    patchUserFailed: boolean,\r\n    patchUserErrorMessage: string,\r\n    logoutRequest: boolean,\r\n    logoutFailed: boolean,\r\n    logoutErrorMessage: string,\r\n}\r\n\r\nconst initialState: TUserState = {\r\n    user: {},\r\n    isAuthorised: false,\r\n    \r\n    registerRequest: false,\r\n    registerFailed: false,\r\n    registerErrorMessage: '',\r\n    loginRequest: false,\r\n    loginFailed: false,\r\n    loginErrorMessage: '',\r\n    forgotPasswordRequest: false,\r\n    forgotPasswordSuccess: false,\r\n    forgotPasswordFailed: false,\r\n    resetPasswordRequest: false,\r\n    resetPasswordSuccess: false,\r\n    resetPasswordFailed: false,\r\n    resetPasswordErrorMessage: '',\r\n    getUserRequest: false,\r\n    getUserFailed: false,\r\n    getUserErrorMessage: '',\r\n    refreshTokenRequest: false,\r\n    refreshTokenSuccess: false,\r\n    refreshTokenFailed: false,\r\n    refreshTokenErrorMessage: '',\r\n    patchUserRequest: false,\r\n    patchUserFailed: false,\r\n    patchUserErrorMessage: '',\r\n    logoutRequest: false,\r\n    logoutFailed: false,\r\n    logoutErrorMessage: '',\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: TUserActions) => {\r\n    switch(action.type) {\r\n        case REGISTER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                registerRequest: true\r\n            }\r\n        }\r\n        case REGISTER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                registerRequestFailed: false,\r\n                user: action.user,\r\n                isAuthorised: true,\r\n                registerRequest: false,\r\n                registerErrorMessage: '',\r\n            };\r\n        }\r\n        case REGISTER_FAILED: {\r\n            return {\r\n                ...state,\r\n                registerRequestFailed: true,\r\n                registerRequest: false,\r\n                registerErrorMessage: action.message,\r\n            };\r\n        }\r\n        case LOGIN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loginRequest: true\r\n            }\r\n        }\r\n        case LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loginRequestFailed: false,\r\n                loginRequest: false,\r\n                user: action.user,\r\n                isAuthorised: true,\r\n                loginErrorMessage: '',\r\n            };\r\n        }\r\n        case LOGIN_FAILED: {\r\n            return {\r\n                ...state,\r\n                loginRequestFailed: true,\r\n                loginRequest: false,\r\n                loginErrorMessage: action.message,\r\n            };\r\n        }\r\n        case FORGOT_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                forgotPasswordRequest: true,\r\n            };\r\n        }\r\n        case FORGOT_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                forgotPasswordSuccess: true,\r\n                forgotPasswordRequest: false,\r\n                forgotPasswordFailed: false,\r\n            };\r\n        }\r\n        case FORGOT_PASSWORD_FAILED: {\r\n            return {\r\n                ...state,\r\n                forgotPasswordFailed: true,\r\n                forgotPasswordRequest: false,\r\n            };\r\n        }\r\n        case RESET_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: true,\r\n            };\r\n        }\r\n        case RESET_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                resetPasswordSuccess: true,\r\n                resetPasswordRequest: false,\r\n                resetPasswordFailed: false,\r\n                resetPasswordErrorMessage: '',\r\n            };\r\n        }\r\n        case RESET_PASSWORD_FAILED: {\r\n            return {\r\n                ...state,\r\n                resetPasswordFailed: true,\r\n                resetPasswordRequest: false,\r\n                resetPasswordErrorMessage: action.message,\r\n            };\r\n        }\r\n        case GET_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                getUserRequest: true,\r\n            };\r\n        }\r\n        case GET_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                getUserRequest: false,\r\n                getUserFailed: false,\r\n                user: action.user,\r\n                isAuthorised: true,\r\n                getUserErrorMessage: '',\r\n            };\r\n        }\r\n        case GET_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                getUserFailed: true,\r\n                getUserRequest: false,\r\n                getUserErrorMessage: action.message,\r\n            };\r\n        }\r\n        case REFRESH_TOKEN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: true,\r\n            };\r\n        }\r\n        case REFRESH_TOKEN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: false,\r\n                refreshTokenFailed: false,\r\n                refreshTokenSuccess: true,\r\n                refreshTokenErrorMessage: '',\r\n            };\r\n        }\r\n        case REFRESH_TOKEN_FAILED: {\r\n            return {\r\n                ...state,\r\n                refreshTokenFailed: true,\r\n                refreshTokenRequest: false,\r\n                refreshTokenErrorMessage: action.message,\r\n            };\r\n        }\r\n        case PATCH_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                patchUserRequest: true,\r\n            };\r\n        }\r\n        case PATCH_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                patchUserRequest: false,\r\n                patchUserFailed: false,\r\n                user: action.user,\r\n                isAuthorised: true,\r\n                patchUserErrorMessage: '',\r\n            };\r\n        }\r\n        case PATCH_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                patchUserFailed: true,\r\n                patchUserRequest: false,\r\n                patchUserErrorMessage: action.message,\r\n            };\r\n        }\r\n        case LOGOUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                logoutRequest: true,\r\n            };\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAuthorised: false,\r\n                user: {},\r\n                logoutRequest: false,\r\n                logoutFailed: false,\r\n                logoutErrorMessage: '',\r\n            };\r\n        }\r\n        case LOGOUT_FAILED: {\r\n            return {\r\n                ...state,\r\n                logoutFailed: true,\r\n                logoutRequest: false,\r\n                logoutErrorMessage: action.message,\r\n            };\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n    TWsActions\r\n  } from '../actions/wsActions';\r\nimport { TOrder } from '../types/data';\r\n\r\nexport type TWsState = {\r\n  wsConnected: boolean;\r\n  orders: TOrder[];\r\n  total: number;\r\n  totalToday: number;\r\n}\r\n\r\nconst initialState: TWsState = {\r\n  wsConnected: false,\r\n  orders: [],\r\n  total: 0,\r\n  totalToday: 0,\r\n};\r\n  \r\n  export const wsReducer = (state = initialState, action: TWsActions) => {\r\n    switch (action.type) {\r\n      case WS_CONNECTION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          wsConnected: true\r\n        };\r\n  \r\n      case WS_CONNECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          wsConnected: false\r\n        };\r\n  \r\n      case WS_CONNECTION_CLOSED:\r\n        return {\r\n          ...state,\r\n          wsConnected: false\r\n        };\r\n  \r\n      case WS_GET_MESSAGE:\r\n        return {\r\n            ...state,\r\n            orders: action.payload.orders,\r\n            total: action.payload.total,\r\n            totalToday: action.payload.totalToday,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n    USER_WS_CONNECTION_SUCCESS,\r\n    USER_WS_CONNECTION_CLOSED,\r\n    USER_WS_CONNECTION_ERROR,\r\n    USER_WS_GET_MESSAGE,\r\n    TWsActions\r\n  } from '../actions/wsActions';\r\n  import { TOrder } from '../types/data';\r\n\r\n  export type TUserWsState = {\r\n    wsConnected: boolean;\r\n    orders: TOrder[];\r\n  }\r\n  \r\n  const initialState: TUserWsState = {\r\n    wsConnected: false,\r\n    orders: [],\r\n  };\r\n  \r\n  export const userWsReducer = (state = initialState, action: TWsActions) => {\r\n    switch (action.type) {\r\n      case USER_WS_CONNECTION_SUCCESS:\r\n        return {\r\n          ...state,\r\n          wsConnected: true\r\n        };\r\n  \r\n      case USER_WS_CONNECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          wsConnected: false\r\n        };\r\n  \r\n      case USER_WS_CONNECTION_CLOSED:\r\n        return {\r\n          ...state,\r\n          wsConnected: false\r\n        };\r\n  \r\n      case USER_WS_GET_MESSAGE:\r\n        return {\r\n            ...state,\r\n            orders: action.payload.orders,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import { combineReducers } from \"redux\";\r\nimport { burgerIngredientsReducer } from './burger-ingredients';\r\nimport { burgerConstructorReducer } from \"./burger-constructor\";\r\nimport { orderReducer } from './order';\r\nimport { userReducer } from \"./user\";\r\nimport { wsReducer } from './wsReducer';\r\nimport { userWsReducer } from './userWsReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    burgerIngredients: burgerIngredientsReducer,\r\n    burgerConstructor: burgerConstructorReducer,\r\n    order: orderReducer,\r\n    user: userReducer,\r\n    orders: wsReducer,\r\n    userOrders: userWsReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { getCookie } from '../../utils/cookie';\r\n\r\ntype TActions = {\r\n  wsInit: string;\r\n  wsClose: string;\r\n  onOpen: string;\r\n  onMessage: string;\r\n  onClose: string;\r\n  onError: string;\r\n}\r\n\r\nexport const socketMiddleware = (wsUrl: string, wsActions: TActions, isUserSocket: boolean = false) => {\r\n  return store => {\r\n\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => action => {\r\n      const { dispatch } = store;\r\n      const { type } = action;\r\n      const { wsInit, wsClose, onOpen, onMessage, onClose, onError } = wsActions;\r\n      const accessToken = getCookie('accessToken');\r\n\r\n      if (type === wsInit) {\r\n        if (isUserSocket && accessToken) {\r\n          socket = new WebSocket(`${wsUrl}?token=${accessToken}`);\r\n        } else {\r\n          socket = new WebSocket(`${wsUrl}`);\r\n        }\r\n      }\r\n      \r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n        socket.onerror = event => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n          if (success) {\r\n            dispatch({ type: onMessage, payload: restParsedData });\r\n          }\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n      }\r\n\r\n      if (socket && type === wsClose) {\r\n        socket.close();\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport {\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_CLOSE,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_GET_MESSAGE,\r\n    USER_WS_CONNECTION_START,\r\n    USER_WS_CONNECTION_CLOSE,\r\n    USER_WS_CONNECTION_SUCCESS,\r\n    USER_WS_CONNECTION_CLOSED,\r\n    USER_WS_CONNECTION_ERROR,\r\n    USER_WS_GET_MESSAGE\r\n} from './actions/wsActions';\r\nimport { socketMiddleware } from './middleware/socketMiddleware';\r\n\r\nconst wsActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    wsClose: WS_CONNECTION_CLOSE,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    onMessage: WS_GET_MESSAGE\r\n};\r\n\r\nconst userWsActions = {\r\n    wsInit: USER_WS_CONNECTION_START,\r\n    wsClose: USER_WS_CONNECTION_CLOSE,\r\n    onOpen: USER_WS_CONNECTION_SUCCESS,\r\n    onClose: USER_WS_CONNECTION_CLOSED,\r\n    onError: USER_WS_CONNECTION_ERROR,\r\n    onMessage: USER_WS_GET_MESSAGE\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst wsUrl = 'wss://norma.nomoreparties.space/orders/all';\r\nconst userWsUrl = 'wss://norma.nomoreparties.space/orders';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(\r\n        thunk,\r\n        socketMiddleware(wsUrl, wsActions),\r\n        socketMiddleware(userWsUrl, userWsActions, true)\r\n    ));\r\n\r\nexport const store = createStore(rootReducer, enhancer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './services/store';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1wx6z\",\"number\":\"styles_number__1DGkx\",\"ingredients\":\"styles_ingredients__Mh3OH\",\"item\":\"styles_item__3eoYc\",\"name\":\"styles_name__2_9-H\",\"done\":\"styles_done__3tIsn\",\"footer\":\"styles_footer__3JnHw\",\"price\":\"styles_price__1bq1f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"styles_details__1mVxS\",\"header\":\"styles_header__2En0K\",\"container\":\"styles_container__3LWZn\",\"info\":\"styles_info__3A869\",\"info_item\":\"styles_info_item__1P1mH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__1MAqk\",\"topDetails\":\"styles_topDetails__3awTR\",\"date\":\"styles_date__1V1J_\",\"heading\":\"styles_heading__2Xx_k\",\"status\":\"styles_status__3mzAc\",\"done\":\"styles_done__2r0KG\",\"bottomDetails\":\"styles_bottomDetails__3rEIA\",\"price\":\"styles_price__15OB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"style_menu__oQ45H\",\"menu_item\":\"style_menu_item__Q49_V\",\"description\":\"style_description__3G9Sx\",\"btn_logout\":\"style_btn_logout__1zdUw\",\"active\":\"style_active__1m76V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"styles_group__3503Z\",\"avatar\":\"styles_avatar__19JNT\",\"more\":\"styles_more__s4YQf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2eEut\",\"statusContainer\":\"styles_statusContainer__2ew6L\",\"list\":\"styles_list__jDMrp\",\"glow\":\"styles_glow__23vPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dummy\":\"styles_dummy__gJl-A\",\"dummy_top\":\"styles_dummy_top__1ZCRo\",\"dummy_bottom\":\"styles_dummy_bottom__3pfrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__1memZ\",\"item\":\"styles_item__1ax6d\",\"active\":\"styles_active__3BcLJ\",\"nav\":\"styles_nav__1Qtj2\",\"inactive\":\"styles_inactive__1bIEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"total\":\"styles_total__2Q8NX\",\"messages\":\"styles_messages__o9IcF\",\"order_info\":\"styles_order_info__1tnQV\",\"submit\":\"styles_submit__11q2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__3kgIg\",\"image\":\"styles_image__3jttx\",\"name\":\"styles_name__OYNyJ\",\"price\":\"styles_price__101m4\",\"count\":\"styles_count__3ZrGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__1GeHz\",\"link\":\"style_link__2fM2C\",\"error\":\"style_error__3GLPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__U0znY\",\"container\":\"style_container__Y6m5K\",\"orders\":\"style_orders__2pSRM\",\"stats\":\"style_stats__3t08I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__3tbwd\",\"columns\":\"styles_columns__2YJgU\",\"column\":\"styles_column__2UCID\",\"done\":\"styles_done__3Uq6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__L4PoI\",\"container\":\"style_container__2vRAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__12vMy\",\"container\":\"style_container__3JOjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drag_icon\":\"styles_drag_icon__36v6L\",\"component\":\"styles_component__rHzfY\",\"hovered\":\"styles_hovered__2CJoX\",\"dragged\":\"styles_dragged__29vgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__1L7-B\",\"container\":\"styles_container__14iGK\",\"close\":\"styles_close__DF9RI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__1hzHC\",\"link\":\"style_link__32ksz\",\"error\":\"style_error__dPbov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__qCJE6\",\"link\":\"style_link__11auC\",\"error\":\"style_error__2BUV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2OMhE\",\"aside\":\"style_aside__3KTY2\",\"error\":\"style_error__3k6gZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__VzfAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1vE3g\",\"order_number\":\"styles_order_number__3r7KX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2rl7S\",\"groups\":\"styles_groups__3RXPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__3gyQa\",\"item\":\"styles_item__2KVoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__cC3NH\",\"link\":\"style_link__1KFem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2H-UB\",\"container\":\"style_container__1Tu7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__1lk7A\",\"link\":\"style_link__DI4ot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__9YuiO\",\"card\":\"styles_card__1LDKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"styles_avatar__30M6_\",\"img\":\"styles_img__3_gZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__DIGE4\",\"content\":\"styles_content__2W7hx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2JC9n\",\"form\":\"style_form__1P1gP\",\"error\":\"style_error__2pHkp\"};"],"sourceRoot":""}